[{"name":"ABSOLUTE_ATTITUDE","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.ABSOLUTE_ATTITUDE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/-a-b-s-o-l-u-t-e_-a-t-t-i-t-u-d-e/index.html","searchKeys":["ABSOLUTE_ATTITUDE","ABSOLUTE_ATTITUDE","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.ABSOLUTE_ATTITUDE"]},{"name":"ABSOLUTE_ATTITUDE","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.ABSOLUTE_ATTITUDE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-a-b-s-o-l-u-t-e_-a-t-t-i-t-u-d-e/index.html","searchKeys":["ABSOLUTE_ATTITUDE","ABSOLUTE_ATTITUDE","com.irurueta.android.navigation.inertial.collectors.SensorType.ABSOLUTE_ATTITUDE"]},{"name":"ACCELEROMETER","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.ACCELEROMETER","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/-a-c-c-e-l-e-r-o-m-e-t-e-r/index.html","searchKeys":["ACCELEROMETER","ACCELEROMETER","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.ACCELEROMETER"]},{"name":"ACCELEROMETER","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.ACCELEROMETER","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-a-c-c-e-l-e-r-o-m-e-t-e-r/index.html","searchKeys":["ACCELEROMETER","ACCELEROMETER","com.irurueta.android.navigation.inertial.collectors.SensorType.ACCELEROMETER"]},{"name":"ACCELEROMETER_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/-a-c-c-e-l-e-r-o-m-e-t-e-r_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["ACCELEROMETER_UNCALIBRATED","ACCELEROMETER_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED"]},{"name":"ACCELEROMETER_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.ACCELEROMETER_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-a-c-c-e-l-e-r-o-m-e-t-e-r_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["ACCELEROMETER_UNCALIBRATED","ACCELEROMETER_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.SensorType.ACCELEROMETER_UNCALIBRATED"]},{"name":"APPROXIMATED","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.APPROXIMATED","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/-a-p-p-r-o-x-i-m-a-t-e-d/index.html","searchKeys":["APPROXIMATED","APPROXIMATED","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.APPROXIMATED"]},{"name":"APPROXIMATED","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.APPROXIMATED","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/-a-p-p-r-o-x-i-m-a-t-e-d/index.html","searchKeys":["APPROXIMATED","APPROXIMATED","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.APPROXIMATED"]},{"name":"BETTER","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.BETTER","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/-b-e-t-t-e-r/index.html","searchKeys":["BETTER","BETTER","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.BETTER"]},{"name":"DYNAMIC_INTERVAL","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.DYNAMIC_INTERVAL","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-d-y-n-a-m-i-c_-i-n-t-e-r-v-a-l/index.html","searchKeys":["DYNAMIC_INTERVAL","DYNAMIC_INTERVAL","com.irurueta.android.navigation.inertial.calibration.intervals.Status.DYNAMIC_INTERVAL"]},{"name":"EULER_METHOD","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.EULER_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-e-u-l-e-r_-m-e-t-h-o-d/index.html","searchKeys":["EULER_METHOD","EULER_METHOD","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.EULER_METHOD"]},{"name":"EULER_METHOD","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.EULER_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-e-u-l-e-r_-m-e-t-h-o-d/index.html","searchKeys":["EULER_METHOD","EULER_METHOD","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.EULER_METHOD"]},{"name":"FAILED","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.FAILED","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-f-a-i-l-e-d/index.html","searchKeys":["FAILED","FAILED","com.irurueta.android.navigation.inertial.calibration.intervals.Status.FAILED"]},{"name":"FASTEST","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.FASTEST","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-f-a-s-t-e-s-t/index.html","searchKeys":["FASTEST","FASTEST","com.irurueta.android.navigation.inertial.collectors.SensorDelay.FASTEST"]},{"name":"GAME","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.GAME","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-g-a-m-e/index.html","searchKeys":["GAME","GAME","com.irurueta.android.navigation.inertial.collectors.SensorDelay.GAME"]},{"name":"GRAVITY","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-g-r-a-v-i-t-y/index.html","searchKeys":["GRAVITY","GRAVITY","com.irurueta.android.navigation.inertial.collectors.SensorType.GRAVITY"]},{"name":"GYROSCOPE","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.GYROSCOPE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/-g-y-r-o-s-c-o-p-e/index.html","searchKeys":["GYROSCOPE","GYROSCOPE","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.GYROSCOPE"]},{"name":"GYROSCOPE","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.GYROSCOPE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-g-y-r-o-s-c-o-p-e/index.html","searchKeys":["GYROSCOPE","GYROSCOPE","com.irurueta.android.navigation.inertial.collectors.SensorType.GYROSCOPE"]},{"name":"GYROSCOPE_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.GYROSCOPE_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/-g-y-r-o-s-c-o-p-e_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["GYROSCOPE_UNCALIBRATED","GYROSCOPE_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.GYROSCOPE_UNCALIBRATED"]},{"name":"GYROSCOPE_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.GYROSCOPE_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-g-y-r-o-s-c-o-p-e_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["GYROSCOPE_UNCALIBRATED","GYROSCOPE_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.SensorType.GYROSCOPE_UNCALIBRATED"]},{"name":"HIGH","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.HIGH","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-h-i-g-h/index.html","searchKeys":["HIGH","HIGH","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.HIGH"]},{"name":"IDLE","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.IDLE","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-i-d-l-e/index.html","searchKeys":["IDLE","IDLE","com.irurueta.android.navigation.inertial.calibration.intervals.Status.IDLE"]},{"name":"INITIALIZATION_COMPLETED","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.INITIALIZATION_COMPLETED","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-i-n-i-t-i-a-l-i-z-a-t-i-o-n_-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["INITIALIZATION_COMPLETED","INITIALIZATION_COMPLETED","com.irurueta.android.navigation.inertial.calibration.intervals.Status.INITIALIZATION_COMPLETED"]},{"name":"INITIALIZING","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.INITIALIZING","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-i-n-i-t-i-a-l-i-z-i-n-g/index.html","searchKeys":["INITIALIZING","INITIALIZING","com.irurueta.android.navigation.inertial.calibration.intervals.Status.INITIALIZING"]},{"name":"LINEAR_ACCELERATION","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.LINEAR_ACCELERATION","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-l-i-n-e-a-r_-a-c-c-e-l-e-r-a-t-i-o-n/index.html","searchKeys":["LINEAR_ACCELERATION","LINEAR_ACCELERATION","com.irurueta.android.navigation.inertial.collectors.SensorType.LINEAR_ACCELERATION"]},{"name":"LOW","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.LOW","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-l-o-w/index.html","searchKeys":["LOW","LOW","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.LOW"]},{"name":"MAGNETOMETER","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.MAGNETOMETER","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/-m-a-g-n-e-t-o-m-e-t-e-r/index.html","searchKeys":["MAGNETOMETER","MAGNETOMETER","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.MAGNETOMETER"]},{"name":"MAGNETOMETER","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.MAGNETOMETER","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-m-a-g-n-e-t-o-m-e-t-e-r/index.html","searchKeys":["MAGNETOMETER","MAGNETOMETER","com.irurueta.android.navigation.inertial.collectors.SensorType.MAGNETOMETER"]},{"name":"MAGNETOMETER_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/-m-a-g-n-e-t-o-m-e-t-e-r_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["MAGNETOMETER_UNCALIBRATED","MAGNETOMETER_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED"]},{"name":"MAGNETOMETER_UNCALIBRATED","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.MAGNETOMETER_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-m-a-g-n-e-t-o-m-e-t-e-r_-u-n-c-a-l-i-b-r-a-t-e-d/index.html","searchKeys":["MAGNETOMETER_UNCALIBRATED","MAGNETOMETER_UNCALIBRATED","com.irurueta.android.navigation.inertial.collectors.SensorType.MAGNETOMETER_UNCALIBRATED"]},{"name":"MAX_DURATION_ONLY","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_DURATION_ONLY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/-m-a-x_-d-u-r-a-t-i-o-n_-o-n-l-y/index.html","searchKeys":["MAX_DURATION_ONLY","MAX_DURATION_ONLY","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_DURATION_ONLY"]},{"name":"MAX_SAMPLES_ONLY","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_SAMPLES_ONLY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/-m-a-x_-s-a-m-p-l-e-s_-o-n-l-y/index.html","searchKeys":["MAX_SAMPLES_ONLY","MAX_SAMPLES_ONLY","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_SAMPLES_ONLY"]},{"name":"MAX_SAMPLES_OR_DURATION","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_SAMPLES_OR_DURATION","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/-m-a-x_-s-a-m-p-l-e-s_-o-r_-d-u-r-a-t-i-o-n/index.html","searchKeys":["MAX_SAMPLES_OR_DURATION","MAX_SAMPLES_OR_DURATION","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.MAX_SAMPLES_OR_DURATION"]},{"name":"MEDIUM","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.MEDIUM","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-m-e-d-i-u-m/index.html","searchKeys":["MEDIUM","MEDIUM","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.MEDIUM"]},{"name":"MID_POINT","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.MID_POINT","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-m-i-d_-p-o-i-n-t/index.html","searchKeys":["MID_POINT","MID_POINT","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.MID_POINT"]},{"name":"MID_POINT","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.MID_POINT","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-m-i-d_-p-o-i-n-t/index.html","searchKeys":["MID_POINT","MID_POINT","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.MID_POINT"]},{"name":"NORMAL","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.NORMAL","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-n-o-r-m-a-l/index.html","searchKeys":["NORMAL","NORMAL","com.irurueta.android.navigation.inertial.collectors.SensorDelay.NORMAL"]},{"name":"NUMERICAL_INSTABILITY_DURING_CALIBRATION","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.NUMERICAL_INSTABILITY_DURING_CALIBRATION","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-n-u-m-e-r-i-c-a-l_-i-n-s-t-a-b-i-l-i-t-y_-d-u-r-i-n-g_-c-a-l-i-b-r-a-t-i-o-n/index.html","searchKeys":["NUMERICAL_INSTABILITY_DURING_CALIBRATION","NUMERICAL_INSTABILITY_DURING_CALIBRATION","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.NUMERICAL_INSTABILITY_DURING_CALIBRATION"]},{"name":"OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-o-v-e-r-a-l-l_-e-x-c-e-s-s-i-v-e_-m-o-v-e-m-e-n-t_-d-e-t-e-c-t-e-d_-d-u-r-i-n-g_-i-n-i-t-i-a-l-i-z-a-t-i-o-n/index.html","searchKeys":["OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION"]},{"name":"OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/-o-v-e-r-a-l-l_-e-x-c-e-s-s-i-v-e_-m-o-v-e-m-e-n-t_-d-e-t-e-c-t-e-d_-d-u-r-i-n-g_-i-n-i-t-i-a-l-i-z-a-t-i-o-n/index.html","searchKeys":["OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.OVERALL_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION"]},{"name":"PRECISE","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.PRECISE","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/-p-r-e-c-i-s-e/index.html","searchKeys":["PRECISE","PRECISE","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.PRECISE"]},{"name":"PRECISE","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.PRECISE","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/-p-r-e-c-i-s-e/index.html","searchKeys":["PRECISE","PRECISE","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.PRECISE"]},{"name":"RELATIVE_ATTITUDE","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.RELATIVE_ATTITUDE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/-r-e-l-a-t-i-v-e_-a-t-t-i-t-u-d-e/index.html","searchKeys":["RELATIVE_ATTITUDE","RELATIVE_ATTITUDE","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.RELATIVE_ATTITUDE"]},{"name":"RELATIVE_ATTITUDE","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.RELATIVE_ATTITUDE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-r-e-l-a-t-i-v-e_-a-t-t-i-t-u-d-e/index.html","searchKeys":["RELATIVE_ATTITUDE","RELATIVE_ATTITUDE","com.irurueta.android.navigation.inertial.collectors.SensorType.RELATIVE_ATTITUDE"]},{"name":"RUNGE_KUTTA","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.RUNGE_KUTTA","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-r-u-n-g-e_-k-u-t-t-a/index.html","searchKeys":["RUNGE_KUTTA","RUNGE_KUTTA","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.RUNGE_KUTTA"]},{"name":"RUNGE_KUTTA","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.RUNGE_KUTTA","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-r-u-n-g-e_-k-u-t-t-a/index.html","searchKeys":["RUNGE_KUTTA","RUNGE_KUTTA","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.RUNGE_KUTTA"]},{"name":"SABATINI","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.SABATINI","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/-s-a-b-a-t-i-n-i/index.html","searchKeys":["SABATINI","SABATINI","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.SABATINI"]},{"name":"SERVICE_DISABLED","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_DISABLED","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-e-r-v-i-c-e_-d-i-s-a-b-l-e-d/index.html","searchKeys":["SERVICE_DISABLED","SERVICE_DISABLED","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_DISABLED"]},{"name":"SERVICE_INVALID","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_INVALID","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-e-r-v-i-c-e_-i-n-v-a-l-i-d/index.html","searchKeys":["SERVICE_INVALID","SERVICE_INVALID","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_INVALID"]},{"name":"SERVICE_MISSING","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_MISSING","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-e-r-v-i-c-e_-m-i-s-s-i-n-g/index.html","searchKeys":["SERVICE_MISSING","SERVICE_MISSING","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_MISSING"]},{"name":"SERVICE_UPDATING","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_UPDATING","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-e-r-v-i-c-e_-u-p-d-a-t-i-n-g/index.html","searchKeys":["SERVICE_UPDATING","SERVICE_UPDATING","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_UPDATING"]},{"name":"SERVICE_VERSION_UPDATE_REQUIRED","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_VERSION_UPDATE_REQUIRED","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-e-r-v-i-c-e_-v-e-r-s-i-o-n_-u-p-d-a-t-e_-r-e-q-u-i-r-e-d/index.html","searchKeys":["SERVICE_VERSION_UPDATE_REQUIRED","SERVICE_VERSION_UPDATE_REQUIRED","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SERVICE_VERSION_UPDATE_REQUIRED"]},{"name":"STATIC_INTERVAL","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.STATIC_INTERVAL","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-s-t-a-t-i-c_-i-n-t-e-r-v-a-l/index.html","searchKeys":["STATIC_INTERVAL","STATIC_INTERVAL","com.irurueta.android.navigation.inertial.calibration.intervals.Status.STATIC_INTERVAL"]},{"name":"SUCCESS","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SUCCESS","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.SUCCESS"]},{"name":"SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-s-u-d-d-e-n_-e-x-c-e-s-s-i-v-e_-m-o-v-e-m-e-n-t_-d-e-t-e-c-t-e-d_-d-u-r-i-n-g_-i-n-i-t-i-a-l-i-z-a-t-i-o-n/index.html","searchKeys":["SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION"]},{"name":"SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/-s-u-d-d-e-n_-e-x-c-e-s-s-i-v-e_-m-o-v-e-m-e-n-t_-d-e-t-e-c-t-e-d_-d-u-r-i-n-g_-i-n-i-t-i-a-l-i-z-a-t-i-o-n/index.html","searchKeys":["SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.SUDDEN_EXCESSIVE_MOVEMENT_DETECTED_DURING_INITIALIZATION"]},{"name":"SUH","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.SUH","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/-s-u-h/index.html","searchKeys":["SUH","SUH","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.SUH"]},{"name":"SUH","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.SUH","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-s-u-h/index.html","searchKeys":["SUH","SUH","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.SUH"]},{"name":"SUH","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.SUH","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-s-u-h/index.html","searchKeys":["SUH","SUH","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.SUH"]},{"name":"TRAWNY","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.TRAWNY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-t-r-a-w-n-y/index.html","searchKeys":["TRAWNY","TRAWNY","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.TRAWNY"]},{"name":"TRAWNY","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.TRAWNY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-t-r-a-w-n-y/index.html","searchKeys":["TRAWNY","TRAWNY","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.TRAWNY"]},{"name":"UI","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.UI","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-u-i/index.html","searchKeys":["UI","UI","com.irurueta.android.navigation.inertial.collectors.SensorDelay.UI"]},{"name":"UNRELIABLE","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.UNRELIABLE","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-u-n-r-e-l-i-a-b-l-e/index.html","searchKeys":["UNRELIABLE","UNRELIABLE","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.UNRELIABLE"]},{"name":"UNRELIABLE_SENSOR","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.UNRELIABLE_SENSOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-u-n-r-e-l-i-a-b-l-e_-s-e-n-s-o-r/index.html","searchKeys":["UNRELIABLE_SENSOR","UNRELIABLE_SENSOR","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.UNRELIABLE_SENSOR"]},{"name":"UNRELIABLE_SENSOR","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.UNRELIABLE_SENSOR","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/-u-n-r-e-l-i-a-b-l-e_-s-e-n-s-o-r/index.html","searchKeys":["UNRELIABLE_SENSOR","UNRELIABLE_SENSOR","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.UNRELIABLE_SENSOR"]},{"name":"YUAN","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.YUAN","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/-y-u-a-n/index.html","searchKeys":["YUAN","YUAN","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.YUAN"]},{"name":"YUAN","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.YUAN","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/-y-u-a-n/index.html","searchKeys":["YUAN","YUAN","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.YUAN"]},{"name":"ZEROES","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.ZEROES","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/-z-e-r-o-e-s/index.html","searchKeys":["ZEROES","ZEROES","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.ZEROES"]},{"name":"abstract class AccumulatedMeasurementEstimator<A : AccumulatedMeasurementEstimator<A, N, C, U, M>, N : AccumulatedMeasurementNoiseEstimator<U, M, *, *>, C : SensorCollector, U : Enum<*>, M : Measurement<U>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, val stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, var completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>? = null, var unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>? = null) : BaseAccumulatedEstimator","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/index.html","searchKeys":["AccumulatedMeasurementEstimator","abstract class AccumulatedMeasurementEstimator<A : AccumulatedMeasurementEstimator<A, N, C, U, M>, N : AccumulatedMeasurementNoiseEstimator<U, M, *, *>, C : SensorCollector, U : Enum<*>, M : Measurement<U>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, val stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, var completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>? = null, var unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>? = null) : BaseAccumulatedEstimator","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator"]},{"name":"abstract class AccumulatedTriadEstimator<A : AccumulatedTriadEstimator<A, N, C, U, M, T>, N : AccumulatedTriadNoiseEstimator<U, M, T, *, *>, C : SensorCollector, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, val stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, var completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>? = null, var unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>? = null) : BaseAccumulatedEstimator","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/index.html","searchKeys":["AccumulatedTriadEstimator","abstract class AccumulatedTriadEstimator<A : AccumulatedTriadEstimator<A, N, C, U, M, T>, N : AccumulatedTriadNoiseEstimator<U, M, T, *, *>, C : SensorCollector, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, val stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, var completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>? = null, var unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>? = null) : BaseAccumulatedEstimator","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator"]},{"name":"abstract class AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/index.html","searchKeys":["AveragingFilter","abstract class AveragingFilter","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter"]},{"name":"abstract class BaseAccumulatedEstimator","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/index.html","searchKeys":["BaseAccumulatedEstimator","abstract class BaseAccumulatedEstimator","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator"]},{"name":"abstract class BaseDoubleFusedECEFAbsolutePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?) : BaseECEFAbsolutePoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["BaseDoubleFusedECEFAbsolutePoseProcessor","abstract class BaseDoubleFusedECEFAbsolutePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?) : BaseECEFAbsolutePoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor"]},{"name":"abstract class BaseDoubleFusedGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/index.html","searchKeys":["BaseDoubleFusedGeomagneticAttitudeProcessor","abstract class BaseDoubleFusedGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor"]},{"name":"abstract class BaseDoubleFusedLocalPoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?) : BaseLocalPoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/index.html","searchKeys":["BaseDoubleFusedLocalPoseProcessor","abstract class BaseDoubleFusedLocalPoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?) : BaseLocalPoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor"]},{"name":"abstract class BaseECEFAbsolutePoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["BaseECEFAbsolutePoseProcessor","abstract class BaseECEFAbsolutePoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor"]},{"name":"abstract class BaseFusedECEFAbsolutePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?) : BaseECEFAbsolutePoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["BaseFusedECEFAbsolutePoseProcessor","abstract class BaseFusedECEFAbsolutePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?) : BaseECEFAbsolutePoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor"]},{"name":"abstract class BaseFusedGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/index.html","searchKeys":["BaseFusedGeomagneticAttitudeProcessor","abstract class BaseFusedGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor"]},{"name":"abstract class BaseFusedLocalPoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?) : BaseLocalPoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/index.html","searchKeys":["BaseFusedLocalPoseProcessor","abstract class BaseFusedLocalPoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?) : BaseLocalPoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor"]},{"name":"abstract class BaseFusedRelativePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialSpeed: SpeedTriad, var processorListener: BaseRelativePoseProcessor.OnProcessedListener?) : BaseRelativePoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/index.html","searchKeys":["BaseFusedRelativePoseProcessor","abstract class BaseFusedRelativePoseProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(val initialSpeed: SpeedTriad, var processorListener: BaseRelativePoseProcessor.OnProcessedListener?) : BaseRelativePoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor"]},{"name":"abstract class BaseGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/index.html","searchKeys":["BaseGeomagneticAttitudeProcessor","abstract class BaseGeomagneticAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor"]},{"name":"abstract class BaseGravityProcessor<T : SensorMeasurement<T>>(var location: Location?, var adjustGravityNorm: Boolean, var processorListener: BaseGravityProcessor.OnProcessedListener<T>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/index.html","searchKeys":["BaseGravityProcessor","abstract class BaseGravityProcessor<T : SensorMeasurement<T>>(var location: Location?, var adjustGravityNorm: Boolean, var processorListener: BaseGravityProcessor.OnProcessedListener<T>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor"]},{"name":"abstract class BaseLeveledRelativeAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/index.html","searchKeys":["BaseLeveledRelativeAttitudeProcessor","abstract class BaseLeveledRelativeAttitudeProcessor<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>(var processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor"]},{"name":"abstract class BaseLevelingEstimator2<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>(val context: Context, val sensorDelay: SensorDelay, val useAccelerometer: Boolean, val startOffsetEnabled: Boolean, val accelerometerSensorType: AccelerometerSensorType, val accelerometerAveragingFilter: AveragingFilter, val estimateCoordinateTransformation: Boolean, val estimateEulerAngles: Boolean, var levelingAvailableListener: L1?, var accuracyChangedListener: L2?, adjustGravityNorm: Boolean)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/index.html","searchKeys":["BaseLevelingEstimator2","abstract class BaseLevelingEstimator2<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>(val context: Context, val sensorDelay: SensorDelay, val useAccelerometer: Boolean, val startOffsetEnabled: Boolean, val accelerometerSensorType: AccelerometerSensorType, val accelerometerAveragingFilter: AveragingFilter, val estimateCoordinateTransformation: Boolean, val estimateEulerAngles: Boolean, var levelingAvailableListener: L1?, var accuracyChangedListener: L2?, adjustGravityNorm: Boolean)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2"]},{"name":"abstract class BaseLevelingEstimator<T : BaseLevelingEstimator<T, L>, L : BaseLevelingEstimator.OnLevelingAvailableListener<T, L>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var levelingAvailableListener: L? = null, var gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/index.html","searchKeys":["BaseLevelingEstimator","abstract class BaseLevelingEstimator<T : BaseLevelingEstimator<T, L>, L : BaseLevelingEstimator.OnLevelingAvailableListener<T, L>>(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var levelingAvailableListener: L? = null, var gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator"]},{"name":"abstract class BaseLevelingProcessor(var processorListener: BaseLevelingProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/index.html","searchKeys":["BaseLevelingProcessor","abstract class BaseLevelingProcessor(var processorListener: BaseLevelingProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor"]},{"name":"abstract class BaseLocalPoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/index.html","searchKeys":["BaseLocalPoseProcessor","abstract class BaseLocalPoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity, val estimatePoseTransformation: Boolean, var processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor"]},{"name":"abstract class BaseRelativeGyroscopeAttitudeEstimator2<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>(val context: Context, val sensorType: GyroscopeSensorType, val sensorDelay: SensorDelay, val startOffsetEnabled: Boolean, val estimateCoordinateTransformation: Boolean, val estimateEulerAngles: Boolean, var attitudeAvailableListener: L1?, var accuracyChangedListener: L2?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/index.html","searchKeys":["BaseRelativeGyroscopeAttitudeEstimator2","abstract class BaseRelativeGyroscopeAttitudeEstimator2<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>(val context: Context, val sensorType: GyroscopeSensorType, val sensorDelay: SensorDelay, val startOffsetEnabled: Boolean, val estimateCoordinateTransformation: Boolean, val estimateEulerAngles: Boolean, var attitudeAvailableListener: L1?, var accuracyChangedListener: L2?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2"]},{"name":"abstract class BaseRelativeGyroscopeAttitudeEstimator<T : BaseRelativeGyroscopeAttitudeEstimator<T, L>, L : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<T, L>>(val context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.GAME, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: L? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/index.html","searchKeys":["BaseRelativeGyroscopeAttitudeEstimator","abstract class BaseRelativeGyroscopeAttitudeEstimator<T : BaseRelativeGyroscopeAttitudeEstimator<T, L>, L : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<T, L>>(val context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.GAME, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: L? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator"]},{"name":"abstract class BaseRelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/index.html","searchKeys":["BaseRelativeGyroscopeAttitudeProcessor","abstract class BaseRelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor"]},{"name":"abstract class BaseRelativePoseProcessor(val initialSpeed: SpeedTriad, var processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/index.html","searchKeys":["BaseRelativePoseProcessor","abstract class BaseRelativePoseProcessor(val initialSpeed: SpeedTriad, var processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor"]},{"name":"abstract class BaseStaticIntervalWithMeasurementGeneratorCalibrator<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, I>, I>(val context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val solveCalibrationWhenEnoughMeasurements: Boolean = true, var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>? = null, var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>? = null, var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>? = null, var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>? = null, var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>? = null, var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>? = null, var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>? = null, var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>? = null, var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>? = null, var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>? = null, var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : StaticIntervalWithMeasurementGeneratorCalibrator<C, I> ","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/index.html","searchKeys":["BaseStaticIntervalWithMeasurementGeneratorCalibrator","abstract class BaseStaticIntervalWithMeasurementGeneratorCalibrator<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, I>, I>(val context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val solveCalibrationWhenEnoughMeasurements: Boolean = true, var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>? = null, var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>? = null, var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>? = null, var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>? = null, var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>? = null, var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>? = null, var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>? = null, var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>? = null, var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>? = null, var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>? = null, var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : StaticIntervalWithMeasurementGeneratorCalibrator<C, I> ","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator"]},{"name":"abstract class BufferedSensorCollector<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>(val context: Context, val sensorDelay: SensorDelay, val capacity: Int, val startOffsetEnabled: Boolean, val stopWhenFilledBuffer: Boolean, val skipWhenProcessing: Boolean, var accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?, var bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?, var measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/index.html","searchKeys":["BufferedSensorCollector","abstract class BufferedSensorCollector<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>(val context: Context, val sensorDelay: SensorDelay, val capacity: Int, val startOffsetEnabled: Boolean, val stopWhenFilledBuffer: Boolean, val skipWhenProcessing: Boolean, var accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?, var bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?, var measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?)","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector"]},{"name":"abstract class CalibrationMeasurementGenerator<I>(val context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/index.html","searchKeys":["CalibrationMeasurementGenerator","abstract class CalibrationMeasurementGenerator<I>(val context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator"]},{"name":"abstract class DirectSensorMeasurementInterpolator<M : SensorMeasurement<M>> : SensorMeasurementInterpolator<DirectSensorMeasurementInterpolator<M>, M> ","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-direct-sensor-measurement-interpolator/index.html","searchKeys":["DirectSensorMeasurementInterpolator","abstract class DirectSensorMeasurementInterpolator<M : SensorMeasurement<M>> : SensorMeasurementInterpolator<DirectSensorMeasurementInterpolator<M>, M> ","com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator"]},{"name":"abstract class ExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/index.html","searchKeys":["ExternalAccelerationCovarianceMatrixEstimator","abstract class ExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double)","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator"]},{"name":"abstract class IntervalDetector<I : IntervalDetector<I, S, U, M, T, D, L>, S : SensorCollector, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>, D : TriadStaticIntervalDetector<U, M, T, D, L>, L : TriadStaticIntervalDetectorListener<U, M, T, D>>(val context: Context, val sensorDelay: SensorDelay, var initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>? = null, var initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>? = null, var errorListener: IntervalDetector.OnErrorListener<I>? = null, var staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>? = null, var dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>? = null, var resetListener: IntervalDetector.OnResetListener<I>? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/index.html","searchKeys":["IntervalDetector","abstract class IntervalDetector<I : IntervalDetector<I, S, U, M, T, D, L>, S : SensorCollector, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>, D : TriadStaticIntervalDetector<U, M, T, D, L>, L : TriadStaticIntervalDetectorListener<U, M, T, D>>(val context: Context, val sensorDelay: SensorDelay, var initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>? = null, var initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>? = null, var errorListener: IntervalDetector.OnErrorListener<I>? = null, var staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>? = null, var dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>? = null, var resetListener: IntervalDetector.OnResetListener<I>? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector"]},{"name":"abstract class LinearSensorMeasurementInterpolator<M : SensorMeasurement<M>>(val copyIfNotInitialized: Boolean) : SensorMeasurementInterpolator<LinearSensorMeasurementInterpolator<M>, M> ","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/index.html","searchKeys":["LinearSensorMeasurementInterpolator","abstract class LinearSensorMeasurementInterpolator<M : SensorMeasurement<M>>(val copyIfNotInitialized: Boolean) : SensorMeasurementInterpolator<LinearSensorMeasurementInterpolator<M>, M> ","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator"]},{"name":"abstract class PhiMatrixEstimator(a: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/index.html","searchKeys":["PhiMatrixEstimator","abstract class PhiMatrixEstimator(a: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator"]},{"name":"abstract class ProcessNoiseCovarianceIntegrator(q: Matrix?, a: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/index.html","searchKeys":["ProcessNoiseCovarianceIntegrator","abstract class ProcessNoiseCovarianceIntegrator(q: Matrix?, a: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator"]},{"name":"abstract class QuadraticSensorMeasurementInterpolator<M : SensorMeasurement<M>>(val copyIfNotInitialized: Boolean) : SensorMeasurementInterpolator<LinearSensorMeasurementInterpolator<M>, M> ","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/index.html","searchKeys":["QuadraticSensorMeasurementInterpolator","abstract class QuadraticSensorMeasurementInterpolator<M : SensorMeasurement<M>>(val copyIfNotInitialized: Boolean) : SensorMeasurementInterpolator<LinearSensorMeasurementInterpolator<M>, M> ","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator"]},{"name":"abstract class SensorCollector(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/index.html","searchKeys":["SensorCollector","abstract class SensorCollector(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.SensorCollector"]},{"name":"abstract class SensorCollector2<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>(val context: Context, val sensorDelay: SensorDelay, val startOffsetEnabled: Boolean, var accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?, var measurementListener: SensorCollector2.OnMeasurementListener<M, C>?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/index.html","searchKeys":["SensorCollector2","abstract class SensorCollector2<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>(val context: Context, val sensorDelay: SensorDelay, val startOffsetEnabled: Boolean, var accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?, var measurementListener: SensorCollector2.OnMeasurementListener<M, C>?)","com.irurueta.android.navigation.inertial.collectors.SensorCollector2"]},{"name":"abstract class SensorMeasurement<T : SensorMeasurement<T>>(var timestamp: Long, var accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/index.html","searchKeys":["SensorMeasurement","abstract class SensorMeasurement<T : SensorMeasurement<T>>(var timestamp: Long, var accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement"]},{"name":"abstract class SensorMeasurementSyncer<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>(val context: Context, val stopWhenFilledBuffer: Boolean, val staleOffsetNanos: Long, val staleDetectionEnabled: Boolean, val skipWhenProcessing: Boolean, var accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?, var bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?, var syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?, var staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/index.html","searchKeys":["SensorMeasurementSyncer","abstract class SensorMeasurementSyncer<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>(val context: Context, val stopWhenFilledBuffer: Boolean, val staleOffsetNanos: Long, val staleDetectionEnabled: Boolean, val skipWhenProcessing: Boolean, var accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?, var bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?, var syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?, var staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer"]},{"name":"abstract class SingleSensorCalibrationMeasurementGenerator<C : SingleSensorCalibrationMeasurementGenerator<C, T, G, L, I>, T, G : MeasurementsGenerator<T, G, L, I>, L : MeasurementsGeneratorListener<T, G, L, I>, I>(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>? = null, var initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>? = null, var errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>? = null, var staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>? = null, var dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>? = null, var staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>? = null, var dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>? = null, var generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>? = null, var resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<I> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/index.html","searchKeys":["SingleSensorCalibrationMeasurementGenerator","abstract class SingleSensorCalibrationMeasurementGenerator<C : SingleSensorCalibrationMeasurementGenerator<C, T, G, L, I>, T, G : MeasurementsGenerator<T, G, L, I>, L : MeasurementsGeneratorListener<T, G, L, I>, I>(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>? = null, var initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>? = null, var errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>? = null, var staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>? = null, var dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>? = null, var staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>? = null, var dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>? = null, var generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>? = null, var resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<I> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator"]},{"name":"abstract class SingleSensorStaticIntervalCalibrator<C : SingleSensorStaticIntervalCalibrator<C, R, I, U, M, T>, R, I : IntervalDetector<I, *, U, M, T, *, *>, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>>(val context: Context, val sensorDelay: SensorDelay, val solveCalibrationWhenEnoughMeasurements: Boolean, var initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?, var initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?, var errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?, var newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?, var readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?, var calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?, var calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?, var stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?, val qualityScoreMapper: QualityScoreMapper<R>)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/index.html","searchKeys":["SingleSensorStaticIntervalCalibrator","abstract class SingleSensorStaticIntervalCalibrator<C : SingleSensorStaticIntervalCalibrator<C, R, I, U, M, T>, R, I : IntervalDetector<I, *, U, M, T, *, *>, U : Enum<*>, M : Measurement<U>, T : Triad<U, M>>(val context: Context, val sensorDelay: SensorDelay, val solveCalibrationWhenEnoughMeasurements: Boolean, var initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?, var initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?, var errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?, var newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?, var readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?, var calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?, var calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?, var stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?, val qualityScoreMapper: QualityScoreMapper<R>)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator"]},{"name":"abstract class SyncedSensorMeasurement(var timestamp: Long)","description":"com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-synced-sensor-measurement/index.html","searchKeys":["SyncedSensorMeasurement","abstract class SyncedSensorMeasurement(var timestamp: Long)","com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement"]},{"name":"abstract fun calibrate(): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrate","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/calibrate.html","searchKeys":["calibrate","abstract fun calibrate(): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrate"]},{"name":"abstract fun copy(): T","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/copy.html","searchKeys":["copy","abstract fun copy(): T","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copy"]},{"name":"abstract fun estimate()","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/estimate.html","searchKeys":["estimate","abstract fun estimate()","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.estimate"]},{"name":"abstract fun estimate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/estimate.html","searchKeys":["estimate","abstract fun estimate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.estimate"]},{"name":"abstract fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/get-accelerometer-average-time-interval-as-time.html","searchKeys":["getAccelerometerAverageTimeIntervalAsTime","abstract fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerAverageTimeIntervalAsTime"]},{"name":"abstract fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","abstract fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"abstract fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","abstract fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"abstract fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/get-accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["getAccelerometerTimeIntervalStandardDeviationAsTime","abstract fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"abstract fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","abstract fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"abstract fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","abstract fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"abstract fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","abstract fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.getThresholdAsMeasurement"]},{"name":"abstract fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","abstract fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getThresholdAsMeasurement"]},{"name":"abstract fun integrate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.integrate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/integrate.html","searchKeys":["integrate","abstract fun integrate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.integrate"]},{"name":"abstract fun interpolate(currentMeasurement: AccelerometerSensorMeasurement, timestamp: Long, result: AccelerometerSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: AccelerometerSensorMeasurement, timestamp: Long, result: AccelerometerSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun interpolate(currentMeasurement: AttitudeSensorMeasurement, timestamp: Long, result: AttitudeSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: AttitudeSensorMeasurement, timestamp: Long, result: AttitudeSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun interpolate(currentMeasurement: GravitySensorMeasurement, timestamp: Long, result: GravitySensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: GravitySensorMeasurement, timestamp: Long, result: GravitySensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun interpolate(currentMeasurement: GyroscopeSensorMeasurement, timestamp: Long, result: GyroscopeSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: GyroscopeSensorMeasurement, timestamp: Long, result: GyroscopeSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun interpolate(currentMeasurement: MagnetometerSensorMeasurement, timestamp: Long, result: MagnetometerSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(currentMeasurement: MagnetometerSensorMeasurement, timestamp: Long, result: MagnetometerSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.interpolate"]},{"name":"abstract fun onAccuracyChanged(accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.SensorCollector.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(collector: C, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(collector: C, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(collector: C, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(collector: C, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: AttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: AttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: DoubleFusedGeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: DoubleFusedGeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: EcefAbsolutePoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: EcefAbsolutePoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: FusedGeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: FusedGeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: GeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: GeomagneticAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: KalmanAbsoluteAttitudeEstimator, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: KalmanAbsoluteAttitudeEstimator, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: KalmanRelativeAttitudeEstimator, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: KalmanRelativeAttitudeEstimator, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: LeveledRelativeAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: LeveledRelativeAttitudeEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: LocalPoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: LocalPoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: RelativePoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: RelativePoseEstimator2, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: T, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: T, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(estimator: T, sensorType: SensorType?, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(estimator: T, sensorType: SensorType?, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAccuracyChanged(syncer: S, sensorType: SensorType, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnAccuracyChangedListener.onAccuracyChanged","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-accuracy-changed-listener/on-accuracy-changed.html","searchKeys":["onAccuracyChanged","abstract fun onAccuracyChanged(syncer: S, sensorType: SensorType, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnAccuracyChangedListener.onAccuracyChanged"]},{"name":"abstract fun onAttitudeAvailable(estimator: AttitudeEstimator2, attitude: Quaternion, timestamp: Long, headingAccuracy: Float?, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: AttitudeEstimator2, attitude: Quaternion, timestamp: Long, headingAccuracy: Float?, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: DoubleFusedGeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: DoubleFusedGeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: FusedGeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: FusedGeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: GeomagneticAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: GeomagneticAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: GeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: GeomagneticAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: KalmanAbsoluteAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: KalmanAbsoluteAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: KalmanRelativeAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: KalmanRelativeAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: LeveledRelativeAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: LeveledRelativeAttitudeEstimator, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: LeveledRelativeAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: LeveledRelativeAttitudeEstimator2, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/-on-attitude-available-listener/on-attitude-available.html","searchKeys":["onAttitudeAvailable","abstract fun onAttitudeAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, yaw: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener.onAttitudeAvailable"]},{"name":"abstract fun onBatteryTemperatureChanged(temperatureCelsius: Float)","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.OnBatteryTemperatureChangedListener.onBatteryTemperatureChanged","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/-on-battery-temperature-changed-listener/on-battery-temperature-changed.html","searchKeys":["onBatteryTemperatureChanged","abstract fun onBatteryTemperatureChanged(temperatureCelsius: Float)","com.irurueta.android.navigation.inertial.BatteryTemperatureService.OnBatteryTemperatureChangedListener.onBatteryTemperatureChanged"]},{"name":"abstract fun onBufferFilled(collector: C)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(collector: C)","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: DoubleFusedGeomagneticAttitudeEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: DoubleFusedGeomagneticAttitudeEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: EcefAbsolutePoseEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: EcefAbsolutePoseEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: FusedGeomagneticAttitudeEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: FusedGeomagneticAttitudeEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: GeomagneticAttitudeEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: GeomagneticAttitudeEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: KalmanAbsoluteAttitudeEstimator, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: KalmanAbsoluteAttitudeEstimator, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: KalmanRelativeAttitudeEstimator, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: KalmanRelativeAttitudeEstimator, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: LeveledRelativeAttitudeEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: LeveledRelativeAttitudeEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: LocalPoseEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: LocalPoseEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(estimator: RelativePoseEstimator2, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(estimator: RelativePoseEstimator2, sensorType: SensorType)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onBufferFilled(syncer: S, sensorType: SensorType)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnBufferFilledListener.onBufferFilled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-buffer-filled-listener/on-buffer-filled.html","searchKeys":["onBufferFilled","abstract fun onBufferFilled(syncer: S, sensorType: SensorType)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnBufferFilledListener.onBufferFilled"]},{"name":"abstract fun onCalibrationCompleted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener.onCalibrationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-calibration-completed-listener/on-calibration-completed.html","searchKeys":["onCalibrationCompleted","abstract fun onCalibrationCompleted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener.onCalibrationCompleted"]},{"name":"abstract fun onCalibrationCompleted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener.onCalibrationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-calibration-completed-listener/on-calibration-completed.html","searchKeys":["onCalibrationCompleted","abstract fun onCalibrationCompleted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener.onCalibrationCompleted"]},{"name":"abstract fun onCalibrationSolvingStarted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener.onCalibrationSolvingStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-calibration-solving-started-listener/on-calibration-solving-started.html","searchKeys":["onCalibrationSolvingStarted","abstract fun onCalibrationSolvingStarted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener.onCalibrationSolvingStarted"]},{"name":"abstract fun onCalibrationSolvingStarted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener.onCalibrationSolvingStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-calibration-solving-started-listener/on-calibration-solving-started.html","searchKeys":["onCalibrationSolvingStarted","abstract fun onCalibrationSolvingStarted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener.onCalibrationSolvingStarted"]},{"name":"abstract fun onCurrentLocation(location: Location)","description":"com.irurueta.android.navigation.inertial.LocationService.OnCurrentLocationListener.onCurrentLocation","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-on-current-location-listener/on-current-location.html","searchKeys":["onCurrentLocation","abstract fun onCurrentLocation(location: Location)","com.irurueta.android.navigation.inertial.LocationService.OnCurrentLocationListener.onCurrentLocation"]},{"name":"abstract fun onDynamicIntervalDetected(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-dynamic-interval-detected-listener/on-dynamic-interval-detected.html","searchKeys":["onDynamicIntervalDetected","abstract fun onDynamicIntervalDetected(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected"]},{"name":"abstract fun onDynamicIntervalDetected(detector: T, instantaneousAvgX: Double, instantaneousAvgY: Double, instantaneousAvgZ: Double, instantaneousStdX: Double, instantaneousStdY: Double, instantaneousStdZ: Double, accumulatedAvgX: Double, accumulatedAvgY: Double, accumulatedAvgZ: Double, accumulatedStdX: Double, accumulatedStdY: Double, accumulatedStdZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-dynamic-interval-detected-listener/on-dynamic-interval-detected.html","searchKeys":["onDynamicIntervalDetected","abstract fun onDynamicIntervalDetected(detector: T, instantaneousAvgX: Double, instantaneousAvgY: Double, instantaneousAvgZ: Double, instantaneousStdX: Double, instantaneousStdY: Double, instantaneousStdZ: Double, accumulatedAvgX: Double, accumulatedAvgY: Double, accumulatedAvgZ: Double, accumulatedStdX: Double, accumulatedStdY: Double, accumulatedStdZ: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected"]},{"name":"abstract fun onDynamicIntervalDetected(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-dynamic-interval-detected-listener/on-dynamic-interval-detected.html","searchKeys":["onDynamicIntervalDetected","abstract fun onDynamicIntervalDetected(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected"]},{"name":"abstract fun onDynamicIntervalDetected(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-dynamic-interval-detected-listener/on-dynamic-interval-detected.html","searchKeys":["onDynamicIntervalDetected","abstract fun onDynamicIntervalDetected(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected"]},{"name":"abstract fun onDynamicIntervalDetected(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-dynamic-interval-detected-listener/on-dynamic-interval-detected.html","searchKeys":["onDynamicIntervalDetected","abstract fun onDynamicIntervalDetected(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener.onDynamicIntervalDetected"]},{"name":"abstract fun onDynamicIntervalSkipped(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-dynamic-interval-skipped-listener/on-dynamic-interval-skipped.html","searchKeys":["onDynamicIntervalSkipped","abstract fun onDynamicIntervalSkipped(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped"]},{"name":"abstract fun onDynamicIntervalSkipped(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-dynamic-interval-skipped-listener/on-dynamic-interval-skipped.html","searchKeys":["onDynamicIntervalSkipped","abstract fun onDynamicIntervalSkipped(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped"]},{"name":"abstract fun onDynamicIntervalSkipped(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-dynamic-interval-skipped-listener/on-dynamic-interval-skipped.html","searchKeys":["onDynamicIntervalSkipped","abstract fun onDynamicIntervalSkipped(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped"]},{"name":"abstract fun onDynamicIntervalSkipped(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-dynamic-interval-skipped-listener/on-dynamic-interval-skipped.html","searchKeys":["onDynamicIntervalSkipped","abstract fun onDynamicIntervalSkipped(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener.onDynamicIntervalSkipped"]},{"name":"abstract fun onError(calibrator: C, errorReason: CalibratorErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(calibrator: C, errorReason: CalibratorErrorReason)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnErrorListener.onError"]},{"name":"abstract fun onError(calibrator: C, errorReason: CalibratorErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(calibrator: C, errorReason: CalibratorErrorReason)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener.onError"]},{"name":"abstract fun onError(detector: T, reason: ErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(detector: T, reason: ErrorReason)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnErrorListener.onError"]},{"name":"abstract fun onError(generator: AccelerometerAndGyroscopeMeasurementGenerator, reason: ErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(generator: AccelerometerAndGyroscopeMeasurementGenerator, reason: ErrorReason)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener.onError"]},{"name":"abstract fun onError(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, reason: ErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, reason: ErrorReason)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener.onError"]},{"name":"abstract fun onError(generator: C, reason: ErrorReason)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnErrorListener.onError","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(generator: C, reason: ErrorReason)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnErrorListener.onError"]},{"name":"abstract fun onEstimation(estimator: GravityEstimator, gx: Double, gy: Double, gz: Double, timestamp: Long)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.OnEstimationListener.onEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/-on-estimation-listener/on-estimation.html","searchKeys":["onEstimation","abstract fun onEstimation(estimator: GravityEstimator, gx: Double, gy: Double, gz: Double, timestamp: Long)","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.OnEstimationListener.onEstimation"]},{"name":"abstract fun onEstimationCompleted(estimator: A)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnEstimationCompletedListener.onEstimationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/-on-estimation-completed-listener/on-estimation-completed.html","searchKeys":["onEstimationCompleted","abstract fun onEstimationCompleted(estimator: A)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnEstimationCompletedListener.onEstimationCompleted"]},{"name":"abstract fun onEstimationCompleted(estimator: A)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnEstimationCompletedListener.onEstimationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/-on-estimation-completed-listener/on-estimation-completed.html","searchKeys":["onEstimationCompleted","abstract fun onEstimationCompleted(estimator: A)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnEstimationCompletedListener.onEstimationCompleted"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: StandardDeviationBodyKinematics, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(generator: AccelerometerAndGyroscopeMeasurementGenerator, measurement: StandardDeviationBodyKinematics)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(generator: AccelerometerAndGyroscopeMeasurementGenerator, measurement: StandardDeviationBodyKinematics)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedAccelerometerMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: StandardDeviationBodyKinematics)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-accelerometer-measurement-listener/on-generated-accelerometer-measurement.html","searchKeys":["onGeneratedAccelerometerMeasurement","abstract fun onGeneratedAccelerometerMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: StandardDeviationBodyKinematics)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener.onGeneratedAccelerometerMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalGyroscopeCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(calibrator: StaticIntervalGyroscopeCalibrator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(generator: AccelerometerAndGyroscopeMeasurementGenerator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(generator: AccelerometerAndGyroscopeMeasurementGenerator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedGyroscopeMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-gyroscope-measurement-listener/on-generated-gyroscope-measurement.html","searchKeys":["onGeneratedGyroscopeMeasurement","abstract fun onGeneratedGyroscopeMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener.onGeneratedGyroscopeMeasurement"]},{"name":"abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-magnetometer-measurement-listener/on-generated-magnetometer-measurement.html","searchKeys":["onGeneratedMagnetometerMeasurement","abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement"]},{"name":"abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-magnetometer-measurement-listener/on-generated-magnetometer-measurement.html","searchKeys":["onGeneratedMagnetometerMeasurement","abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement"]},{"name":"abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalMagnetometerCalibrator, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-on-generated-magnetometer-measurement-listener/on-generated-magnetometer-measurement.html","searchKeys":["onGeneratedMagnetometerMeasurement","abstract fun onGeneratedMagnetometerMeasurement(calibrator: StaticIntervalMagnetometerCalibrator, measurement: StandardDeviationBodyMagneticFluxDensity, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement"]},{"name":"abstract fun onGeneratedMagnetometerMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: StandardDeviationBodyMagneticFluxDensity)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-magnetometer-measurement-listener/on-generated-magnetometer-measurement.html","searchKeys":["onGeneratedMagnetometerMeasurement","abstract fun onGeneratedMagnetometerMeasurement(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, measurement: StandardDeviationBodyMagneticFluxDensity)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener.onGeneratedMagnetometerMeasurement"]},{"name":"abstract fun onGeneratedMeasurement(generator: C, measurement: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener.onGeneratedMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-generated-measurement-listener/on-generated-measurement.html","searchKeys":["onGeneratedMeasurement","abstract fun onGeneratedMeasurement(generator: C, measurement: T)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener.onGeneratedMeasurement"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: SingleSensorStaticIntervalAccelerometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-on-initial-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: SingleSensorStaticIntervalAccelerometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-initial-accelerometer-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-initial-gyroscope-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-initial-accelerometer-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-accelerometer-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-gyroscope-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-accelerometer-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-gyroscope-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialBiasAvailable(calibrator: StaticIntervalGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-on-initial-gyroscope-bias-available-listener/on-initial-bias-available.html","searchKeys":["onInitialBiasAvailable","abstract fun onInitialBiasAvailable(calibrator: StaticIntervalGyroscopeCalibrator, biasX: Double, biasY: Double, biasZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener.onInitialBiasAvailable"]},{"name":"abstract fun onInitialHardIronAvailable(calibrator: SingleSensorStaticIntervalMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener.onInitialHardIronAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-on-initial-hard-iron-available-listener/on-initial-hard-iron-available.html","searchKeys":["onInitialHardIronAvailable","abstract fun onInitialHardIronAvailable(calibrator: SingleSensorStaticIntervalMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener.onInitialHardIronAvailable"]},{"name":"abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-magnetometer-hard-iron-available-listener/on-initial-hard-iron-available.html","searchKeys":["onInitialHardIronAvailable","abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable"]},{"name":"abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-magnetometer-hard-iron-available-listener/on-initial-hard-iron-available.html","searchKeys":["onInitialHardIronAvailable","abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable"]},{"name":"abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-on-initial-magnetometer-hard-iron-available-listener/on-initial-hard-iron-available.html","searchKeys":["onInitialHardIronAvailable","abstract fun onInitialHardIronAvailable(calibrator: StaticIntervalMagnetometerCalibrator, hardIronX: Double, hardIronY: Double, hardIronZ: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener.onInitialHardIronAvailable"]},{"name":"abstract fun onInitializationCompleted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationCompleted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationCompleted(detector: T, baseNoiseLevel: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(detector: T, baseNoiseLevel: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationCompleted(generator: AccelerometerAndGyroscopeMeasurementGenerator, baseNoiseLevel: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(generator: AccelerometerAndGyroscopeMeasurementGenerator, baseNoiseLevel: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationCompleted(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, baseNoiseLevel: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator, baseNoiseLevel: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationCompleted(generator: C, baseNoiseLevel: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-initialization-completed-listener/on-initialization-completed.html","searchKeys":["onInitializationCompleted","abstract fun onInitializationCompleted(generator: C, baseNoiseLevel: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener.onInitializationCompleted"]},{"name":"abstract fun onInitializationStarted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onInitializationStarted(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onInitializationStarted(detector: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(detector: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onInitializationStarted(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onInitializationStarted(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onInitializationStarted(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-initialization-started-listener/on-initialization-started.html","searchKeys":["onInitializationStarted","abstract fun onInitializationStarted(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener.onInitializationStarted"]},{"name":"abstract fun onLevelingAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.OnLevelingAvailableListener.onLevelingAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/-on-leveling-available-listener/on-leveling-available.html","searchKeys":["onLevelingAvailable","abstract fun onLevelingAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.OnLevelingAvailableListener.onLevelingAvailable"]},{"name":"abstract fun onLevelingAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, coordinateTransformation: CoordinateTransformation?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnLevelingAvailableListener.onLevelingAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/-on-leveling-available-listener/on-leveling-available.html","searchKeys":["onLevelingAvailable","abstract fun onLevelingAvailable(estimator: T, attitude: Quaternion, timestamp: Long, roll: Double?, pitch: Double?, coordinateTransformation: CoordinateTransformation?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnLevelingAvailableListener.onLevelingAvailable"]},{"name":"abstract fun onLocationAvailability(available: Boolean)","description":"com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener.onLocationAvailability","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-on-location-update-listener/on-location-availability.html","searchKeys":["onLocationAvailability","abstract fun onLocationAvailability(available: Boolean)","com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener.onLocationAvailability"]},{"name":"abstract fun onLocationChanged(location: Location)","description":"com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener.onLocationChanged","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-on-location-update-listener/on-location-changed.html","searchKeys":["onLocationChanged","abstract fun onLocationChanged(location: Location)","com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener.onLocationChanged"]},{"name":"abstract fun onLocationPermissionRequestResult(result: LocationPermissionService.LocationPermissionResult)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.OnLocationPermissionRequestResultListener.onLocationPermissionRequestResult","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-on-location-permission-request-result-listener/on-location-permission-request-result.html","searchKeys":["onLocationPermissionRequestResult","abstract fun onLocationPermissionRequestResult(result: LocationPermissionService.LocationPermissionResult)","com.irurueta.android.navigation.inertial.LocationPermissionService.OnLocationPermissionRequestResultListener.onLocationPermissionRequestResult"]},{"name":"abstract fun onMeasurement(ax: Float, ay: Float, az: Float, bx: Float?, by: Float?, bz: Float?, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(ax: Float, ay: Float, az: Float, bx: Float?, by: Float?, bz: Float?, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onMeasurement(bx: Float, by: Float, bz: Float, hardIronX: Float?, hardIronY: Float?, hardIronZ: Float?, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(bx: Float, by: Float, bz: Float, hardIronX: Float?, hardIronY: Float?, hardIronZ: Float?, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onMeasurement(collector: C, measurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(collector: C, measurement: M)","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onMeasurement(collector: C, measurement: M, bufferPosition: Int)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(collector: C, measurement: M, bufferPosition: Int)","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onMeasurement(gx: Float, gy: Float, gz: Float, g: Double, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(gx: Float, gy: Float, gz: Float, g: Double, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onMeasurement(wx: Float, wy: Float, wz: Float, bx: Float?, by: Float?, bz: Float?, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.OnMeasurementListener.onMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/-on-measurement-listener/on-measurement.html","searchKeys":["onMeasurement","abstract fun onMeasurement(wx: Float, wy: Float, wz: Float, bx: Float?, by: Float?, bz: Float?, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.OnMeasurementListener.onMeasurement"]},{"name":"abstract fun onNewCalibrationMeasurementAvailable(calibrator: C, newMeasurement: R, measurementsFoundSoFar: Int, requiredMeasurements: Int)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener.onNewCalibrationMeasurementAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-new-calibration-measurement-available-listener/on-new-calibration-measurement-available.html","searchKeys":["onNewCalibrationMeasurementAvailable","abstract fun onNewCalibrationMeasurementAvailable(calibrator: C, newMeasurement: R, measurementsFoundSoFar: Int, requiredMeasurements: Int)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener.onNewCalibrationMeasurementAvailable"]},{"name":"abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-on-numerical-instabilities-detected-listener/on-numerical-instability-detected.html","searchKeys":["onNumericalInstabilityDetected","abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected"]},{"name":"abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor2)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-on-numerical-instabilities-detected-listener/on-numerical-instability-detected.html","searchKeys":["onNumericalInstabilityDetected","abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor2)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected"]},{"name":"abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor3)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-on-numerical-instabilities-detected-listener/on-numerical-instability-detected.html","searchKeys":["onNumericalInstabilityDetected","abstract fun onNumericalInstabilityDetected(processor: KalmanAbsoluteAttitudeProcessor3)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected"]},{"name":"abstract fun onNumericalInstabilityDetected(processor: KalmanRelativeAttitudeProcessor)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-on-numerical-instabilities-detected-listener/on-numerical-instability-detected.html","searchKeys":["onNumericalInstabilityDetected","abstract fun onNumericalInstabilityDetected(processor: KalmanRelativeAttitudeProcessor)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected"]},{"name":"abstract fun onNumericalInstabilityDetected(processor: KalmanRelativeAttitudeProcessor2)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-on-numerical-instabilities-detected-listener/on-numerical-instability-detected.html","searchKeys":["onNumericalInstabilityDetected","abstract fun onNumericalInstabilityDetected(processor: KalmanRelativeAttitudeProcessor2)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener.onNumericalInstabilityDetected"]},{"name":"abstract fun onPoseAvailable(estimator: EcefAbsolutePoseEstimator2, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnPoseAvailableListener.onPoseAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-pose-available-listener/on-pose-available.html","searchKeys":["onPoseAvailable","abstract fun onPoseAvailable(estimator: EcefAbsolutePoseEstimator2, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnPoseAvailableListener.onPoseAvailable"]},{"name":"abstract fun onPoseAvailable(estimator: LocalPoseEstimator2, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnPoseAvailableListener.onPoseAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-pose-available-listener/on-pose-available.html","searchKeys":["onPoseAvailable","abstract fun onPoseAvailable(estimator: LocalPoseEstimator2, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnPoseAvailableListener.onPoseAvailable"]},{"name":"abstract fun onPoseAvailable(estimator: RelativePoseEstimator, timestamp: Long, pose: EuclideanTransformation3D)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.OnPoseAvailableListener.onPoseAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/-on-pose-available-listener/on-pose-available.html","searchKeys":["onPoseAvailable","abstract fun onPoseAvailable(estimator: RelativePoseEstimator, timestamp: Long, pose: EuclideanTransformation3D)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.OnPoseAvailableListener.onPoseAvailable"]},{"name":"abstract fun onPoseAvailable(estimator: RelativePoseEstimator2, timestamp: Long, poseTransformation: EuclideanTransformation3D)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnPoseAvailableListener.onPoseAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-pose-available-listener/on-pose-available.html","searchKeys":["onPoseAvailable","abstract fun onPoseAvailable(estimator: RelativePoseEstimator2, timestamp: Long, poseTransformation: EuclideanTransformation3D)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnPoseAvailableListener.onPoseAvailable"]},{"name":"abstract fun onPoseAvailable(estimator: T, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.OnPoseAvailableListener.onPoseAvailable","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/-on-pose-available-listener/on-pose-available.html","searchKeys":["onPoseAvailable","abstract fun onPoseAvailable(estimator: T, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.OnPoseAvailableListener.onPoseAvailable"]},{"name":"abstract fun onProcessed(processor: AttitudeProcessor, attitude: Quaternion, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: AttitudeProcessor, attitude: Quaternion, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseECEFAbsolutePoseProcessor, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseECEFAbsolutePoseProcessor, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseFusedGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseFusedGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseFusedGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseFusedGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseGeomagneticAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, magnetometerAccuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseGravityProcessor<T>, gx: Double, gy: Double, gz: Double, timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseGravityProcessor<T>, gx: Double, gy: Double, gz: Double, timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseLeveledRelativeAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseLeveledRelativeAttitudeProcessor<M, S>, fusedAttitude: Quaternion, accelerometerOrGravityAccuracy: SensorAccuracy?, gyroscopeAccuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseLevelingProcessor, attitude: Quaternion)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseLevelingProcessor, attitude: Quaternion)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseLocalPoseProcessor, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseLocalPoseProcessor, currentFrame: ECEFFrame, previousFrame: ECEFFrame, initialFrame: ECEFFrame, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseRelativeGyroscopeAttitudeProcessor, attitude: Quaternion, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseRelativeGyroscopeAttitudeProcessor, attitude: Quaternion, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: BaseRelativePoseProcessor, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: BaseRelativePoseProcessor, timestamp: Long, poseTransformation: EuclideanTransformation3D?)","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor2, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor2, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor3, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor3, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor4, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor4, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor5, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanAbsoluteAttitudeProcessor5, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanRelativeAttitudeProcessor, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanRelativeAttitudeProcessor, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnProcessedListener.onProcessed"]},{"name":"abstract fun onProcessed(processor: KalmanRelativeAttitudeProcessor2, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnProcessedListener.onProcessed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-on-processed-listener/on-processed.html","searchKeys":["onProcessed","abstract fun onProcessed(processor: KalmanRelativeAttitudeProcessor2, attitude: Quaternion, eulerAngles: DoubleArray?, quaternionCovariance: Matrix?, eulerAnglesCovariance: Matrix?, accelerometerCovariance: Matrix?, rotationAxisCovariance: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnProcessedListener.onProcessed"]},{"name":"abstract fun onReadyToSolveCalibration(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener.onReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-ready-to-solve-calibration-listener/on-ready-to-solve-calibration.html","searchKeys":["onReadyToSolveCalibration","abstract fun onReadyToSolveCalibration(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener.onReadyToSolveCalibration"]},{"name":"abstract fun onReadyToSolveCalibration(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener.onReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-ready-to-solve-calibration-listener/on-ready-to-solve-calibration.html","searchKeys":["onReadyToSolveCalibration","abstract fun onReadyToSolveCalibration(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener.onReadyToSolveCalibration"]},{"name":"abstract fun onReset(detector: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnResetListener.onReset","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-reset-listener/on-reset.html","searchKeys":["onReset","abstract fun onReset(detector: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnResetListener.onReset"]},{"name":"abstract fun onReset(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener.onReset","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-reset-listener/on-reset.html","searchKeys":["onReset","abstract fun onReset(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener.onReset"]},{"name":"abstract fun onReset(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener.onReset","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-reset-listener/on-reset.html","searchKeys":["onReset","abstract fun onReset(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener.onReset"]},{"name":"abstract fun onReset(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnResetListener.onReset","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-reset-listener/on-reset.html","searchKeys":["onReset","abstract fun onReset(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnResetListener.onReset"]},{"name":"abstract fun onStaleMeasurements(syncer: S, sensorType: SensorType, measurements: Collection<SensorMeasurement<*>>)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener.onStaleMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-stale-detected-measurements-listener/on-stale-measurements.html","searchKeys":["onStaleMeasurements","abstract fun onStaleMeasurements(syncer: S, sensorType: SensorType, measurements: Collection<SensorMeasurement<*>>)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener.onStaleMeasurements"]},{"name":"abstract fun onStaticIntervalDetected(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener.onStaticIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-static-interval-detected-listener/on-static-interval-detected.html","searchKeys":["onStaticIntervalDetected","abstract fun onStaticIntervalDetected(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener.onStaticIntervalDetected"]},{"name":"abstract fun onStaticIntervalDetected(detector: T, instantaneousAvgX: Double, instantaneousAvgY: Double, instantaneousAvgZ: Double, instantaneousStdX: Double, instantaneousStdY: Double, instantaneousStdZ: Double)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnStaticIntervalDetectedListener.onStaticIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-static-interval-detected-listener/on-static-interval-detected.html","searchKeys":["onStaticIntervalDetected","abstract fun onStaticIntervalDetected(detector: T, instantaneousAvgX: Double, instantaneousAvgY: Double, instantaneousAvgZ: Double, instantaneousStdX: Double, instantaneousStdY: Double, instantaneousStdZ: Double)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnStaticIntervalDetectedListener.onStaticIntervalDetected"]},{"name":"abstract fun onStaticIntervalDetected(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-static-interval-detected-listener/on-static-interval-detected.html","searchKeys":["onStaticIntervalDetected","abstract fun onStaticIntervalDetected(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected"]},{"name":"abstract fun onStaticIntervalDetected(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-static-interval-detected-listener/on-static-interval-detected.html","searchKeys":["onStaticIntervalDetected","abstract fun onStaticIntervalDetected(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected"]},{"name":"abstract fun onStaticIntervalDetected(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-static-interval-detected-listener/on-static-interval-detected.html","searchKeys":["onStaticIntervalDetected","abstract fun onStaticIntervalDetected(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener.onStaticIntervalDetected"]},{"name":"abstract fun onStaticIntervalSkipped(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-static-interval-skipped-listener/on-static-interval-skipped.html","searchKeys":["onStaticIntervalSkipped","abstract fun onStaticIntervalSkipped(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped"]},{"name":"abstract fun onStaticIntervalSkipped(generator: AccelerometerAndGyroscopeMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-static-interval-skipped-listener/on-static-interval-skipped.html","searchKeys":["onStaticIntervalSkipped","abstract fun onStaticIntervalSkipped(generator: AccelerometerAndGyroscopeMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped"]},{"name":"abstract fun onStaticIntervalSkipped(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-static-interval-skipped-listener/on-static-interval-skipped.html","searchKeys":["onStaticIntervalSkipped","abstract fun onStaticIntervalSkipped(generator: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped"]},{"name":"abstract fun onStaticIntervalSkipped(generator: C)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-static-interval-skipped-listener/on-static-interval-skipped.html","searchKeys":["onStaticIntervalSkipped","abstract fun onStaticIntervalSkipped(generator: C)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener.onStaticIntervalSkipped"]},{"name":"abstract fun onStopped(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnStoppedListener.onStopped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-stopped-listener/on-stopped.html","searchKeys":["onStopped","abstract fun onStopped(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnStoppedListener.onStopped"]},{"name":"abstract fun onStopped(calibrator: C)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener.onStopped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-stopped-listener/on-stopped.html","searchKeys":["onStopped","abstract fun onStopped(calibrator: C)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener.onStopped"]},{"name":"abstract fun onSyncedMeasurements(syncer: S, measurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnSyncedMeasurementsListener.onSyncedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-synced-measurements-listener/on-synced-measurements.html","searchKeys":["onSyncedMeasurements","abstract fun onSyncedMeasurements(syncer: S, measurement: M)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnSyncedMeasurementsListener.onSyncedMeasurements"]},{"name":"abstract fun onUnreliable(estimator: A)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnUnreliableListener.onUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/-on-unreliable-listener/on-unreliable.html","searchKeys":["onUnreliable","abstract fun onUnreliable(estimator: A)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnUnreliableListener.onUnreliable"]},{"name":"abstract fun onUnreliable(estimator: A)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnUnreliableListener.onUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/-on-unreliable-listener/on-unreliable.html","searchKeys":["onUnreliable","abstract fun onUnreliable(estimator: A)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnUnreliableListener.onUnreliable"]},{"name":"abstract fun onUnreliableGravityEstimation(calibrator: SingleSensorStaticIntervalAccelerometerCalibrator)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-on-unreliable-gravity-estimation-listener/on-unreliable-gravity-estimation.html","searchKeys":["onUnreliableGravityEstimation","abstract fun onUnreliableGravityEstimation(calibrator: SingleSensorStaticIntervalAccelerometerCalibrator)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation"]},{"name":"abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-unreliable-gravity-estimation-listener/on-unreliable-gravity-estimation.html","searchKeys":["onUnreliableGravityEstimation","abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerAndGyroscopeCalibrator)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation"]},{"name":"abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerCalibrator)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-unreliable-gravity-estimation-listener/on-unreliable-gravity-estimation.html","searchKeys":["onUnreliableGravityEstimation","abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerCalibrator)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation"]},{"name":"abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-unreliable-gravity-estimation-listener/on-unreliable-gravity-estimation.html","searchKeys":["onUnreliableGravityEstimation","abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation"]},{"name":"abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-unreliable-gravity-estimation-listener/on-unreliable-gravity-estimation.html","searchKeys":["onUnreliableGravityEstimation","abstract fun onUnreliableGravityEstimation(calibrator: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener.onUnreliableGravityEstimation"]},{"name":"abstract fun process(gx: Double, gy: Double, gz: Double)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/process.html","searchKeys":["process","abstract fun process(gx: Double, gy: Double, gz: Double)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.process"]},{"name":"abstract fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long = measurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/process.html","searchKeys":["process","abstract fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long = measurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.process"]},{"name":"abstract fun process(measurement: T, timestamp: Long = measurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/process.html","searchKeys":["process","abstract fun process(measurement: T, timestamp: Long = measurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.process"]},{"name":"abstract fun process(syncedMeasurement: S): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","abstract fun process(syncedMeasurement: S): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.process"]},{"name":"abstract fun process(syncedMeasurement: S): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","abstract fun process(syncedMeasurement: S): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.process"]},{"name":"abstract fun process(syncedMeasurement: S): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/process.html","searchKeys":["process","abstract fun process(syncedMeasurement: S): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.process"]},{"name":"abstract fun process(syncedMeasurement: S): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/process.html","searchKeys":["process","abstract fun process(syncedMeasurement: S): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.process"]},{"name":"abstract fun push(previousMeasurement: AccelerometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: AccelerometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.push"]},{"name":"abstract fun push(previousMeasurement: AttitudeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: AttitudeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.push"]},{"name":"abstract fun push(previousMeasurement: GravitySensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: GravitySensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.push"]},{"name":"abstract fun push(previousMeasurement: GyroscopeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: GyroscopeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.push"]},{"name":"abstract fun push(previousMeasurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: M)","com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.push"]},{"name":"abstract fun push(previousMeasurement: MagnetometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-sensor-measurement-interpolator/push.html","searchKeys":["push","abstract fun push(previousMeasurement: MagnetometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.push"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator.reset"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator.reset"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator.reset"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator.reset"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator.reset"]},{"name":"abstract fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-sensor-measurement-interpolator/reset.html","searchKeys":["reset","abstract fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator.reset"]},{"name":"abstract fun start()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/start.html","searchKeys":["start","abstract fun start()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.start"]},{"name":"abstract fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/start.html","searchKeys":["start","abstract fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.start"]},{"name":"abstract fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/start.html","searchKeys":["start","abstract fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.start"]},{"name":"abstract fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/start.html","searchKeys":["start","abstract fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.start"]},{"name":"abstract fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/start.html","searchKeys":["start","abstract fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.start"]},{"name":"abstract fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/stop.html","searchKeys":["stop","abstract fun stop()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.stop"]},{"name":"abstract fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/stop.html","searchKeys":["stop","abstract fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.stop"]},{"name":"abstract fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/stop.html","searchKeys":["stop","abstract fun stop()","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.stop"]},{"name":"abstract fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/stop.html","searchKeys":["stop","abstract fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.stop"]},{"name":"abstract fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/stop.html","searchKeys":["stop","abstract fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.stop"]},{"name":"abstract override val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","abstract override val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isReadyToSolveCalibration"]},{"name":"abstract override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","abstract override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.minimumRequiredMeasurements"]},{"name":"abstract val accelerometerAverageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-average-time-interval.html","searchKeys":["accelerometerAverageTimeInterval","abstract val accelerometerAverageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeInterval"]},{"name":"abstract val accelerometerAverageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-average-time-interval-as-time.html","searchKeys":["accelerometerAverageTimeIntervalAsTime","abstract val accelerometerAverageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeIntervalAsTime"]},{"name":"abstract val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","abstract val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerAveragingFilter"]},{"name":"abstract val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","abstract val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerAveragingFilter"]},{"name":"abstract val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","abstract val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevel"]},{"name":"abstract val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","abstract val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevel"]},{"name":"abstract val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","abstract val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"abstract val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","abstract val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"abstract val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","abstract val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelPsd"]},{"name":"abstract val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","abstract val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelPsd"]},{"name":"abstract val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","abstract val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"abstract val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","abstract val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"abstract val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","abstract val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensor"]},{"name":"abstract val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","abstract val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorDelay"]},{"name":"abstract val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","abstract val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorType"]},{"name":"abstract val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","abstract val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerSensorType"]},{"name":"abstract val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","abstract val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerSensorType"]},{"name":"abstract val accelerometerTimeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-standard-deviation.html","searchKeys":["accelerometerTimeIntervalStandardDeviation","abstract val accelerometerTimeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviation"]},{"name":"abstract val accelerometerTimeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["accelerometerTimeIntervalStandardDeviationAsTime","abstract val accelerometerTimeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"abstract val accelerometerTimeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-variance.html","searchKeys":["accelerometerTimeIntervalVariance","abstract val accelerometerTimeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalVariance"]},{"name":"abstract val averageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","abstract val averageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.averageTimeInterval"]},{"name":"abstract val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/context.html","searchKeys":["context","abstract val context: Context","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.context"]},{"name":"abstract val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/context.html","searchKeys":["context","abstract val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.context"]},{"name":"abstract val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/context.html","searchKeys":["context","abstract val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.context"]},{"name":"abstract val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","abstract val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"abstract val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","abstract val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.estimateEulerAngles"]},{"name":"abstract val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","abstract val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.estimatePoseTransformation"]},{"name":"abstract val estimatedChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-chi-sq.html","searchKeys":["estimatedChiSq","abstract val estimatedChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedChiSq"]},{"name":"abstract val estimatedCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-covariance.html","searchKeys":["estimatedCovariance","abstract val estimatedCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedCovariance"]},{"name":"abstract val estimatedMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-mse.html","searchKeys":["estimatedMse","abstract val estimatedMse: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMse"]},{"name":"abstract val estimatedMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-mxy.html","searchKeys":["estimatedMxy","abstract val estimatedMxy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMxy"]},{"name":"abstract val estimatedMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-mxz.html","searchKeys":["estimatedMxz","abstract val estimatedMxz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMxz"]},{"name":"abstract val estimatedMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-myx.html","searchKeys":["estimatedMyx","abstract val estimatedMyx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMyx"]},{"name":"abstract val estimatedMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-myz.html","searchKeys":["estimatedMyz","abstract val estimatedMyz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMyz"]},{"name":"abstract val estimatedMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-mzx.html","searchKeys":["estimatedMzx","abstract val estimatedMzx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMzx"]},{"name":"abstract val estimatedMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-mzy.html","searchKeys":["estimatedMzy","abstract val estimatedMzy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedMzy"]},{"name":"abstract val estimatedSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-sx.html","searchKeys":["estimatedSx","abstract val estimatedSx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSx"]},{"name":"abstract val estimatedSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-sy.html","searchKeys":["estimatedSy","abstract val estimatedSy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSy"]},{"name":"abstract val estimatedSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/estimated-sz.html","searchKeys":["estimatedSz","abstract val estimatedSz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.estimatedSz"]},{"name":"abstract val gyroscopeAverageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/gyroscope-average-time-interval.html","searchKeys":["gyroscopeAverageTimeInterval","abstract val gyroscopeAverageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeAverageTimeInterval"]},{"name":"abstract val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","abstract val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeSensorType"]},{"name":"abstract val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","abstract val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gyroscopeSensorType"]},{"name":"abstract val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/initial-velocity.html","searchKeys":["initialVelocity","abstract val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.initialVelocity"]},{"name":"abstract val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","abstract val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isDynamicIntervalSkipped"]},{"name":"abstract val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","abstract val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.isDynamicIntervalSkipped"]},{"name":"abstract val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","abstract val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isReadyToSolveCalibration"]},{"name":"abstract val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","abstract val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.isStaticIntervalSkipped"]},{"name":"abstract val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","abstract val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.isStaticIntervalSkipped"]},{"name":"abstract val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","abstract val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.magnetometerSensorType"]},{"name":"abstract val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","abstract val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.magnetometerSensorType"]},{"name":"abstract val method: PhiMatrixMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/method.html","searchKeys":["method","abstract val method: PhiMatrixMethod","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.method"]},{"name":"abstract val method: ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/method.html","searchKeys":["method","abstract val method: ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.method"]},{"name":"abstract val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","abstract val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.minimumRequiredMeasurements"]},{"name":"abstract val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","abstract val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.minimumRequiredMeasurements"]},{"name":"abstract val numberOfProcessedAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.numberOfProcessedAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/number-of-processed-accelerometer-measurements.html","searchKeys":["numberOfProcessedAccelerometerMeasurements","abstract val numberOfProcessedAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.numberOfProcessedAccelerometerMeasurements"]},{"name":"abstract val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","abstract val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.processedDynamicSamples"]},{"name":"abstract val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","abstract val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.processedDynamicSamples"]},{"name":"abstract val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/processed-static-samples.html","searchKeys":["processedStaticSamples","abstract val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.processedStaticSamples"]},{"name":"abstract val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/processed-static-samples.html","searchKeys":["processedStaticSamples","abstract val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.processedStaticSamples"]},{"name":"abstract val running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/running.html","searchKeys":["running","abstract val running: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.running"]},{"name":"abstract val running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/running.html","searchKeys":["running","abstract val running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.running"]},{"name":"abstract val running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/running.html","searchKeys":["running","abstract val running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.running"]},{"name":"abstract val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/sensor.html","searchKeys":["sensor","abstract val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensor"]},{"name":"abstract val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/sensor.html","searchKeys":["sensor","abstract val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensor"]},{"name":"abstract val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/sensor.html","searchKeys":["sensor","abstract val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensor"]},{"name":"abstract val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","abstract val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.sensorDelay"]},{"name":"abstract val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/sensor-delay.html","searchKeys":["sensorDelay","abstract val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.sensorDelay"]},{"name":"abstract val solveCalibrationWhenEnoughMeasurements: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.solveCalibrationWhenEnoughMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/solve-calibration-when-enough-measurements.html","searchKeys":["solveCalibrationWhenEnoughMeasurements","abstract val solveCalibrationWhenEnoughMeasurements: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.solveCalibrationWhenEnoughMeasurements"]},{"name":"abstract val status: Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/status.html","searchKeys":["status","abstract val status: Status","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.status"]},{"name":"abstract val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/threshold.html","searchKeys":["threshold","abstract val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.threshold"]},{"name":"abstract val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/threshold.html","searchKeys":["threshold","abstract val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.threshold"]},{"name":"abstract val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","abstract val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.thresholdAsMeasurement"]},{"name":"abstract val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","abstract val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.thresholdAsMeasurement"]},{"name":"abstract val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","abstract val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccelerometer"]},{"name":"abstract val useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","abstract val useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.useLeveledRelativeAttitudeRespectStart"]},{"name":"abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.accelerometerMeasurementListener"]},{"name":"abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerMeasurementListener"]},{"name":"abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","abstract var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.accelerometerMeasurementListener"]},{"name":"abstract var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","abstract var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.accuracyChangedListener"]},{"name":"abstract var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","abstract var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.adjustGravityNorm"]},{"name":"abstract var attitudeAvailableListener: L?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","abstract var attitudeAvailableListener: L?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.attitudeAvailableListener"]},{"name":"abstract var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","abstract var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeIndirectInterpolationWeight"]},{"name":"abstract var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","abstract var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeInterpolationValue"]},{"name":"abstract var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","abstract var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeOutlierPanicThreshold"]},{"name":"abstract var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","abstract var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudeOutlierThreshold"]},{"name":"abstract var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","abstract var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.attitudePanicCounterThreshold"]},{"name":"abstract var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","abstract var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThreshold"]},{"name":"abstract var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","abstract var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThreshold"]},{"name":"abstract var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","abstract var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"abstract var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","abstract var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"abstract var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/calibration-completed-listener.html","searchKeys":["calibrationCompletedListener","abstract var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrationCompletedListener"]},{"name":"abstract var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/calibration-solving-started-listener.html","searchKeys":["calibrationSolvingStartedListener","abstract var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.calibrationSolvingStartedListener"]},{"name":"abstract var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","abstract var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalDetectedListener"]},{"name":"abstract var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","abstract var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalSkippedListener"]},{"name":"abstract var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/error-listener.html","searchKeys":["errorListener","abstract var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.errorListener"]},{"name":"abstract var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","abstract var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gravityEstimationListener"]},{"name":"abstract var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","abstract var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gravityEstimationListener"]},{"name":"abstract var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","abstract var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gravityMeasurementListener"]},{"name":"abstract var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","abstract var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.gravityMeasurementListener"]},{"name":"abstract var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","abstract var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.gyroscopeMeasurementListener"]},{"name":"abstract var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","abstract var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.gyroscopeMeasurementListener"]},{"name":"abstract var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","abstract var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.indirectInterpolationWeight"]},{"name":"abstract var initialLocation: Location","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/initial-location.html","searchKeys":["initialLocation","abstract var initialLocation: Location","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.initialLocation"]},{"name":"abstract var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/initial-static-samples.html","searchKeys":["initialStaticSamples","abstract var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initialStaticSamples"]},{"name":"abstract var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/initial-static-samples.html","searchKeys":["initialStaticSamples","abstract var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.initialStaticSamples"]},{"name":"abstract var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","abstract var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initializationCompletedListener"]},{"name":"abstract var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/initialization-started-listener.html","searchKeys":["initializationStartedListener","abstract var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.initializationStartedListener"]},{"name":"abstract var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","abstract var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.instantaneousNoiseLevelFactor"]},{"name":"abstract var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","abstract var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.instantaneousNoiseLevelFactor"]},{"name":"abstract var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/interpolation-value.html","searchKeys":["interpolationValue","abstract var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.interpolationValue"]},{"name":"abstract var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/location.html","searchKeys":["location","abstract var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.location"]},{"name":"abstract var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/location.html","searchKeys":["location","abstract var location: Location?","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.location"]},{"name":"abstract var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","abstract var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.magnetometerMeasurementListener"]},{"name":"abstract var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","abstract var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.magnetometerMeasurementListener"]},{"name":"abstract var maxDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.maxDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/max-dynamic-samples.html","searchKeys":["maxDynamicSamples","abstract var maxDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.maxDynamicSamples"]},{"name":"abstract var minStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.minStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/min-static-samples.html","searchKeys":["minStaticSamples","abstract var minStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.minStaticSamples"]},{"name":"abstract var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","abstract var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.outlierPanicThreshold"]},{"name":"abstract var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/outlier-threshold.html","searchKeys":["outlierThreshold","abstract var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.outlierThreshold"]},{"name":"abstract var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","abstract var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.panicCounterThreshold"]},{"name":"abstract var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.readyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/ready-to-solve-calibration-listener.html","searchKeys":["readyToSolveCalibrationListener","abstract var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.readyToSolveCalibrationListener"]},{"name":"abstract var requiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.requiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/required-measurements.html","searchKeys":["requiredMeasurements","abstract var requiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.requiredMeasurements"]},{"name":"abstract var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","abstract var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalDetectedListener"]},{"name":"abstract var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","abstract var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalSkippedListener"]},{"name":"abstract var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.stoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/stopped-listener.html","searchKeys":["stoppedListener","abstract var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.stoppedListener"]},{"name":"abstract var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/threshold-factor.html","searchKeys":["thresholdFactor","abstract var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.thresholdFactor"]},{"name":"abstract var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/threshold-factor.html","searchKeys":["thresholdFactor","abstract var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.thresholdFactor"]},{"name":"abstract var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.timestamp"]},{"name":"abstract var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.timestamp"]},{"name":"abstract var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","abstract var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccurateLevelingEstimator"]},{"name":"abstract var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","abstract var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useAccurateLevelingEstimator"]},{"name":"abstract var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","abstract var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"abstract var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","abstract var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"abstract var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","abstract var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator.useIndirectAttitudeInterpolation"]},{"name":"abstract var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","abstract var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useIndirectInterpolation"]},{"name":"abstract var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","abstract var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.useWorldMagneticModel"]},{"name":"abstract var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","abstract var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.useWorldMagneticModel"]},{"name":"abstract var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/window-size.html","searchKeys":["windowSize","abstract var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.windowSize"]},{"name":"abstract var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/window-size.html","searchKeys":["windowSize","abstract var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.windowSize"]},{"name":"abstract var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","abstract var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.worldMagneticModel"]},{"name":"abstract var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","abstract var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.worldMagneticModel"]},{"name":"class AccelerometerAndGyroscopeMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener? = null, var initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener? = null, var errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener? = null, var staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener? = null, var dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, var staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener? = null, var dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, var generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, var generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, var resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<TimedBodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/index.html","searchKeys":["AccelerometerAndGyroscopeMeasurementGenerator","class AccelerometerAndGyroscopeMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener? = null, var initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener? = null, var errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener? = null, var staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener? = null, var dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, var staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener? = null, var dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, var generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, var generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, var resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<TimedBodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator"]},{"name":"class AccelerometerAndGyroscopeSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerAndGyroscopeSensorMeasurementSyncer","class AccelerometerAndGyroscopeSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer"]},{"name":"class AccelerometerAndGyroscopeSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-synced-sensor-measurement/index.html","searchKeys":["AccelerometerAndGyroscopeSyncedSensorMeasurement","class AccelerometerAndGyroscopeSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement"]},{"name":"class AccelerometerAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerAndMagnetometerSensorMeasurementSyncer","class AccelerometerAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer"]},{"name":"class AccelerometerAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["AccelerometerAndMagnetometerSyncedSensorMeasurement","class AccelerometerAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement"]},{"name":"class AccelerometerDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-direct-sensor-measurement-interpolator/index.html","searchKeys":["AccelerometerDirectSensorMeasurementInterpolator","class AccelerometerDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerDirectSensorMeasurementInterpolator"]},{"name":"class AccelerometerDoubleFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedECEFAbsolutePoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["AccelerometerDoubleFusedECEFAbsolutePoseProcessor","class AccelerometerDoubleFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedECEFAbsolutePoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor"]},{"name":"class AccelerometerDoubleFusedGeomagneticAttitudeProcessor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseDoubleFusedGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-double-fused-geomagnetic-attitude-processor/index.html","searchKeys":["AccelerometerDoubleFusedGeomagneticAttitudeProcessor","class AccelerometerDoubleFusedGeomagneticAttitudeProcessor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseDoubleFusedGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor"]},{"name":"class AccelerometerDoubleFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedLocalPoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-local-pose-processor/index.html","searchKeys":["AccelerometerDoubleFusedLocalPoseProcessor","class AccelerometerDoubleFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedLocalPoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor"]},{"name":"class AccelerometerFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseFusedECEFAbsolutePoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["AccelerometerFusedECEFAbsolutePoseProcessor","class AccelerometerFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseFusedECEFAbsolutePoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor"]},{"name":"class AccelerometerFusedGeomagneticAttitudeProcessor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseFusedGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-fused-geomagnetic-attitude-processor/index.html","searchKeys":["AccelerometerFusedGeomagneticAttitudeProcessor","class AccelerometerFusedGeomagneticAttitudeProcessor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseFusedGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor"]},{"name":"class AccelerometerFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseFusedLocalPoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-local-pose-processor/index.html","searchKeys":["AccelerometerFusedLocalPoseProcessor","class AccelerometerFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseFusedLocalPoseProcessor<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor"]},{"name":"class AccelerometerFusedRelativePoseProcessor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseFusedRelativePoseProcessor<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-relative-pose-processor/index.html","searchKeys":["AccelerometerFusedRelativePoseProcessor","class AccelerometerFusedRelativePoseProcessor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseFusedRelativePoseProcessor<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor"]},{"name":"class AccelerometerGeomagneticAttitudeProcessor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement>? = null) : BaseGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-geomagnetic-attitude-processor/index.html","searchKeys":["AccelerometerGeomagneticAttitudeProcessor","class AccelerometerGeomagneticAttitudeProcessor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement>? = null) : BaseGeomagneticAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor"]},{"name":"class AccelerometerGravityAndGyroscopeSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerGravityAndGyroscopeSensorMeasurementSyncer","class AccelerometerGravityAndGyroscopeSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"class AccelerometerGravityAndGyroscopeSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/index.html","searchKeys":["AccelerometerGravityAndGyroscopeSyncedSensorMeasurement","class AccelerometerGravityAndGyroscopeSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"class AccelerometerGravityAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerGravityAndMagnetometerSensorMeasurementSyncer","class AccelerometerGravityAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer"]},{"name":"class AccelerometerGravityAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["AccelerometerGravityAndMagnetometerSyncedSensorMeasurement","class AccelerometerGravityAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement"]},{"name":"class AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer","class AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"class AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement","class AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"class AccelerometerGravityProcessor(val averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<AccelerometerSensorMeasurement>? = null) : BaseGravityProcessor<AccelerometerSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-gravity-processor/index.html","searchKeys":["AccelerometerGravityProcessor","class AccelerometerGravityProcessor(val averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<AccelerometerSensorMeasurement>? = null) : BaseGravityProcessor<AccelerometerSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor"]},{"name":"class AccelerometerGyroscopeAndMagnetometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener? = null, var initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener? = null, var errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener? = null, var staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener? = null, var dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, var staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener? = null, var dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, var generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, var generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, var generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener? = null, var resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<TimedBodyKinematicsAndMagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/index.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerMeasurementGenerator","class AccelerometerGyroscopeAndMagnetometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, var initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener? = null, var initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener? = null, var errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener? = null, var staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener? = null, var dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, var staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener? = null, var dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, var generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, var generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, var generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener? = null, var resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener? = null, var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : CalibrationMeasurementGenerator<TimedBodyKinematicsAndMagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator"]},{"name":"class AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer","class AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"class AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement","class AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement(var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"class AccelerometerInternalCalibratorBuilder","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/index.html","searchKeys":["AccelerometerInternalCalibratorBuilder","class AccelerometerInternalCalibratorBuilder","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder"]},{"name":"class AccelerometerIntervalDetector(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<AccelerometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<AccelerometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<AccelerometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<AccelerometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<AccelerometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<AccelerometerIntervalDetector>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<AccelerometerIntervalDetector, AccelerometerSensorCollector, AccelerationUnit, Acceleration, AccelerationTriad, AccelerationTriadStaticIntervalDetector, AccelerationTriadStaticIntervalDetectorListener> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-accelerometer-interval-detector/index.html","searchKeys":["AccelerometerIntervalDetector","class AccelerometerIntervalDetector(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<AccelerometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<AccelerometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<AccelerometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<AccelerometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<AccelerometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<AccelerometerIntervalDetector>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<AccelerometerIntervalDetector, AccelerometerSensorCollector, AccelerationUnit, Acceleration, AccelerationTriad, AccelerationTriadStaticIntervalDetector, AccelerationTriadStaticIntervalDetectorListener> ","com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector"]},{"name":"class AccelerometerLeveledRelativeAttitudeProcessor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement>? = null) : BaseLeveledRelativeAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-leveled-relative-attitude-processor/index.html","searchKeys":["AccelerometerLeveledRelativeAttitudeProcessor","class AccelerometerLeveledRelativeAttitudeProcessor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement>? = null) : BaseLeveledRelativeAttitudeProcessor<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor"]},{"name":"class AccelerometerLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-linear-sensor-measurement-interpolator/index.html","searchKeys":["AccelerometerLinearSensorMeasurementInterpolator","class AccelerometerLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerLinearSensorMeasurementInterpolator"]},{"name":"class AccelerometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<AccelerometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<AccelerometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<AccelerometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<AccelerometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics, AccelerometerMeasurementsGenerator, AccelerometerMeasurementsGeneratorListener, BodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-measurement-generator/index.html","searchKeys":["AccelerometerMeasurementGenerator","class AccelerometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<AccelerometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<AccelerometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<AccelerometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<AccelerometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics, AccelerometerMeasurementsGenerator, AccelerometerMeasurementsGeneratorListener, BodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerMeasurementGenerator"]},{"name":"class AccelerometerNoiseEstimator(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<AccelerometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<AccelerometerNoiseEstimator>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<AccelerometerNoiseEstimator, AccumulatedAccelerationTriadNoiseEstimator, AccelerometerSensorCollector, AccelerationUnit, Acceleration, AccelerationTriad> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-noise-estimator/index.html","searchKeys":["AccelerometerNoiseEstimator","class AccelerometerNoiseEstimator(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<AccelerometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<AccelerometerNoiseEstimator>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<AccelerometerNoiseEstimator, AccumulatedAccelerationTriadNoiseEstimator, AccelerometerSensorCollector, AccelerationUnit, Acceleration, AccelerationTriad> ","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator"]},{"name":"class AccelerometerNormEstimator(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<AccelerometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<AccelerometerNormEstimator>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<AccelerometerNormEstimator, AccumulatedAccelerationMeasurementNoiseEstimator, AccelerometerSensorCollector, AccelerationUnit, Acceleration> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-norm-estimator/index.html","searchKeys":["AccelerometerNormEstimator","class AccelerometerNormEstimator(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<AccelerometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<AccelerometerNormEstimator>? = null, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<AccelerometerNormEstimator, AccumulatedAccelerationMeasurementNoiseEstimator, AccelerometerSensorCollector, AccelerationUnit, Acceleration> ","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator"]},{"name":"class AccelerometerQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-quadratic-sensor-measurement-interpolator/index.html","searchKeys":["AccelerometerQuadraticSensorMeasurementInterpolator","class AccelerometerQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<AccelerometerSensorMeasurement> , AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerQuadraticSensorMeasurementInterpolator"]},{"name":"class AccelerometerSensorCollector(val context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/index.html","searchKeys":["AccelerometerSensorCollector","class AccelerometerSensorCollector(val context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector"]},{"name":"class AccelerometerSensorCollector2(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null) : SensorCollector2<AccelerometerSensorMeasurement, AccelerometerSensorCollector2> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector2/index.html","searchKeys":["AccelerometerSensorCollector2","class AccelerometerSensorCollector2(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null) : SensorCollector2<AccelerometerSensorMeasurement, AccelerometerSensorCollector2> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2"]},{"name":"class AccelerometerSensorMeasurement(var ax: Float = 0.0f, var ay: Float = 0.0f, var az: Float = 0.0f, var bx: Float? = null, var by: Float? = null, var bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED) : SensorMeasurement<AccelerometerSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/index.html","searchKeys":["AccelerometerSensorMeasurement","class AccelerometerSensorMeasurement(var ax: Float = 0.0f, var ay: Float = 0.0f, var az: Float = 0.0f, var bx: Float? = null, var by: Float? = null, var bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED) : SensorMeasurement<AccelerometerSensorMeasurement> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement"]},{"name":"class AccurateLevelingEstimator : BaseLevelingEstimator<AccurateLevelingEstimator, AccurateLevelingEstimator.OnLevelingAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/index.html","searchKeys":["AccurateLevelingEstimator","class AccurateLevelingEstimator : BaseLevelingEstimator<AccurateLevelingEstimator, AccurateLevelingEstimator.OnLevelingAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator"]},{"name":"class AccurateLevelingEstimator2(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: AccurateLevelingEstimator2.OnAccuracyChangedListener? = null, adjustGravityNorm: Boolean = true) : BaseLevelingEstimator2<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator2/index.html","searchKeys":["AccurateLevelingEstimator2","class AccurateLevelingEstimator2(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: AccurateLevelingEstimator2.OnAccuracyChangedListener? = null, adjustGravityNorm: Boolean = true) : BaseLevelingEstimator2<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2"]},{"name":"class AccurateLevelingProcessor(var location: Location, var processorListener: BaseLevelingProcessor.OnProcessedListener? = null) : BaseLevelingProcessor","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/index.html","searchKeys":["AccurateLevelingProcessor","class AccurateLevelingProcessor(var location: Location, var processorListener: BaseLevelingProcessor.OnProcessedListener? = null) : BaseLevelingProcessor","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor"]},{"name":"class AccurateRelativeGyroscopeAttitudeEstimator(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : BaseRelativeGyroscopeAttitudeEstimator<AccurateRelativeGyroscopeAttitudeEstimator, AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator/index.html","searchKeys":["AccurateRelativeGyroscopeAttitudeEstimator","class AccurateRelativeGyroscopeAttitudeEstimator(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : BaseRelativeGyroscopeAttitudeEstimator<AccurateRelativeGyroscopeAttitudeEstimator, AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"class AccurateRelativeGyroscopeAttitudeEstimator2(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null) : BaseRelativeGyroscopeAttitudeEstimator2<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator2/index.html","searchKeys":["AccurateRelativeGyroscopeAttitudeEstimator2","class AccurateRelativeGyroscopeAttitudeEstimator2(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null) : BaseRelativeGyroscopeAttitudeEstimator2<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2"]},{"name":"class AccurateRelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null) : BaseRelativeGyroscopeAttitudeProcessor","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-relative-gyroscope-attitude-processor/index.html","searchKeys":["AccurateRelativeGyroscopeAttitudeProcessor","class AccurateRelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null) : BaseRelativeGyroscopeAttitudeProcessor","com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"class ApproximatedPhiMatrixEstimator(a: Matrix? = null) : PhiMatrixEstimator","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-phi-matrix-estimator/index.html","searchKeys":["ApproximatedPhiMatrixEstimator","class ApproximatedPhiMatrixEstimator(a: Matrix? = null) : PhiMatrixEstimator","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator"]},{"name":"class ApproximatedProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null) : ProcessNoiseCovarianceIntegrator","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-process-noise-covariance-integrator/index.html","searchKeys":["ApproximatedProcessNoiseCovarianceIntegrator","class ApproximatedProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null) : ProcessNoiseCovarianceIntegrator","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator"]},{"name":"class AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/index.html","searchKeys":["AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer","class AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer"]},{"name":"class AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement/index.html","searchKeys":["AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement","class AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement"]},{"name":"class AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/index.html","searchKeys":["AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer","class AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"class AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/index.html","searchKeys":["AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement","class AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"class AttitudeAndAccelerometerSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/index.html","searchKeys":["AttitudeAndAccelerometerSensorMeasurementSyncer","class AttitudeAndAccelerometerSensorMeasurementSyncer(context: Context, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, val accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, val accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, val attitudeStartOffsetEnabled: Boolean = false, val accelerometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, val attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer"]},{"name":"class AttitudeAndAccelerometerSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-synced-sensor-measurement/index.html","searchKeys":["AttitudeAndAccelerometerSyncedSensorMeasurement","class AttitudeAndAccelerometerSyncedSensorMeasurement(var attitudeMeasurement: AttitudeSensorMeasurement? = null, var accelerometerMeasurement: AccelerometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement"]},{"name":"class AttitudeDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<AttitudeSensorMeasurement> , AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-direct-sensor-measurement-interpolator/index.html","searchKeys":["AttitudeDirectSensorMeasurementInterpolator","class AttitudeDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<AttitudeSensorMeasurement> , AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeDirectSensorMeasurementInterpolator"]},{"name":"class AttitudeECEFAbsolutePoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity = NEDVelocity(), val estimatePoseTransformation: Boolean = false, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseECEFAbsolutePoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["AttitudeECEFAbsolutePoseProcessor","class AttitudeECEFAbsolutePoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity = NEDVelocity(), val estimatePoseTransformation: Boolean = false, var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseECEFAbsolutePoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor"]},{"name":"class AttitudeEstimator2(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val startOffsetEnabled: Boolean = true, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/index.html","searchKeys":["AttitudeEstimator2","class AttitudeEstimator2(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, val startOffsetEnabled: Boolean = true, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2"]},{"name":"class AttitudeLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<AttitudeSensorMeasurement> , AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-linear-sensor-measurement-interpolator/index.html","searchKeys":["AttitudeLinearSensorMeasurementInterpolator","class AttitudeLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<AttitudeSensorMeasurement> , AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeLinearSensorMeasurementInterpolator"]},{"name":"class AttitudeLocalPoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity = NEDVelocity(), val estimatePoseTransformation: Boolean = false, var processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseLocalPoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-local-pose-processor/index.html","searchKeys":["AttitudeLocalPoseProcessor","class AttitudeLocalPoseProcessor(val initialLocation: Location, val initialVelocity: NEDVelocity = NEDVelocity(), val estimatePoseTransformation: Boolean = false, var processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseLocalPoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor"]},{"name":"class AttitudeProcessor(var processorListener: AttitudeProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/index.html","searchKeys":["AttitudeProcessor","class AttitudeProcessor(var processorListener: AttitudeProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor"]},{"name":"class AttitudeRelativePoseProcessor(val initialSpeed: SpeedTriad = SpeedTriad(), val averagingFilter: AveragingFilter = LowPassAveragingFilter(), var processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseRelativePoseProcessor","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/index.html","searchKeys":["AttitudeRelativePoseProcessor","class AttitudeRelativePoseProcessor(val initialSpeed: SpeedTriad = SpeedTriad(), val averagingFilter: AveragingFilter = LowPassAveragingFilter(), var processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseRelativePoseProcessor","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor"]},{"name":"class AttitudeSensorCollector2(context: Context, val sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null) : SensorCollector2<AttitudeSensorMeasurement, AttitudeSensorCollector2> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-collector2/index.html","searchKeys":["AttitudeSensorCollector2","class AttitudeSensorCollector2(context: Context, val sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null) : SensorCollector2<AttitudeSensorMeasurement, AttitudeSensorCollector2> ","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2"]},{"name":"class AttitudeSensorMeasurement(var attitude: Quaternion = Quaternion(), var headingAccuracy: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE) : SensorMeasurement<AttitudeSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/index.html","searchKeys":["AttitudeSensorMeasurement","class AttitudeSensorMeasurement(var attitude: Quaternion = Quaternion(), var headingAccuracy: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE) : SensorMeasurement<AttitudeSensorMeasurement> ","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement"]},{"name":"class BatteryTemperatureService(val context: Context, var batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/index.html","searchKeys":["BatteryTemperatureService","class BatteryTemperatureService(val context: Context, var batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener? = null)","com.irurueta.android.navigation.inertial.BatteryTemperatureService"]},{"name":"class BetterProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null) : ProcessNoiseCovarianceIntegrator","description":"com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-better-process-noise-covariance-integrator/index.html","searchKeys":["BetterProcessNoiseCovarianceIntegrator","class BetterProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null) : ProcessNoiseCovarianceIntegrator","com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator"]},{"name":"class BufferedAccelerometerSensorCollector(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null) : BufferedSensorCollector<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector> ","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-accelerometer-sensor-collector/index.html","searchKeys":["BufferedAccelerometerSensorCollector","class BufferedAccelerometerSensorCollector(context: Context, val sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null) : BufferedSensorCollector<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector> ","com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector"]},{"name":"class BufferedAttitudeSensorCollector(context: Context, val sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null) : BufferedSensorCollector<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector> ","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-attitude-sensor-collector/index.html","searchKeys":["BufferedAttitudeSensorCollector","class BufferedAttitudeSensorCollector(context: Context, val sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null) : BufferedSensorCollector<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector> ","com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector"]},{"name":"class BufferedGravitySensorCollector(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null) : BufferedSensorCollector<GravitySensorMeasurement, BufferedGravitySensorCollector> ","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gravity-sensor-collector/index.html","searchKeys":["BufferedGravitySensorCollector","class BufferedGravitySensorCollector(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null) : BufferedSensorCollector<GravitySensorMeasurement, BufferedGravitySensorCollector> ","com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector"]},{"name":"class BufferedGyroscopeSensorCollector(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null) : BufferedSensorCollector<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector> ","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gyroscope-sensor-collector/index.html","searchKeys":["BufferedGyroscopeSensorCollector","class BufferedGyroscopeSensorCollector(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null) : BufferedSensorCollector<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector> ","com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector"]},{"name":"class BufferedMagnetometerSensorCollector(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null) : BufferedSensorCollector<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector> ","description":"com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-magnetometer-sensor-collector/index.html","searchKeys":["BufferedMagnetometerSensorCollector","class BufferedMagnetometerSensorCollector(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null) : BufferedSensorCollector<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector> ","com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector"]},{"name":"class DoubleFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedECEFAbsolutePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["DoubleFusedECEFAbsolutePoseProcessor","class DoubleFusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedECEFAbsolutePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor"]},{"name":"class DoubleFusedGeomagneticAttitudeEstimator : AbsoluteAttitudeEstimator<DoubleFusedGeomagneticAttitudeEstimator, DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/index.html","searchKeys":["DoubleFusedGeomagneticAttitudeEstimator","class DoubleFusedGeomagneticAttitudeEstimator : AbsoluteAttitudeEstimator<DoubleFusedGeomagneticAttitudeEstimator, DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator"]},{"name":"class DoubleFusedGeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/index.html","searchKeys":["DoubleFusedGeomagneticAttitudeEstimator2","class DoubleFusedGeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2"]},{"name":"class DoubleFusedGeomagneticAttitudeProcessor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseDoubleFusedGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-double-fused-geomagnetic-attitude-processor/index.html","searchKeys":["DoubleFusedGeomagneticAttitudeProcessor","class DoubleFusedGeomagneticAttitudeProcessor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseDoubleFusedGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor"]},{"name":"class DoubleFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedLocalPoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-local-pose-processor/index.html","searchKeys":["DoubleFusedLocalPoseProcessor","class DoubleFusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseDoubleFusedLocalPoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor"]},{"name":"class EcefAbsolutePoseEstimator : AbsolutePoseEstimator","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/index.html","searchKeys":["EcefAbsolutePoseEstimator","class EcefAbsolutePoseEstimator : AbsolutePoseEstimator","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator"]},{"name":"class EcefAbsolutePoseEstimator2(val context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, val useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, var poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/index.html","searchKeys":["EcefAbsolutePoseEstimator2","class EcefAbsolutePoseEstimator2(val context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, val useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, var poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2"]},{"name":"class FusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseFusedECEFAbsolutePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-e-c-e-f-absolute-pose-processor/index.html","searchKeys":["FusedECEFAbsolutePoseProcessor","class FusedECEFAbsolutePoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null) : BaseFusedECEFAbsolutePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor"]},{"name":"class FusedGeomagneticAttitudeEstimator : AbsoluteAttitudeEstimator<FusedGeomagneticAttitudeEstimator, FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/index.html","searchKeys":["FusedGeomagneticAttitudeEstimator","class FusedGeomagneticAttitudeEstimator : AbsoluteAttitudeEstimator<FusedGeomagneticAttitudeEstimator, FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator"]},{"name":"class FusedGeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/index.html","searchKeys":["FusedGeomagneticAttitudeEstimator2","class FusedGeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2"]},{"name":"class FusedGeomagneticAttitudeProcessor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseFusedGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-fused-geomagnetic-attitude-processor/index.html","searchKeys":["FusedGeomagneticAttitudeProcessor","class FusedGeomagneticAttitudeProcessor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null) : BaseFusedGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor"]},{"name":"class FusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseFusedLocalPoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-local-pose-processor/index.html","searchKeys":["FusedLocalPoseProcessor","class FusedLocalPoseProcessor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null) : BaseFusedLocalPoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor"]},{"name":"class FusedRelativePoseProcessor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseFusedRelativePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-relative-pose-processor/index.html","searchKeys":["FusedRelativePoseProcessor","class FusedRelativePoseProcessor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null) : BaseFusedRelativePoseProcessor<GravitySensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor"]},{"name":"class GeomagneticAttitudeEstimator","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/index.html","searchKeys":["GeomagneticAttitudeEstimator","class GeomagneticAttitudeEstimator","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator"]},{"name":"class GeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/index.html","searchKeys":["GeomagneticAttitudeEstimator2","class GeomagneticAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2"]},{"name":"class GeomagneticAttitudeProcessor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement>? = null) : BaseGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-geomagnetic-attitude-processor/index.html","searchKeys":["GeomagneticAttitudeProcessor","class GeomagneticAttitudeProcessor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement>? = null) : BaseGeomagneticAttitudeProcessor<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor"]},{"name":"class GravityAndGyroscopeSensorMeasurementSyncer(context: Context, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/index.html","searchKeys":["GravityAndGyroscopeSensorMeasurementSyncer","class GravityAndGyroscopeSensorMeasurementSyncer(context: Context, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"class GravityAndGyroscopeSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-synced-sensor-measurement/index.html","searchKeys":["GravityAndGyroscopeSyncedSensorMeasurement","class GravityAndGyroscopeSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"class GravityAndMagnetometerSensorMeasurementSyncer(context: Context, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["GravityAndMagnetometerSensorMeasurementSyncer","class GravityAndMagnetometerSensorMeasurementSyncer(context: Context, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer"]},{"name":"class GravityAndMagnetometerSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["GravityAndMagnetometerSyncedSensorMeasurement","class GravityAndMagnetometerSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement"]},{"name":"class GravityDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-direct-sensor-measurement-interpolator/index.html","searchKeys":["GravityDirectSensorMeasurementInterpolator","class GravityDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityDirectSensorMeasurementInterpolator"]},{"name":"class GravityEstimator(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAccelerometer: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, var estimationListener: GravityEstimator.OnEstimationListener? = null, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/index.html","searchKeys":["GravityEstimator","class GravityEstimator(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAccelerometer: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, var estimationListener: GravityEstimator.OnEstimationListener? = null, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator"]},{"name":"class GravityGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer> ","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/index.html","searchKeys":["GravityGyroscopeAndMagnetometerSensorMeasurementSyncer","class GravityGyroscopeAndMagnetometerSensorMeasurementSyncer(context: Context, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, val gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, val magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, val gravityStartOffsetEnabled: Boolean = false, val gyroscopeStartOffsetEnabled: Boolean = false, val magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, val gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator()) : SensorMeasurementSyncer<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer> ","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"class GravityGyroscopeAndMagnetometerSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/index.html","searchKeys":["GravityGyroscopeAndMagnetometerSyncedSensorMeasurement","class GravityGyroscopeAndMagnetometerSyncedSensorMeasurement(var gravityMeasurement: GravitySensorMeasurement? = null, var gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, var magnetometerMeasurement: MagnetometerSensorMeasurement? = null, var timestamp: Long = 0) : SyncedSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"class GravityLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-linear-sensor-measurement-interpolator/index.html","searchKeys":["GravityLinearSensorMeasurementInterpolator","class GravityLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityLinearSensorMeasurementInterpolator"]},{"name":"class GravityNormEstimator(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GravityNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GravityNormEstimator>? = null, var measurementListener: GravitySensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<GravityNormEstimator, AccumulatedAccelerationMeasurementNoiseEstimator, GravitySensorCollector, AccelerationUnit, Acceleration> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gravity-norm-estimator/index.html","searchKeys":["GravityNormEstimator","class GravityNormEstimator(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GravityNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GravityNormEstimator>? = null, var measurementListener: GravitySensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<GravityNormEstimator, AccumulatedAccelerationMeasurementNoiseEstimator, GravitySensorCollector, AccelerationUnit, Acceleration> ","com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator"]},{"name":"class GravityProcessor(location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<GravitySensorMeasurement>? = null) : BaseGravityProcessor<GravitySensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-gravity-processor/index.html","searchKeys":["GravityProcessor","class GravityProcessor(location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<GravitySensorMeasurement>? = null) : BaseGravityProcessor<GravitySensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor"]},{"name":"class GravityQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-quadratic-sensor-measurement-interpolator/index.html","searchKeys":["GravityQuadraticSensorMeasurementInterpolator","class GravityQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<GravitySensorMeasurement> , GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityQuadraticSensorMeasurementInterpolator"]},{"name":"class GravitySensorCollector(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: GravitySensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/index.html","searchKeys":["GravitySensorCollector","class GravitySensorCollector(val context: Context, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: GravitySensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector"]},{"name":"class GravitySensorCollector2(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GravitySensorMeasurement, GravitySensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GravitySensorMeasurement, GravitySensorCollector2>? = null) : SensorCollector2<GravitySensorMeasurement, GravitySensorCollector2> ","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector2/index.html","searchKeys":["GravitySensorCollector2","class GravitySensorCollector2(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GravitySensorMeasurement, GravitySensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GravitySensorMeasurement, GravitySensorCollector2>? = null) : SensorCollector2<GravitySensorMeasurement, GravitySensorCollector2> ","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2"]},{"name":"class GravitySensorMeasurement(var gx: Float = 0.0f, var gy: Float = 0.0f, var gz: Float = 0.0f, timestamp: Long = 0, accuracy: SensorAccuracy? = null) : SensorMeasurement<GravitySensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/index.html","searchKeys":["GravitySensorMeasurement","class GravitySensorMeasurement(var gx: Float = 0.0f, var gy: Float = 0.0f, var gz: Float = 0.0f, timestamp: Long = 0, accuracy: SensorAccuracy? = null) : SensorMeasurement<GravitySensorMeasurement> ","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement"]},{"name":"class GyroscopeDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-direct-sensor-measurement-interpolator/index.html","searchKeys":["GyroscopeDirectSensorMeasurementInterpolator","class GyroscopeDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeDirectSensorMeasurementInterpolator"]},{"name":"class GyroscopeInternalCalibratorBuilder","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/index.html","searchKeys":["GyroscopeInternalCalibratorBuilder","class GyroscopeInternalCalibratorBuilder","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder"]},{"name":"class GyroscopeIntervalDetector(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<GyroscopeIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<GyroscopeIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<GyroscopeIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<GyroscopeIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<GyroscopeIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<GyroscopeIntervalDetector>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<GyroscopeIntervalDetector, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed, AngularSpeedTriad, AngularSpeedTriadStaticIntervalDetector, AngularSpeedTriadStaticIntervalDetectorListener> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-gyroscope-interval-detector/index.html","searchKeys":["GyroscopeIntervalDetector","class GyroscopeIntervalDetector(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<GyroscopeIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<GyroscopeIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<GyroscopeIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<GyroscopeIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<GyroscopeIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<GyroscopeIntervalDetector>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<GyroscopeIntervalDetector, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed, AngularSpeedTriad, AngularSpeedTriadStaticIntervalDetector, AngularSpeedTriadStaticIntervalDetectorListener> ","com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector"]},{"name":"class GyroscopeLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-linear-sensor-measurement-interpolator/index.html","searchKeys":["GyroscopeLinearSensorMeasurementInterpolator","class GyroscopeLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeLinearSensorMeasurementInterpolator"]},{"name":"class GyroscopeMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<GyroscopeMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<GyroscopeMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<GyroscopeMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<GyroscopeMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, GyroscopeMeasurementsGenerator, GyroscopeMeasurementsGeneratorListener, TimedBodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/index.html","searchKeys":["GyroscopeMeasurementGenerator","class GyroscopeMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<GyroscopeMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<GyroscopeMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<GyroscopeMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<GyroscopeMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>, GyroscopeMeasurementsGenerator, GyroscopeMeasurementsGeneratorListener, TimedBodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator"]},{"name":"class GyroscopeNoiseEstimator(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<GyroscopeNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<GyroscopeNoiseEstimator>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<GyroscopeNoiseEstimator, AccumulatedAngularSpeedTriadNoiseEstimator, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed, AngularSpeedTriad> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-noise-estimator/index.html","searchKeys":["GyroscopeNoiseEstimator","class GyroscopeNoiseEstimator(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<GyroscopeNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<GyroscopeNoiseEstimator>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<GyroscopeNoiseEstimator, AccumulatedAngularSpeedTriadNoiseEstimator, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed, AngularSpeedTriad> ","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator"]},{"name":"class GyroscopeNormEstimator(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GyroscopeNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GyroscopeNormEstimator>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<GyroscopeNormEstimator, AccumulatedAngularSpeedMeasurementNoiseEstimator, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-norm-estimator/index.html","searchKeys":["GyroscopeNormEstimator","class GyroscopeNormEstimator(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GyroscopeNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GyroscopeNormEstimator>? = null, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<GyroscopeNormEstimator, AccumulatedAngularSpeedMeasurementNoiseEstimator, GyroscopeSensorCollector, AngularSpeedUnit, AngularSpeed> ","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator"]},{"name":"class GyroscopeQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-quadratic-sensor-measurement-interpolator/index.html","searchKeys":["GyroscopeQuadraticSensorMeasurementInterpolator","class GyroscopeQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<GyroscopeSensorMeasurement> , GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeQuadraticSensorMeasurementInterpolator"]},{"name":"class GyroscopeSensorCollector(val context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/index.html","searchKeys":["GyroscopeSensorCollector","class GyroscopeSensorCollector(val context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector"]},{"name":"class GyroscopeSensorCollector2(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null) : SensorCollector2<GyroscopeSensorMeasurement, GyroscopeSensorCollector2> ","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector2/index.html","searchKeys":["GyroscopeSensorCollector2","class GyroscopeSensorCollector2(context: Context, val sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null) : SensorCollector2<GyroscopeSensorMeasurement, GyroscopeSensorCollector2> ","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2"]},{"name":"class GyroscopeSensorMeasurement(var wx: Float = 0.0f, var wy: Float = 0.0f, var wz: Float = 0.0f, var bx: Float? = null, var by: Float? = null, var bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED) : SensorMeasurement<GyroscopeSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/index.html","searchKeys":["GyroscopeSensorMeasurement","class GyroscopeSensorMeasurement(var wx: Float = 0.0f, var wy: Float = 0.0f, var wz: Float = 0.0f, var bx: Float? = null, var by: Float? = null, var bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED) : SensorMeasurement<GyroscopeSensorMeasurement> ","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement"]},{"name":"class KalmanAbsoluteAttitudeEstimator(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val startOffsetEnabled: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, val estimateCovariances: Boolean = true, val gyroscopeNoisePsd: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, var attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener? = null, var accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener? = null, var bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/index.html","searchKeys":["KalmanAbsoluteAttitudeEstimator","class KalmanAbsoluteAttitudeEstimator(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val startOffsetEnabled: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, val estimateCovariances: Boolean = true, val gyroscopeNoisePsd: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, var attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener? = null, var accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener? = null, var bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator"]},{"name":"class KalmanAbsoluteAttitudeProcessor(val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val gravityNorm: Double = EARTH_GRAVITY, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor","class KalmanAbsoluteAttitudeProcessor(val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val gravityNorm: Double = EARTH_GRAVITY, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor"]},{"name":"class KalmanAbsoluteAttitudeProcessor2(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor2","class KalmanAbsoluteAttitudeProcessor2(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2"]},{"name":"class KalmanAbsoluteAttitudeProcessor3(location: Location? = null, var currentDate: Date? = null, var currentTemperature: Double = DEFAULT_TEMPERATURE_CELSIUS, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeEcefAttitudeCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeEcefAccelerationCovariance: Boolean = true, val computeNedRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, temperatureStandardDeviation: Double = DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, val processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null, val numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor3","class KalmanAbsoluteAttitudeProcessor3(location: Location? = null, var currentDate: Date? = null, var currentTemperature: Double = DEFAULT_TEMPERATURE_CELSIUS, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeEcefAttitudeCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeEcefAccelerationCovariance: Boolean = true, val computeNedRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, temperatureStandardDeviation: Double = DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, val processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null, val numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3"]},{"name":"class KalmanAbsoluteAttitudeProcessor4(location: Location? = null, var currentDate: Date? = null, var computeExternalAcceleration: Boolean = true, var computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val fixMagnetometerMeasurements: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor4","class KalmanAbsoluteAttitudeProcessor4(location: Location? = null, var currentDate: Date? = null, var computeExternalAcceleration: Boolean = true, var computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val fixMagnetometerMeasurements: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, val processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4"]},{"name":"class KalmanAbsoluteAttitudeProcessor5(location: Location? = null, var currentDate: Date? = null, var computeExternalAcceleration: Boolean = true, var computeEulerAngles: Boolean = true, var computeCovariances: Boolean = true, var computeEulerAnglesCovariance: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: QuaternionStepIntegratorType = QuaternionStepIntegratorType.SUH, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD, val processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor5","class KalmanAbsoluteAttitudeProcessor5(location: Location? = null, var currentDate: Date? = null, var computeExternalAcceleration: Boolean = true, var computeEulerAngles: Boolean = true, var computeCovariances: Boolean = true, var computeEulerAnglesCovariance: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: QuaternionStepIntegratorType = QuaternionStepIntegratorType.SUH, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD, val processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5"]},{"name":"class KalmanAbsoluteAttitudeProcessor6","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor6","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor6/index.html","searchKeys":["KalmanAbsoluteAttitudeProcessor6","class KalmanAbsoluteAttitudeProcessor6","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor6"]},{"name":"class KalmanAccelerometerCorrector(val externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/index.html","searchKeys":["KalmanAccelerometerCorrector","class KalmanAccelerometerCorrector(val externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector"]},{"name":"class KalmanGyroscopePredictor(phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/index.html","searchKeys":["KalmanGyroscopePredictor","class KalmanGyroscopePredictor(phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor"]},{"name":"class KalmanMagnetometerCorrector","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/index.html","searchKeys":["KalmanMagnetometerCorrector","class KalmanMagnetometerCorrector","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector"]},{"name":"class KalmanRelativeAttitudeEstimator(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val startOffsetEnabled: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, val estimateCovariances: Boolean = true, val gyroscopeNoisePsd: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, var attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, var accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener? = null, var bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/index.html","searchKeys":["KalmanRelativeAttitudeEstimator","class KalmanRelativeAttitudeEstimator(val context: Context, val sensorDelay: SensorDelay = SensorDelay.GAME, val startOffsetEnabled: Boolean = false, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, val estimateCovariances: Boolean = true, val gyroscopeNoisePsd: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, var attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, var accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener? = null, var bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator"]},{"name":"class KalmanRelativeAttitudeProcessor(val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val gravityNorm: Double = EARTH_GRAVITY, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/index.html","searchKeys":["KalmanRelativeAttitudeProcessor","class KalmanRelativeAttitudeProcessor(val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val gravityNorm: Double = EARTH_GRAVITY, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor"]},{"name":"class KalmanRelativeAttitudeProcessor2(val averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/index.html","searchKeys":["KalmanRelativeAttitudeProcessor2","class KalmanRelativeAttitudeProcessor2(val averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, val computeEulerAngles: Boolean = true, val computeCovariances: Boolean = true, val computeQuaternionCovariance: Boolean = true, val computeEulerAnglesCovariance: Boolean = true, val computeAccelerometerCovariance: Boolean = true, val computeRotationAxisCovariance: Boolean = true, val gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, val quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, val freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, val symmetricThreshold: Double = SYMMETRIC_THRESHOLD, var processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener? = null, var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2"]},{"name":"class LeveledRelativeAttitudeEstimator","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/index.html","searchKeys":["LeveledRelativeAttitudeEstimator","class LeveledRelativeAttitudeEstimator","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator"]},{"name":"class LeveledRelativeAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/index.html","searchKeys":["LeveledRelativeAttitudeEstimator2","class LeveledRelativeAttitudeEstimator2(val context: Context, location: Location? = null, val sensorDelay: SensorDelay = SensorDelay.GAME, val useAccelerometer: Boolean = true, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, val estimateCoordinateTransformation: Boolean = false, val estimateEulerAngles: Boolean = true, var attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener? = null, var accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2"]},{"name":"class LeveledRelativeAttitudeProcessor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement>? = null) : BaseLeveledRelativeAttitudeProcessor<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveled-relative-attitude-processor/index.html","searchKeys":["LeveledRelativeAttitudeProcessor","class LeveledRelativeAttitudeProcessor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement>? = null) : BaseLeveledRelativeAttitudeProcessor<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement> ","com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor"]},{"name":"class LevelingEstimator : BaseLevelingEstimator<LevelingEstimator, LevelingEstimator.OnLevelingAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/index.html","searchKeys":["LevelingEstimator","class LevelingEstimator : BaseLevelingEstimator<LevelingEstimator, LevelingEstimator.OnLevelingAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator"]},{"name":"class LevelingEstimator2(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: LevelingEstimator2.OnAccuracyChangedListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true) : BaseLevelingEstimator2<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator2/index.html","searchKeys":["LevelingEstimator2","class LevelingEstimator2(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: LevelingEstimator2.OnAccuracyChangedListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true) : BaseLevelingEstimator2<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2"]},{"name":"class LevelingProcessor(var processorListener: BaseLevelingProcessor.OnProcessedListener? = null) : BaseLevelingProcessor","description":"com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveling-processor/index.html","searchKeys":["LevelingProcessor","class LevelingProcessor(var processorListener: BaseLevelingProcessor.OnProcessedListener? = null) : BaseLevelingProcessor","com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor"]},{"name":"class LocalPoseEstimator : AbsolutePoseEstimator","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/index.html","searchKeys":["LocalPoseEstimator","class LocalPoseEstimator : AbsolutePoseEstimator","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator"]},{"name":"class LocalPoseEstimator2(val context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, val useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, var poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/index.html","searchKeys":["LocalPoseEstimator2","class LocalPoseEstimator2(val context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, val useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, var poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2"]},{"name":"class LocationPermissionService","description":"com.irurueta.android.navigation.inertial.LocationPermissionService","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/index.html","searchKeys":["LocationPermissionService","class LocationPermissionService","com.irurueta.android.navigation.inertial.LocationPermissionService"]},{"name":"class LocationService(val context: Context)","description":"com.irurueta.android.navigation.inertial.LocationService","location":"lib/com.irurueta.android.navigation.inertial/-location-service/index.html","searchKeys":["LocationService","class LocationService(val context: Context)","com.irurueta.android.navigation.inertial.LocationService"]},{"name":"class LowPassAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-low-pass-averaging-filter/index.html","searchKeys":["LowPassAveragingFilter","class LowPassAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter"]},{"name":"class MagnetometerDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-direct-sensor-measurement-interpolator/index.html","searchKeys":["MagnetometerDirectSensorMeasurementInterpolator","class MagnetometerDirectSensorMeasurementInterpolator : DirectSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerDirectSensorMeasurementInterpolator"]},{"name":"class MagnetometerInternalCalibratorBuilder","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/index.html","searchKeys":["MagnetometerInternalCalibratorBuilder","class MagnetometerInternalCalibratorBuilder","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder"]},{"name":"class MagnetometerIntervalDetector(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<MagnetometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<MagnetometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<MagnetometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<MagnetometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<MagnetometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<MagnetometerIntervalDetector>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<MagnetometerIntervalDetector, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad, MagneticFluxDensityTriadStaticIntervalDetector, MagneticFluxDensityTriadStaticIntervalDetectorListener> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-magnetometer-interval-detector/index.html","searchKeys":["MagnetometerIntervalDetector","class MagnetometerIntervalDetector(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<MagnetometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<MagnetometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<MagnetometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<MagnetometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<MagnetometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<MagnetometerIntervalDetector>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : IntervalDetector<MagnetometerIntervalDetector, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad, MagneticFluxDensityTriadStaticIntervalDetector, MagneticFluxDensityTriadStaticIntervalDetectorListener> ","com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector"]},{"name":"class MagnetometerLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-linear-sensor-measurement-interpolator/index.html","searchKeys":["MagnetometerLinearSensorMeasurementInterpolator","class MagnetometerLinearSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : LinearSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerLinearSensorMeasurementInterpolator"]},{"name":"class MagnetometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<MagnetometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<MagnetometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<MagnetometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<MagnetometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity, MagnetometerMeasurementsGenerator, MagnetometerMeasurementsGeneratorListener, BodyKinematicsAndMagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/index.html","searchKeys":["MagnetometerMeasurementGenerator","class MagnetometerMeasurementGenerator(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, val magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<MagnetometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<MagnetometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<MagnetometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<MagnetometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SingleSensorCalibrationMeasurementGenerator<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity, MagnetometerMeasurementsGenerator, MagnetometerMeasurementsGeneratorListener, BodyKinematicsAndMagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator"]},{"name":"class MagnetometerNoiseEstimator(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<MagnetometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<MagnetometerNoiseEstimator>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<MagnetometerNoiseEstimator, AccumulatedMagneticFluxDensityTriadNoiseEstimator, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-noise-estimator/index.html","searchKeys":["MagnetometerNoiseEstimator","class MagnetometerNoiseEstimator(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<MagnetometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<MagnetometerNoiseEstimator>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null) : AccumulatedTriadEstimator<MagnetometerNoiseEstimator, AccumulatedMagneticFluxDensityTriadNoiseEstimator, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad> ","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator"]},{"name":"class MagnetometerNormEstimator(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<MagnetometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<MagnetometerNormEstimator>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<MagnetometerNormEstimator, AccumulatedMagneticFluxDensityMeasurementNoiseEstimator, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-norm-estimator/index.html","searchKeys":["MagnetometerNormEstimator","class MagnetometerNormEstimator(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<MagnetometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<MagnetometerNormEstimator>? = null, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null) : AccumulatedMeasurementEstimator<MagnetometerNormEstimator, AccumulatedMagneticFluxDensityMeasurementNoiseEstimator, MagnetometerSensorCollector, MagneticFluxDensityUnit, MagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator"]},{"name":"class MagnetometerQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-quadratic-sensor-measurement-interpolator/index.html","searchKeys":["MagnetometerQuadraticSensorMeasurementInterpolator","class MagnetometerQuadraticSensorMeasurementInterpolator(copyIfNotInitialized: Boolean = true) : QuadraticSensorMeasurementInterpolator<MagnetometerSensorMeasurement> , MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerQuadraticSensorMeasurementInterpolator"]},{"name":"class MagnetometerSensorCollector(val context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/index.html","searchKeys":["MagnetometerSensorCollector","class MagnetometerSensorCollector(val context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, val sensorDelay: SensorDelay = SensorDelay.FASTEST, var measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null) : SensorCollector","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector"]},{"name":"class MagnetometerSensorCollector2(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null) : SensorCollector2<MagnetometerSensorMeasurement, MagnetometerSensorCollector2> ","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector2/index.html","searchKeys":["MagnetometerSensorCollector2","class MagnetometerSensorCollector2(context: Context, val sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null) : SensorCollector2<MagnetometerSensorMeasurement, MagnetometerSensorCollector2> ","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2"]},{"name":"class MagnetometerSensorMeasurement(var bx: Float = 0.0f, var by: Float = 0.0f, var bz: Float = 0.0f, var hardIronX: Float? = null, var hardIronY: Float? = null, var hardIronZ: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED) : SensorMeasurement<MagnetometerSensorMeasurement> ","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/index.html","searchKeys":["MagnetometerSensorMeasurement","class MagnetometerSensorMeasurement(var bx: Float = 0.0f, var by: Float = 0.0f, var bz: Float = 0.0f, var hardIronX: Float? = null, var hardIronY: Float? = null, var hardIronZ: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, var sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED) : SensorMeasurement<MagnetometerSensorMeasurement> ","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement"]},{"name":"class MeanAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/index.html","searchKeys":["MeanAveragingFilter","class MeanAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter"]},{"name":"class MedianAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/index.html","searchKeys":["MedianAveragingFilter","class MedianAveragingFilter(timeConstant: Double = DEFAULT_TIME_CONSTANT) : AveragingFilter","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter"]},{"name":"class PrecisePhiMatrixEstimator(a: Matrix? = null) : PhiMatrixEstimator","description":"com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-phi-matrix-estimator/index.html","searchKeys":["PrecisePhiMatrixEstimator","class PrecisePhiMatrixEstimator(a: Matrix? = null) : PhiMatrixEstimator","com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator"]},{"name":"class PreciseProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null, val integratorType: IntegratorType = MatrixIntegrator.DEFAULT_INTEGRATOR_TYPE, val quadratureType: QuadratureType = MatrixIntegrator.DEFAULT_QUADRATURE_TYPE) : ProcessNoiseCovarianceIntegrator","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/index.html","searchKeys":["PreciseProcessNoiseCovarianceIntegrator","class PreciseProcessNoiseCovarianceIntegrator(q: Matrix? = null, a: Matrix? = null, val integratorType: IntegratorType = MatrixIntegrator.DEFAULT_INTEGRATOR_TYPE, val quadratureType: QuadratureType = MatrixIntegrator.DEFAULT_QUADRATURE_TYPE) : ProcessNoiseCovarianceIntegrator","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator"]},{"name":"class RelativeGyroscopeAttitudeEstimator(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateDisplayEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : BaseRelativeGyroscopeAttitudeEstimator<RelativeGyroscopeAttitudeEstimator, RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator/index.html","searchKeys":["RelativeGyroscopeAttitudeEstimator","class RelativeGyroscopeAttitudeEstimator(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateDisplayEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null) : BaseRelativeGyroscopeAttitudeEstimator<RelativeGyroscopeAttitudeEstimator, RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator"]},{"name":"class RelativeGyroscopeAttitudeEstimator2(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null) : BaseRelativeGyroscopeAttitudeEstimator2<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator2/index.html","searchKeys":["RelativeGyroscopeAttitudeEstimator2","class RelativeGyroscopeAttitudeEstimator2(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null) : BaseRelativeGyroscopeAttitudeEstimator2<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2"]},{"name":"class RelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null) : BaseRelativeGyroscopeAttitudeProcessor","description":"com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-relative-gyroscope-attitude-processor/index.html","searchKeys":["RelativeGyroscopeAttitudeProcessor","class RelativeGyroscopeAttitudeProcessor(var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null) : BaseRelativeGyroscopeAttitudeProcessor","com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor"]},{"name":"class RelativePoseEstimator : PoseEstimator","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/index.html","searchKeys":["RelativePoseEstimator","class RelativePoseEstimator : PoseEstimator","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator"]},{"name":"class RelativePoseEstimator2(val context: Context, initialSpeed: SpeedTriad = SpeedTriad(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, var poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/index.html","searchKeys":["RelativePoseEstimator2","class RelativePoseEstimator2(val context: Context, initialSpeed: SpeedTriad = SpeedTriad(), val sensorDelay: SensorDelay = SensorDelay.FASTEST, val useAttitudeSensor: Boolean = true, val useAccelerometerForAttitudeEstimation: Boolean = false, val startOffsetEnabled: Boolean = true, val accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, val accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), val gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, var poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener? = null, var accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener? = null, var bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2"]},{"name":"class SabatiniExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION) : ExternalAccelerationCovarianceMatrixEstimator","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/index.html","searchKeys":["SabatiniExternalAccelerationCovarianceMatrixEstimator","class SabatiniExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION) : ExternalAccelerationCovarianceMatrixEstimator","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator"]},{"name":"class SensorAvailabilityService(val context: Context)","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/index.html","searchKeys":["SensorAvailabilityService","class SensorAvailabilityService(val context: Context)","com.irurueta.android.navigation.inertial.SensorAvailabilityService"]},{"name":"class SingleSensorStaticIntervalAccelerometerCalibrator : SingleSensorStaticIntervalCalibrator<SingleSensorStaticIntervalAccelerometerCalibrator, StandardDeviationBodyKinematics, AccelerometerIntervalDetector, AccelerationUnit, Acceleration, AccelerationTriad> ","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/index.html","searchKeys":["SingleSensorStaticIntervalAccelerometerCalibrator","class SingleSensorStaticIntervalAccelerometerCalibrator : SingleSensorStaticIntervalCalibrator<SingleSensorStaticIntervalAccelerometerCalibrator, StandardDeviationBodyKinematics, AccelerometerIntervalDetector, AccelerationUnit, Acceleration, AccelerationTriad> ","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator"]},{"name":"class SingleSensorStaticIntervalMagnetometerCalibrator : SingleSensorStaticIntervalCalibrator<SingleSensorStaticIntervalMagnetometerCalibrator, StandardDeviationBodyMagneticFluxDensity, MagnetometerIntervalDetector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad> ","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/index.html","searchKeys":["SingleSensorStaticIntervalMagnetometerCalibrator","class SingleSensorStaticIntervalMagnetometerCalibrator : SingleSensorStaticIntervalCalibrator<SingleSensorStaticIntervalMagnetometerCalibrator, StandardDeviationBodyMagneticFluxDensity, MagnetometerIntervalDetector, MagneticFluxDensityUnit, MagneticFluxDensity, MagneticFluxDensityTriad> ","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator"]},{"name":"class SpeedTriad(unit: SpeedUnit = DEFAULT_UNIT) : Triad<SpeedUnit, Speed> , Cloneable","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/index.html","searchKeys":["SpeedTriad","class SpeedTriad(unit: SpeedUnit = DEFAULT_UNIT) : Triad<SpeedUnit, Speed> , Cloneable","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad"]},{"name":"class StaticIntervalAccelerometerAndGyroscopeCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerAndGyroscopeCalibrator, TimedBodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/index.html","searchKeys":["StaticIntervalAccelerometerAndGyroscopeCalibrator","class StaticIntervalAccelerometerAndGyroscopeCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerAndGyroscopeCalibrator, TimedBodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator"]},{"name":"class StaticIntervalAccelerometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerCalibrator, BodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/index.html","searchKeys":["StaticIntervalAccelerometerCalibrator","class StaticIntervalAccelerometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerCalibrator, BodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator"]},{"name":"class StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, TimedBodyKinematicsAndMagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/index.html","searchKeys":["StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator","class StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator, TimedBodyKinematicsAndMagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator"]},{"name":"class StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2 : StaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, TimedBodyKinematicsAndMagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/index.html","searchKeys":["StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2","class StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2 : StaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2, TimedBodyKinematicsAndMagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2"]},{"name":"class StaticIntervalGyroscopeCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalGyroscopeCalibrator, TimedBodyKinematics> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/index.html","searchKeys":["StaticIntervalGyroscopeCalibrator","class StaticIntervalGyroscopeCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalGyroscopeCalibrator, TimedBodyKinematics> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator"]},{"name":"class StaticIntervalMagnetometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalMagnetometerCalibrator, BodyKinematicsAndMagneticFluxDensity> ","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/index.html","searchKeys":["StaticIntervalMagnetometerCalibrator","class StaticIntervalMagnetometerCalibrator : BaseStaticIntervalWithMeasurementGeneratorCalibrator<StaticIntervalMagnetometerCalibrator, BodyKinematicsAndMagneticFluxDensity> ","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator"]},{"name":"class SuhExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION) : ExternalAccelerationCovarianceMatrixEstimator","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/index.html","searchKeys":["SuhExternalAccelerationCovarianceMatrixEstimator","class SuhExternalAccelerationCovarianceMatrixEstimator(val accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION) : ExternalAccelerationCovarianceMatrixEstimator","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator"]},{"name":"const val ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-a-c-c-e-l-e-r-o-m-e-t-e-r_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-a-c-c-e-l-e-r-o-m-e-t-e-r_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","const val ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-a-c-c-e-l-e-r-o-m-e-t-e-r_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-a-c-c-e-l-e-r-o-m-e-t-e-r_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","const val ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ACCELEROMETER_UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val BG: Double = 1.0E-6","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.BG","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/-b-g.html","searchKeys":["BG","const val BG: Double = 1.0E-6","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.BG"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ACCELEROMETER_CAPACITY","const val DEFAULT_ACCELEROMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_ACCELEROMETER_CAPACITY"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/-companion/-d-e-f-a-u-l-t_-a-c-c-e-l-e-r-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION: Double = 0.015","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-t-t-i-t-u-d-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ATTITUDE_CAPACITY","const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY"]},{"name":"const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-t-t-i-t-u-d-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ATTITUDE_CAPACITY","const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY"]},{"name":"const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-a-t-t-i-t-u-d-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_ATTITUDE_CAPACITY","const val DEFAULT_ATTITUDE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_ATTITUDE_CAPACITY"]},{"name":"const val DEFAULT_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.Companion.DEFAULT_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-companion/-d-e-f-a-u-l-t_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_CAPACITY","const val DEFAULT_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.Companion.DEFAULT_CAPACITY"]},{"name":"const val DEFAULT_EPSILON: Double = 0.25","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_EPSILON","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/-companion/-d-e-f-a-u-l-t_-e-p-s-i-l-o-n.html","searchKeys":["DEFAULT_EPSILON","const val DEFAULT_EPSILON: Double = 0.25","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_EPSILON"]},{"name":"const val DEFAULT_ESTIMATE_G_DEPENDENT_CROSS_BIASES: Boolean = false","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ESTIMATE_G_DEPENDENT_CROSS_BIASES","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-d-e-f-a-u-l-t_-e-s-t-i-m-a-t-e_-g_-d-e-p-e-n-d-e-n-t_-c-r-o-s-s_-b-i-a-s-e-s.html","searchKeys":["DEFAULT_ESTIMATE_G_DEPENDENT_CROSS_BIASES","const val DEFAULT_ESTIMATE_G_DEPENDENT_CROSS_BIASES: Boolean = false","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ESTIMATE_G_DEPENDENT_CROSS_BIASES"]},{"name":"const val DEFAULT_FREE_FALL_THRESHOLD: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_FREE_FALL_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/-d-e-f-a-u-l-t_-f-r-e-e_-f-a-l-l_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_FREE_FALL_THRESHOLD","const val DEFAULT_FREE_FALL_THRESHOLD: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_FREE_FALL_THRESHOLD"]},{"name":"const val DEFAULT_FREE_FALL_THRESHOLD: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_FREE_FALL_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/-d-e-f-a-u-l-t_-f-r-e-e_-f-a-l-l_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_FREE_FALL_THRESHOLD","const val DEFAULT_FREE_FALL_THRESHOLD: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_FREE_FALL_THRESHOLD"]},{"name":"const val DEFAULT_FREE_FALL_THRESHOLD: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_FREE_FALL_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-f-r-e-e_-f-a-l-l_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_FREE_FALL_THRESHOLD","const val DEFAULT_FREE_FALL_THRESHOLD: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_FREE_FALL_THRESHOLD"]},{"name":"const val DEFAULT_FREE_FALL_THRESHOLD: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_FREE_FALL_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-f-r-e-e_-f-a-l-l_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_FREE_FALL_THRESHOLD","const val DEFAULT_FREE_FALL_THRESHOLD: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_FREE_FALL_THRESHOLD"]},{"name":"const val DEFAULT_FREE_FALL_THRESHOLD: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_FREE_FALL_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-companion/-d-e-f-a-u-l-t_-f-r-e-e_-f-a-l-l_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_FREE_FALL_THRESHOLD","const val DEFAULT_FREE_FALL_THRESHOLD: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_FREE_FALL_THRESHOLD"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 10","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 10","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 10","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 10","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GRAVITY_CAPACITY: Int = 500","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-r-a-v-i-t-y_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GRAVITY_CAPACITY","const val DEFAULT_GRAVITY_CAPACITY: Int = 500","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GRAVITY_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 10","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 10","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 200","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 200","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 200","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 200","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_CAPACITY: Int = 2000","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_GYROSCOPE_CAPACITY","const val DEFAULT_GYROSCOPE_CAPACITY: Int = 2000","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_GYROSCOPE_CAPACITY"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_GYROSCOPE_NOISE_PSD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-companion/-d-e-f-a-u-l-t_-g-y-r-o-s-c-o-p-e_-n-o-i-s-e_-p-s-d.html","searchKeys":["DEFAULT_GYROSCOPE_NOISE_PSD","const val DEFAULT_GYROSCOPE_NOISE_PSD: Double = 1.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.DEFAULT_GYROSCOPE_NOISE_PSD"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-d-i-r-e-c-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_INDIRECT_INTERPOLATION_WEIGHT","const val DEFAULT_INDIRECT_INTERPOLATION_WEIGHT: Double = 0.01","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_INDIRECT_INTERPOLATION_WEIGHT"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-i-n-t-e-r-p-o-l-a-t-i-o-n_-v-a-l-u-e.html","searchKeys":["DEFAULT_INTERPOLATION_VALUE","const val DEFAULT_INTERPOLATION_VALUE: Double = 0.005","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_INTERPOLATION_VALUE"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 100","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 1000","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 1000","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 500","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-c-a-p-a-c-i-t-y.html","searchKeys":["DEFAULT_MAGNETOMETER_CAPACITY","const val DEFAULT_MAGNETOMETER_CAPACITY: Int = 500","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_MAGNETOMETER_CAPACITY"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/-companion/-d-e-f-a-u-l-t_-m-a-g-n-e-t-o-m-e-t-e-r_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION","const val DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION: Double = 5.0E-7","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.Companion.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_MAX_DURATION_MILLIS: Long = 20000","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion.DEFAULT_MAX_DURATION_MILLIS","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/-companion/-d-e-f-a-u-l-t_-m-a-x_-d-u-r-a-t-i-o-n_-m-i-l-l-i-s.html","searchKeys":["DEFAULT_MAX_DURATION_MILLIS","const val DEFAULT_MAX_DURATION_MILLIS: Long = 20000","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion.DEFAULT_MAX_DURATION_MILLIS"]},{"name":"const val DEFAULT_MAX_SAMPLES: Int = 1000","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion.DEFAULT_MAX_SAMPLES","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/-companion/-d-e-f-a-u-l-t_-m-a-x_-s-a-m-p-l-e-s.html","searchKeys":["DEFAULT_MAX_SAMPLES","const val DEFAULT_MAX_SAMPLES: Int = 1000","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion.DEFAULT_MAX_SAMPLES"]},{"name":"const val DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS: Double = 1.0","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.Companion.DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-companion/-d-e-f-a-u-l-t_-m-i-n-i-m-u-m_-u-n-r-e-l-i-a-b-l-e_-d-u-r-a-t-i-o-n_-s-e-c-o-n-d-s.html","searchKeys":["DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS","const val DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS: Double = 1.0","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.Companion.DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS"]},{"name":"const val DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS: Double = 1.0","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.Companion.DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-m-i-n-i-m-u-m_-u-n-r-e-l-i-a-b-l-e_-d-u-r-a-t-i-o-n_-s-e-c-o-n-d-s.html","searchKeys":["DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS","const val DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS: Double = 1.0","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.Companion.DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-p-a-n-i-c_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_PANIC_THRESHOLD","const val DEFAULT_OUTLIER_PANIC_THRESHOLD: Double = 0.65","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_OUTLIER_PANIC_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-o-u-t-l-i-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_OUTLIER_THRESHOLD","const val DEFAULT_OUTLIER_THRESHOLD: Double = 0.85","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_OUTLIER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/-d-e-f-a-u-l-t_-p-a-n-i-c_-c-o-u-n-t-e-r_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_PANIC_COUNTER_THRESHOLD","const val DEFAULT_PANIC_COUNTER_THRESHOLD: Int = 60","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion.DEFAULT_PANIC_COUNTER_THRESHOLD"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-s-t-o-p_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR: Double = 0.01","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-d-e-f-a-u-l-t_-r-o-b-u-s-t_-t-h-r-e-s-h-o-l-d_-f-a-c-t-o-r.html","searchKeys":["DEFAULT_ROBUST_THRESHOLD_FACTOR","const val DEFAULT_ROBUST_THRESHOLD_FACTOR: Double = 3.0","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_ROBUST_THRESHOLD_FACTOR"]},{"name":"const val DEFAULT_S: Double = 10.0","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_S","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/-companion/-d-e-f-a-u-l-t_-s.html","searchKeys":["DEFAULT_S","const val DEFAULT_S: Double = 10.0","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.DEFAULT_S"]},{"name":"const val DEFAULT_SMALLEST_DISPLACEMENT: Float = 0.0f","description":"com.irurueta.android.navigation.inertial.LocationService.Companion.DEFAULT_SMALLEST_DISPLACEMENT","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-companion/-d-e-f-a-u-l-t_-s-m-a-l-l-e-s-t_-d-i-s-p-l-a-c-e-m-e-n-t.html","searchKeys":["DEFAULT_SMALLEST_DISPLACEMENT","const val DEFAULT_SMALLEST_DISPLACEMENT: Float = 0.0f","com.irurueta.android.navigation.inertial.LocationService.Companion.DEFAULT_SMALLEST_DISPLACEMENT"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_STALE_OFFSET_NANOS: Long","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/-d-e-f-a-u-l-t_-s-t-a-l-e_-o-f-f-s-e-t_-n-a-n-o-s.html","searchKeys":["DEFAULT_STALE_OFFSET_NANOS","const val DEFAULT_STALE_OFFSET_NANOS: Long","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion.DEFAULT_STALE_OFFSET_NANOS"]},{"name":"const val DEFAULT_TEMPERATURE_CELSIUS: Double = 20.0","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_TEMPERATURE_CELSIUS","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-t-e-m-p-e-r-a-t-u-r-e_-c-e-l-s-i-u-s.html","searchKeys":["DEFAULT_TEMPERATURE_CELSIUS","const val DEFAULT_TEMPERATURE_CELSIUS: Double = 20.0","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_TEMPERATURE_CELSIUS"]},{"name":"const val DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION: Double = 1.0","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-d-e-f-a-u-l-t_-t-e-m-p-e-r-a-t-u-r-e_-n-o-i-s-e_-s-t-a-n-d-a-r-d_-d-e-v-i-a-t-i-o-n.html","searchKeys":["DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION","const val DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION: Double = 1.0","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION"]},{"name":"const val DEFAULT_TIME_CONSTANT: Double = 0.1","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion.DEFAULT_TIME_CONSTANT","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/-companion/-d-e-f-a-u-l-t_-t-i-m-e_-c-o-n-s-t-a-n-t.html","searchKeys":["DEFAULT_TIME_CONSTANT","const val DEFAULT_TIME_CONSTANT: Double = 0.1","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion.DEFAULT_TIME_CONSTANT"]},{"name":"const val DEFAULT_UPDATE_INTERVAL: Long = 1000","description":"com.irurueta.android.navigation.inertial.LocationService.Companion.DEFAULT_UPDATE_INTERVAL","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-companion/-d-e-f-a-u-l-t_-u-p-d-a-t-e_-i-n-t-e-r-v-a-l.html","searchKeys":["DEFAULT_UPDATE_INTERVAL","const val DEFAULT_UPDATE_INTERVAL: Long = 1000","com.irurueta.android.navigation.inertial.LocationService.Companion.DEFAULT_UPDATE_INTERVAL"]},{"name":"const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/-d-e-f-a-u-l-t_-u-s-e_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["DEFAULT_USE_COMMON_Z_AXIS","const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS"]},{"name":"const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-d-e-f-a-u-l-t_-u-s-e_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["DEFAULT_USE_COMMON_Z_AXIS","const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS"]},{"name":"const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-d-e-f-a-u-l-t_-u-s-e_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["DEFAULT_USE_COMMON_Z_AXIS","const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS"]},{"name":"const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-d-e-f-a-u-l-t_-u-s-e_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["DEFAULT_USE_COMMON_Z_AXIS","const val DEFAULT_USE_COMMON_Z_AXIS: Boolean = false","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.DEFAULT_USE_COMMON_Z_AXIS"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion.EARTH_GRAVITY"]},{"name":"const val EARTH_GRAVITY: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.EARTH_GRAVITY","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/-companion/-e-a-r-t-h_-g-r-a-v-i-t-y.html","searchKeys":["EARTH_GRAVITY","const val EARTH_GRAVITY: Double","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion.EARTH_GRAVITY"]},{"name":"const val FUSED_PROVIDER: String","description":"com.irurueta.android.navigation.inertial.LocationService.Companion.FUSED_PROVIDER","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-companion/-f-u-s-e-d_-p-r-o-v-i-d-e-r.html","searchKeys":["FUSED_PROVIDER","const val FUSED_PROVIDER: String","com.irurueta.android.navigation.inertial.LocationService.Companion.FUSED_PROVIDER"]},{"name":"const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS","const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS"]},{"name":"const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-c-o-m-m-o-n_-z_-a-x-i-s_-a-n-d_-c-r-o-s-s_-b-i-a-s-e-s.html","searchKeys":["GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES","const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES"]},{"name":"const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-g-e-n-e-r-a-l.html","searchKeys":["GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL","const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL"]},{"name":"const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-g-e-n-e-r-a-l_-a-n-d_-c-r-o-s-s_-b-i-a-s-e-s.html","searchKeys":["GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES","const val GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_KNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES"]},{"name":"const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS","const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS"]},{"name":"const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-c-o-m-m-o-n_-z_-a-x-i-s_-a-n-d_-c-r-o-s-s_-b-i-a-s-e-s.html","searchKeys":["GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES","const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_COMMON_Z_AXIS_AND_CROSS_BIASES"]},{"name":"const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-g-e-n-e-r-a-l.html","searchKeys":["GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL","const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL"]},{"name":"const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-g-y-r-o-s-c-o-p-e_-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-s-e-q-u-e-n-c-e-s_-g-e-n-e-r-a-l_-a-n-d_-c-r-o-s-s_-b-i-a-s-e-s.html","searchKeys":["GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES","const val GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.GYROSCOPE_UNKNOWN_BIAS_MINIMUM_SEQUENCES_GENERAL_AND_CROSS_BIASES"]},{"name":"const val KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.KNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","const val KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.KNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","const val KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-m-a-g-n-e-t-o-m-e-t-e-r_-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-m-a-g-n-e-t-o-m-e-t-e-r_-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","const val MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_KNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-m-a-g-n-e-t-o-m-e-t-e-r_-u-n-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-m-a-g-n-e-t-o-m-e-t-e-r_-u-n-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","const val MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.MAGNETOMETER_UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val N_COLUMNS: Int = 9","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.N_COLUMNS","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-companion/-n_-c-o-l-u-m-n-s.html","searchKeys":["N_COLUMNS","const val N_COLUMNS: Int = 9","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.N_COLUMNS"]},{"name":"const val N_COLUMNS: Int = 9","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.N_COLUMNS","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-companion/-n_-c-o-l-u-m-n-s.html","searchKeys":["N_COLUMNS","const val N_COLUMNS: Int = 9","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.N_COLUMNS"]},{"name":"const val N_ROWS: Int = 9","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.N_ROWS","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-companion/-n_-r-o-w-s.html","searchKeys":["N_ROWS","const val N_ROWS: Int = 9","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.N_ROWS"]},{"name":"const val N_ROWS: Int = 9","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.N_ROWS","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-companion/-n_-r-o-w-s.html","searchKeys":["N_ROWS","const val N_ROWS: Int = 9","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.N_ROWS"]},{"name":"const val OUTPUT_LENGTH: Int = 3","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion.OUTPUT_LENGTH","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/-companion/-o-u-t-p-u-t_-l-e-n-g-t-h.html","searchKeys":["OUTPUT_LENGTH","const val OUTPUT_LENGTH: Int = 3","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion.OUTPUT_LENGTH"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-c-o-n-f-i-d-e-n-c-e.html","searchKeys":["ROBUST_DEFAULT_CONFIDENCE","const val ROBUST_DEFAULT_CONFIDENCE: Double = 0.99","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_CONFIDENCE"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/-r-o-b-u-s-t_-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r-a-t-i-o-n-s.html","searchKeys":["ROBUST_DEFAULT_MAX_ITERATIONS","const val ROBUST_DEFAULT_MAX_ITERATIONS: Int = 5000","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion.ROBUST_DEFAULT_MAX_ITERATIONS"]},{"name":"const val UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/-u-n-k-n-o-w-n_-b-i-a-s_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL","const val UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion.UNKNOWN_BIAS_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"const val UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-u-n-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-c-o-m-m-o-n_-z_-a-x-i-s.html","searchKeys":["UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS","const val UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_COMMON_Z_AXIS"]},{"name":"const val UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/-u-n-k-n-o-w-n_-h-a-r-d_-i-r-o-n_-m-i-n-i-m-u-m_-m-e-a-s-u-r-e-m-e-n-t-s_-g-e-n-e-r-a-l.html","searchKeys":["UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL","const val UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion.UNKNOWN_HARD_IRON_MINIMUM_MEASUREMENTS_GENERAL"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerDirectSensorMeasurementInterpolator.AccelerometerDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-direct-sensor-measurement-interpolator/-accelerometer-direct-sensor-measurement-interpolator.html","searchKeys":["AccelerometerDirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerDirectSensorMeasurementInterpolator.AccelerometerDirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeDirectSensorMeasurementInterpolator.AttitudeDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-direct-sensor-measurement-interpolator/-attitude-direct-sensor-measurement-interpolator.html","searchKeys":["AttitudeDirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeDirectSensorMeasurementInterpolator.AttitudeDirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.DirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-direct-sensor-measurement-interpolator/-direct-sensor-measurement-interpolator.html","searchKeys":["DirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.DirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityDirectSensorMeasurementInterpolator.GravityDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-direct-sensor-measurement-interpolator/-gravity-direct-sensor-measurement-interpolator.html","searchKeys":["GravityDirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityDirectSensorMeasurementInterpolator.GravityDirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeDirectSensorMeasurementInterpolator.GyroscopeDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-direct-sensor-measurement-interpolator/-gyroscope-direct-sensor-measurement-interpolator.html","searchKeys":["GyroscopeDirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeDirectSensorMeasurementInterpolator.GyroscopeDirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerDirectSensorMeasurementInterpolator.MagnetometerDirectSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-direct-sensor-measurement-interpolator/-magnetometer-direct-sensor-measurement-interpolator.html","searchKeys":["MagnetometerDirectSensorMeasurementInterpolator","constructor()","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerDirectSensorMeasurementInterpolator.MagnetometerDirectSensorMeasurementInterpolator"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor6.KalmanAbsoluteAttitudeProcessor6","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor6/-kalman-absolute-attitude-processor6.html","searchKeys":["KalmanAbsoluteAttitudeProcessor6","constructor()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor6.KalmanAbsoluteAttitudeProcessor6"]},{"name":"constructor()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.KalmanMagnetometerCorrector","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/-kalman-magnetometer-corrector.html","searchKeys":["KalmanMagnetometerCorrector","constructor()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.KalmanMagnetometerCorrector"]},{"name":"constructor(a: Matrix? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.ApproximatedPhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-phi-matrix-estimator/-approximated-phi-matrix-estimator.html","searchKeys":["ApproximatedPhiMatrixEstimator","constructor(a: Matrix? = null)","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.ApproximatedPhiMatrixEstimator"]},{"name":"constructor(a: Matrix? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.PrecisePhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-phi-matrix-estimator/-precise-phi-matrix-estimator.html","searchKeys":["PrecisePhiMatrixEstimator","constructor(a: Matrix? = null)","com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.PrecisePhiMatrixEstimator"]},{"name":"constructor(a: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.PhiMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-phi-matrix-estimator.html","searchKeys":["PhiMatrixEstimator","constructor(a: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.PhiMatrixEstimator"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement.html","searchKeys":["AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement.html","searchKeys":["AccelerometerGravityAndGyroscopeSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement.html","searchKeys":["AccelerometerGravityAndMagnetometerSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.AccelerometerAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-synced-sensor-measurement/-accelerometer-and-gyroscope-synced-sensor-measurement.html","searchKeys":["AccelerometerAndGyroscopeSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.AccelerometerAndGyroscopeSyncedSensorMeasurement"]},{"name":"constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.AccelerometerAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-synced-sensor-measurement/-accelerometer-and-magnetometer-synced-sensor-measurement.html","searchKeys":["AccelerometerAndMagnetometerSyncedSensorMeasurement","constructor(accelerometerMeasurement: AccelerometerSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.AccelerometerAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION)","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.SabatiniExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/-sabatini-external-acceleration-covariance-matrix-estimator.html","searchKeys":["SabatiniExternalAccelerationCovarianceMatrixEstimator","constructor(accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION)","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.SabatiniExternalAccelerationCovarianceMatrixEstimator"]},{"name":"constructor(accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION)","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.SuhExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/-suh-external-acceleration-covariance-matrix-estimator.html","searchKeys":["SuhExternalAccelerationCovarianceMatrixEstimator","constructor(accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION)","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.SuhExternalAccelerationCovarianceMatrixEstimator"]},{"name":"constructor(accelerometerNoiseStandardDeviation: Double)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.ExternalAccelerationCovarianceMatrixEstimator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/-external-acceleration-covariance-matrix-estimator.html","searchKeys":["ExternalAccelerationCovarianceMatrixEstimator","constructor(accelerometerNoiseStandardDeviation: Double)","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.ExternalAccelerationCovarianceMatrixEstimator"]},{"name":"constructor(activity: AppCompatActivity, onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener? = null)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionService","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-service.html","searchKeys":["LocationPermissionService","constructor(activity: AppCompatActivity, onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener? = null)","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionService"]},{"name":"constructor(attitude: Quaternion = Quaternion(), headingAccuracy: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.AttitudeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/-attitude-sensor-measurement.html","searchKeys":["AttitudeSensorMeasurement","constructor(attitude: Quaternion = Quaternion(), headingAccuracy: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE)","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.AttitudeSensorMeasurement"]},{"name":"constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement.html","searchKeys":["AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement","constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement.html","searchKeys":["AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement","constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement"]},{"name":"constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.AttitudeAndAccelerometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-synced-sensor-measurement/-attitude-and-accelerometer-synced-sensor-measurement.html","searchKeys":["AttitudeAndAccelerometerSyncedSensorMeasurement","constructor(attitudeMeasurement: AttitudeSensorMeasurement? = null, accelerometerMeasurement: AccelerometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.AttitudeAndAccelerometerSyncedSensorMeasurement"]},{"name":"constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.KalmanAbsoluteAttitudeProcessor2","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-kalman-absolute-attitude-processor2.html","searchKeys":["KalmanAbsoluteAttitudeProcessor2","constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.KalmanAbsoluteAttitudeProcessor2"]},{"name":"constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.KalmanRelativeAttitudeProcessor2","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-kalman-relative-attitude-processor2.html","searchKeys":["KalmanRelativeAttitudeProcessor2","constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.KalmanRelativeAttitudeProcessor2"]},{"name":"constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<AccelerometerSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.AccelerometerGravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-gravity-processor/-accelerometer-gravity-processor.html","searchKeys":["AccelerometerGravityProcessor","constructor(averagingFilter: AveragingFilter = LowPassAveragingFilter(), location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<AccelerometerSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.AccelerometerGravityProcessor"]},{"name":"constructor(ax: Float = 0.0f, ay: Float = 0.0f, az: Float = 0.0f, bx: Float? = null, by: Float? = null, bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.AccelerometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/-accelerometer-sensor-measurement.html","searchKeys":["AccelerometerSensorMeasurement","constructor(ax: Float = 0.0f, ay: Float = 0.0f, az: Float = 0.0f, bx: Float? = null, by: Float? = null, bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.AccelerometerSensorMeasurement"]},{"name":"constructor(bx: Float = 0.0f, by: Float = 0.0f, bz: Float = 0.0f, hardIronX: Float? = null, hardIronY: Float? = null, hardIronZ: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.MagnetometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/-magnetometer-sensor-measurement.html","searchKeys":["MagnetometerSensorMeasurement","constructor(bx: Float = 0.0f, by: Float = 0.0f, bz: Float = 0.0f, hardIronX: Float? = null, hardIronY: Float? = null, hardIronZ: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.MagnetometerSensorMeasurement"]},{"name":"constructor(cancelled: Boolean = true, finePermissionGranted: Boolean = false, coarsePermissionGranted: Boolean = false, backgroundPermissionGranted: Boolean = false, finePermissionRequested: Boolean = false, coarsePermissionRequested: Boolean = false, backgroundPermissionRequested: Boolean = false)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.LocationPermissionResult","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/-location-permission-result.html","searchKeys":["LocationPermissionResult","constructor(cancelled: Boolean = true, finePermissionGranted: Boolean = false, coarsePermissionGranted: Boolean = false, backgroundPermissionGranted: Boolean = false, finePermissionRequested: Boolean = false, coarsePermissionRequested: Boolean = false, backgroundPermissionRequested: Boolean = false)","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.LocationPermissionResult"]},{"name":"constructor(computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, gravityNorm: Double = EARTH_GRAVITY, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.KalmanAbsoluteAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-kalman-absolute-attitude-processor.html","searchKeys":["KalmanAbsoluteAttitudeProcessor","constructor(computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, gravityNorm: Double = EARTH_GRAVITY, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.KalmanAbsoluteAttitudeProcessor"]},{"name":"constructor(computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, gravityNorm: Double = EARTH_GRAVITY, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.KalmanRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-kalman-relative-attitude-processor.html","searchKeys":["KalmanRelativeAttitudeProcessor","constructor(computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeQuaternionCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeAccelerometerCovariance: Boolean = true, computeRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, gravityNorm: Double = EARTH_GRAVITY, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.KalmanRelativeAttitudeProcessor"]},{"name":"constructor(context: Context)","description":"com.irurueta.android.navigation.inertial.LocationService.LocationService","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-location-service.html","searchKeys":["LocationService","constructor(context: Context)","com.irurueta.android.navigation.inertial.LocationService.LocationService"]},{"name":"constructor(context: Context)","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.SensorAvailabilityService","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/-sensor-availability-service.html","searchKeys":["SensorAvailabilityService","constructor(context: Context)","com.irurueta.android.navigation.inertial.SensorAvailabilityService.SensorAvailabilityService"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.CalibrationMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/-calibration-measurement-generator.html","searchKeys":["CalibrationMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.CalibrationMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener? = null, initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener? = null, errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener? = null, staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener? = null, dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener? = null, dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.AccelerometerAndGyroscopeMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-accelerometer-and-gyroscope-measurement-generator.html","searchKeys":["AccelerometerAndGyroscopeMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener? = null, initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener? = null, errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener? = null, staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener? = null, dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener? = null, dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.AccelerometerAndGyroscopeMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<GyroscopeMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<GyroscopeMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<GyroscopeMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<GyroscopeMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.GyroscopeMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/-gyroscope-measurement-generator.html","searchKeys":["GyroscopeMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<GyroscopeMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<GyroscopeMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<GyroscopeMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<GyroscopeMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<GyroscopeMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<GyroscopeMeasurementGenerator, BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<GyroscopeMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.GyroscopeMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener? = null, initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener? = null, errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener? = null, staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener? = null, dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener? = null, dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener? = null, resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-accelerometer-gyroscope-and-magnetometer-measurement-generator.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener? = null, initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener? = null, errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener? = null, staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener? = null, dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener? = null, staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener? = null, dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener? = null, generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener? = null, resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<AccelerometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<AccelerometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<AccelerometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<AccelerometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerMeasurementGenerator.AccelerometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-measurement-generator/-accelerometer-measurement-generator.html","searchKeys":["AccelerometerMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<AccelerometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<AccelerometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<AccelerometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<AccelerometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<AccelerometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<AccelerometerMeasurementGenerator, StandardDeviationBodyKinematics>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<AccelerometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerMeasurementGenerator.AccelerometerMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.SingleSensorCalibrationMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-single-sensor-calibration-measurement-generator.html","searchKeys":["SingleSensorCalibrationMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.SingleSensorCalibrationMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<MagnetometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<MagnetometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<MagnetometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<MagnetometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.MagnetometerMeasurementGenerator","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/-magnetometer-measurement-generator.html","searchKeys":["MagnetometerMeasurementGenerator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<MagnetometerMeasurementGenerator>? = null, initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<MagnetometerMeasurementGenerator>? = null, errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<MagnetometerMeasurementGenerator>? = null, staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<MagnetometerMeasurementGenerator>? = null, staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<MagnetometerMeasurementGenerator>? = null, generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<MagnetometerMeasurementGenerator, StandardDeviationBodyMagneticFluxDensity>? = null, resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<MagnetometerMeasurementGenerator>? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.MagnetometerMeasurementGenerator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.BaseStaticIntervalWithMeasurementGeneratorCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/-base-static-interval-with-measurement-generator-calibrator.html","searchKeys":["BaseStaticIntervalWithMeasurementGeneratorCalibrator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.BaseStaticIntervalWithMeasurementGeneratorCalibrator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.StaticIntervalAccelerometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-static-interval-accelerometer-calibrator.html","searchKeys":["StaticIntervalAccelerometerCalibrator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.StaticIntervalAccelerometerCalibrator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer.html","searchKeys":["AccelerometerGravityAndGyroscopeSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.AccelerometerAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/-accelerometer-and-gyroscope-sensor-measurement-syncer.html","searchKeys":["AccelerometerAndGyroscopeSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndGyroscopeSyncedSensorMeasurement, AccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.AccelerometerAndGyroscopeSensorMeasurementSyncer"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.StaticIntervalAccelerometerAndGyroscopeCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-static-interval-accelerometer-and-gyroscope-calibrator.html","searchKeys":["StaticIntervalAccelerometerAndGyroscopeCalibrator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerAndGyroscopeCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.StaticIntervalAccelerometerAndGyroscopeCalibrator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGyroscopeGroundTruthInitialBias: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalGyroscopeCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalGyroscopeCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalGyroscopeCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalGyroscopeCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalGyroscopeCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalGyroscopeCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalGyroscopeCalibrator>? = null, generatedGyroscopeMeasurementListener: StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalGyroscopeCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalGyroscopeCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalGyroscopeCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalGyroscopeCalibrator>? = null, initialGyroscopeBiasAvailableListener: StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.StaticIntervalGyroscopeCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-static-interval-gyroscope-calibrator.html","searchKeys":["StaticIntervalGyroscopeCalibrator","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGyroscopeGroundTruthInitialBias: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalGyroscopeCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalGyroscopeCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalGyroscopeCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalGyroscopeCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalGyroscopeCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalGyroscopeCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalGyroscopeCalibrator>? = null, generatedGyroscopeMeasurementListener: StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalGyroscopeCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalGyroscopeCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalGyroscopeCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalGyroscopeCalibrator>? = null, initialGyroscopeBiasAvailableListener: StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.StaticIntervalGyroscopeCalibrator"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["AccelerometerGravityAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerGravityAndMagnetometerSyncedSensorMeasurement, AccelerometerGravityAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.AccelerometerAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/-accelerometer-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["AccelerometerAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, accelerometerStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AccelerometerAndMagnetometerSyncedSensorMeasurement, AccelerometerAndMagnetometerSensorMeasurementSyncer>? = null, accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.AccelerometerAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.AttitudeAndAccelerometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/-attitude-and-accelerometer-sensor-measurement-syncer.html","searchKeys":["AttitudeAndAccelerometerSensorMeasurementSyncer","constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAndAccelerometerSyncedSensorMeasurement, AttitudeAndAccelerometerSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.AttitudeAndAccelerometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer.html","searchKeys":["AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer","constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer.html","searchKeys":["AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer","constructor(context: Context, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, attitudeSensorDelay: SensorDelay = SensorDelay.FASTEST, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, attitudeCapacity: Int = DEFAULT_ATTITUDE_CAPACITY, accelerometerCapacity: Int = DEFAULT_ACCELEROMETER_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, attitudeStartOffsetEnabled: Boolean = false, accelerometerStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement, AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer>? = null, attitudeInterpolator: AttitudeSensorMeasurementInterpolator = AttitudeLinearSensorMeasurementInterpolator(), accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator = AccelerometerQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer"]},{"name":"constructor(context: Context, batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.BatteryTemperatureService","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/-battery-temperature-service.html","searchKeys":["BatteryTemperatureService","constructor(context: Context, batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener? = null)","com.irurueta.android.navigation.inertial.BatteryTemperatureService.BatteryTemperatureService"]},{"name":"constructor(context: Context, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.GravityAndGyroscopeSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/-gravity-and-gyroscope-sensor-measurement-syncer.html","searchKeys":["GravityAndGyroscopeSensorMeasurementSyncer","constructor(context: Context, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndGyroscopeSyncedSensorMeasurement, GravityAndGyroscopeSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.GravityAndGyroscopeSensorMeasurementSyncer"]},{"name":"constructor(context: Context, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["GravityGyroscopeAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, gyroscopeCapacity: Int = DEFAULT_GYROSCOPE_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, gravityStartOffsetEnabled: Boolean = false, gyroscopeStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityGyroscopeAndMagnetometerSyncedSensorMeasurement, GravityGyroscopeAndMagnetometerSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator = GyroscopeQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.EcefAbsolutePoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-ecef-absolute-pose-estimator2.html","searchKeys":["EcefAbsolutePoseEstimator2","constructor(context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.EcefAbsolutePoseEstimator2"]},{"name":"constructor(context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.LocalPoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-local-pose-estimator2.html","searchKeys":["LocalPoseEstimator2","constructor(context: Context, initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingProcessor: Boolean = true, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, useDoubleFusedAttitudeProcessor: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.LocalPoseEstimator2"]},{"name":"constructor(context: Context, initialSpeed: SpeedTriad = SpeedTriad(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.RelativePoseEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-relative-pose-estimator2.html","searchKeys":["RelativePoseEstimator2","constructor(context: Context, initialSpeed: SpeedTriad = SpeedTriad(), sensorDelay: SensorDelay = SensorDelay.FASTEST, useAttitudeSensor: Boolean = true, useAccelerometerForAttitudeEstimation: Boolean = false, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateRelativeGyroscopeAttitudeProcessor: Boolean = true, poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener? = null, accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.RelativePoseEstimator2"]},{"name":"constructor(context: Context, location: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = true, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, useAccurateAttitudeEstimator: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: LocalPoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.LocalPoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/-local-pose-estimator.html","searchKeys":["LocalPoseEstimator","constructor(context: Context, location: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = true, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, useAccurateAttitudeEstimator: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: LocalPoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.LocalPoseEstimator"]},{"name":"constructor(context: Context, location: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = true, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, useAccurateAttitudeEstimator: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: EcefAbsolutePoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.EcefAbsolutePoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/-ecef-absolute-pose-estimator.html","searchKeys":["EcefAbsolutePoseEstimator","constructor(context: Context, location: Location, initialVelocity: NEDVelocity = NEDVelocity(), sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = true, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, useAccurateAttitudeEstimator: Boolean = true, estimatePoseTransformation: Boolean = false, poseAvailableListener: EcefAbsolutePoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.EcefAbsolutePoseEstimator"]},{"name":"constructor(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator.OnLevelingAvailableListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.AccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/-accurate-leveling-estimator.html","searchKeys":["AccurateLevelingEstimator","constructor(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator.OnLevelingAvailableListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.AccurateLevelingEstimator"]},{"name":"constructor(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: AccurateLevelingEstimator2.OnAccuracyChangedListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.AccurateLevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator2/-accurate-leveling-estimator2.html","searchKeys":["AccurateLevelingEstimator2","constructor(context: Context, location: Location, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: AccurateLevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: AccurateLevelingEstimator2.OnAccuracyChangedListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.AccurateLevelingEstimator2"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, estimateCovariances: Boolean = true, gyroscopeNoisePsd: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener? = null, accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener? = null, bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.KalmanAbsoluteAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-kalman-absolute-attitude-estimator.html","searchKeys":["KalmanAbsoluteAttitudeEstimator","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, estimateCovariances: Boolean = true, gyroscopeNoisePsd: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = KalmanAbsoluteAttitudeProcessor5.DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener? = null, accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener? = null, bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.KalmanAbsoluteAttitudeEstimator"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.LeveledRelativeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-leveled-relative-attitude-estimator.html","searchKeys":["LeveledRelativeAttitudeEstimator","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.LeveledRelativeAttitudeEstimator"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.FusedGeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-fused-geomagnetic-attitude-estimator.html","searchKeys":["FusedGeomagneticAttitudeEstimator","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.FusedGeomagneticAttitudeEstimator"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.DoubleFusedGeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-double-fused-geomagnetic-attitude-estimator.html","searchKeys":["DoubleFusedGeomagneticAttitudeEstimator","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.DoubleFusedGeomagneticAttitudeEstimator"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: GeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.GeomagneticAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/-geomagnetic-attitude-estimator.html","searchKeys":["GeomagneticAttitudeEstimator","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: GeomagneticAttitudeEstimator.OnAttitudeAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null, magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.GeomagneticAttitudeEstimator"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.LeveledRelativeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-leveled-relative-attitude-estimator2.html","searchKeys":["LeveledRelativeAttitudeEstimator2","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.LeveledRelativeAttitudeEstimator2"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.DoubleFusedGeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-double-fused-geomagnetic-attitude-estimator2.html","searchKeys":["DoubleFusedGeomagneticAttitudeEstimator2","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.DoubleFusedGeomagneticAttitudeEstimator2"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.FusedGeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-fused-geomagnetic-attitude-estimator2.html","searchKeys":["FusedGeomagneticAttitudeEstimator2","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, worldMagneticModel: WorldMagneticModel? = null, timestamp: Date = Date(), useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.FusedGeomagneticAttitudeEstimator2"]},{"name":"constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.GeomagneticAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-geomagnetic-attitude-estimator2.html","searchKeys":["GeomagneticAttitudeEstimator2","constructor(context: Context, location: Location? = null, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), worldMagneticModel: WorldMagneticModel? = null, timestamp: Date? = null, useWorldMagneticModel: Boolean = false, useAccurateLevelingEstimator: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener? = null, bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.GeomagneticAttitudeEstimator2"]},{"name":"constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper(), magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2.html","searchKeys":["StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2","constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper(), magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2"]},{"name":"constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper(), magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator.html","searchKeys":["StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator","constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gyroscopeSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isAccelerometerGroundTruthInitialBias: Boolean = false, isGyroscopeGroundTruthInitialBias: Boolean = false, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener? = null, generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener? = null, generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator>? = null, unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener? = null, initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper(), gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper(), magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator"]},{"name":"constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalMagnetometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalMagnetometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalMagnetometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalMagnetometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalMagnetometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalMagnetometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalMagnetometerCalibrator>? = null, generatedMagnetometerMeasurementListener: StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalMagnetometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalMagnetometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalMagnetometerCalibrator>? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.StaticIntervalMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-static-interval-magnetometer-calibrator.html","searchKeys":["StaticIntervalMagnetometerCalibrator","constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, accelerometerSensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isMagnetometerGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalMagnetometerCalibrator>? = null, initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalMagnetometerCalibrator>? = null, errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalMagnetometerCalibrator>? = null, staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalMagnetometerCalibrator>? = null, dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalMagnetometerCalibrator>? = null, staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalMagnetometerCalibrator>? = null, dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalMagnetometerCalibrator>? = null, generatedMagnetometerMeasurementListener: StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener? = null, readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalMagnetometerCalibrator>? = null, calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalMagnetometerCalibrator>? = null, stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalMagnetometerCalibrator>? = null, initialMagnetometerHardIronAvailableListener: StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null, magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.StaticIntervalMagnetometerCalibrator"]},{"name":"constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, initialHardIronAvailableListener: SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener? = null, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<SingleSensorStaticIntervalMagnetometerCalibrator, StandardDeviationBodyMagneticFluxDensity>? = null, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.SingleSensorStaticIntervalMagnetometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-single-sensor-static-interval-magnetometer-calibrator.html","searchKeys":["SingleSensorStaticIntervalMagnetometerCalibrator","constructor(context: Context, location: Location? = null, timestamp: Date = Date(), worldMagneticModel: WorldMagneticModel? = null, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGroundTruthInitialHardIron: Boolean = false, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, initialHardIronAvailableListener: SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener? = null, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<SingleSensorStaticIntervalMagnetometerCalibrator, StandardDeviationBodyMagneticFluxDensity>? = null, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<SingleSensorStaticIntervalMagnetometerCalibrator>? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.SingleSensorStaticIntervalMagnetometerCalibrator"]},{"name":"constructor(context: Context, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, gravityStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.GravityAndMagnetometerSensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/-gravity-and-magnetometer-sensor-measurement-syncer.html","searchKeys":["GravityAndMagnetometerSensorMeasurementSyncer","constructor(context: Context, magnetometerSensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, gravitySensorDelay: SensorDelay = SensorDelay.FASTEST, magnetometerSensorDelay: SensorDelay = SensorDelay.FASTEST, gravityCapacity: Int = DEFAULT_GRAVITY_CAPACITY, magnetometerCapacity: Int = DEFAULT_MAGNETOMETER_CAPACITY, gravityStartOffsetEnabled: Boolean = false, magnetometerStartOffsetEnabled: Boolean = false, stopWhenFilledBuffer: Boolean = true, staleOffsetNanos: Long = DEFAULT_STALE_OFFSET_NANOS, staleDetectionEnabled: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<GravityAndMagnetometerSyncedSensorMeasurement, GravityAndMagnetometerSensorMeasurementSyncer>? = null, gravityInterpolator: GravitySensorMeasurementInterpolator = GravityQuadraticSensorMeasurementInterpolator(), magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator = MagnetometerQuadraticSensorMeasurementInterpolator())","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.GravityAndMagnetometerSensorMeasurementSyncer"]},{"name":"constructor(context: Context, onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener? = null)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionService","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-service.html","searchKeys":["LocationPermissionService","constructor(context: Context, onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener? = null)","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionService"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.SensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/-sensor-collector.html","searchKeys":["SensorCollector","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.SensorCollector.SensorCollector"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector.BufferedGravitySensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gravity-sensor-collector/-buffered-gravity-sensor-collector.html","searchKeys":["BufferedGravitySensorCollector","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GravitySensorMeasurement, BufferedGravitySensorCollector>? = null)","com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector.BufferedGravitySensorCollector"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.AccumulatedMeasurementEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/-accumulated-measurement-estimator.html","searchKeys":["AccumulatedMeasurementEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>? = null)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.AccumulatedMeasurementEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GravityNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GravityNormEstimator>? = null, measurementListener: GravitySensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator.GravityNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gravity-norm-estimator/-gravity-norm-estimator.html","searchKeys":["GravityNormEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GravityNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GravityNormEstimator>? = null, measurementListener: GravitySensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator.GravityNormEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.AccumulatedTriadEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/-accumulated-triad-estimator.html","searchKeys":["AccumulatedTriadEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>? = null)","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.AccumulatedTriadEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: GravitySensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.GravitySensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/-gravity-sensor-collector.html","searchKeys":["GravitySensorCollector","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: GravitySensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.GravitySensorCollector"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GravitySensorMeasurement, GravitySensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GravitySensorMeasurement, GravitySensorCollector2>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2.GravitySensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector2/-gravity-sensor-collector2.html","searchKeys":["GravitySensorCollector2","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GravitySensorMeasurement, GravitySensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GravitySensorMeasurement, GravitySensorCollector2>? = null)","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2.GravitySensorCollector2"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, useAccelerometer: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, estimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.GravityEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/-gravity-estimator.html","searchKeys":["GravityEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.FASTEST, useAccelerometer: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, estimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.GravityEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, startOffsetEnabled: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.AttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/-attitude-estimator2.html","searchKeys":["AttitudeEstimator2","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, attitudeSensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, startOffsetEnabled: Boolean = true, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.AttitudeEstimator2"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, estimateCovariances: Boolean = true, gyroscopeNoisePsd: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener? = null, bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.KalmanRelativeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-kalman-relative-attitude-estimator.html","searchKeys":["KalmanRelativeAttitudeEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, estimateCovariances: Boolean = true, gyroscopeNoisePsd: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = KalmanRelativeAttitudeProcessor2.DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, minimumUnreliableDurationSeconds: Double = DEFAULT_MINIMUM_UNRELIABLE_DURATION_SECONDS, attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener? = null, accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener? = null, bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.KalmanRelativeAttitudeEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: L? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.BaseLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/-base-leveling-estimator.html","searchKeys":["BaseLevelingEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: L? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.BaseLevelingEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator.OnLevelingAvailableListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.LevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/-leveling-estimator.html","searchKeys":["LevelingEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator.OnLevelingAvailableListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.LevelingEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: LevelingEstimator2.OnAccuracyChangedListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.LevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator2/-leveling-estimator2.html","searchKeys":["LevelingEstimator2","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometer: Boolean = true, startOffsetEnabled: Boolean = true, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, levelingAvailableListener: LevelingEstimator2.OnLevelingAvailableListener? = null, accuracyChangedListener: LevelingEstimator2.OnAccuracyChangedListener? = null, location: Location? = null, adjustGravityNorm: Boolean = true)","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.LevelingEstimator2"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, poseAvailableListener: RelativePoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, initialSpeed: SpeedTriad = SpeedTriad(), initialLocation: Location? = null)","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.RelativePoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/-relative-pose-estimator.html","searchKeys":["RelativePoseEstimator","constructor(context: Context, sensorDelay: SensorDelay = SensorDelay.GAME, useAccelerometerForAttitudeEstimation: Boolean = false, accelerometerSensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, gyroscopeSensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, accelerometerAveragingFilter: AveragingFilter = LowPassAveragingFilter(), useAccurateLevelingEstimator: Boolean = false, useAccurateRelativeGyroscopeAttitudeEstimator: Boolean = true, poseAvailableListener: RelativePoseEstimator.OnPoseAvailableListener? = null, accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, gravityEstimationListener: GravityEstimator.OnEstimationListener? = null, initialSpeed: SpeedTriad = SpeedTriad(), initialLocation: Location? = null)","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.RelativePoseEstimator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay, capacity: Int, startOffsetEnabled: Boolean, stopWhenFilledBuffer: Boolean, skipWhenProcessing: Boolean, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?, measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.BufferedSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-buffered-sensor-collector.html","searchKeys":["BufferedSensorCollector","constructor(context: Context, sensorDelay: SensorDelay, capacity: Int, startOffsetEnabled: Boolean, stopWhenFilledBuffer: Boolean, skipWhenProcessing: Boolean, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?, measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?)","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.BufferedSensorCollector"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>? = null, errorListener: IntervalDetector.OnErrorListener<I>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>? = null, resetListener: IntervalDetector.OnResetListener<I>? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.IntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-interval-detector.html","searchKeys":["IntervalDetector","constructor(context: Context, sensorDelay: SensorDelay, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>? = null, errorListener: IntervalDetector.OnErrorListener<I>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>? = null, resetListener: IntervalDetector.OnResetListener<I>? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.IntervalDetector"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay, solveCalibrationWhenEnoughMeasurements: Boolean, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?, qualityScoreMapper: QualityScoreMapper<R>)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.SingleSensorStaticIntervalCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-single-sensor-static-interval-calibrator.html","searchKeys":["SingleSensorStaticIntervalCalibrator","constructor(context: Context, sensorDelay: SensorDelay, solveCalibrationWhenEnoughMeasurements: Boolean, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?, qualityScoreMapper: QualityScoreMapper<R>)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.SingleSensorStaticIntervalCalibrator"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay, startOffsetEnabled: Boolean, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?, measurementListener: SensorCollector2.OnMeasurementListener<M, C>?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.SensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/-sensor-collector2.html","searchKeys":["SensorCollector2","constructor(context: Context, sensorDelay: SensorDelay, startOffsetEnabled: Boolean, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?, measurementListener: SensorCollector2.OnMeasurementListener<M, C>?)","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.SensorCollector2"]},{"name":"constructor(context: Context, sensorDelay: SensorDelay, useAccelerometer: Boolean, startOffsetEnabled: Boolean, accelerometerSensorType: AccelerometerSensorType, accelerometerAveragingFilter: AveragingFilter, estimateCoordinateTransformation: Boolean, estimateEulerAngles: Boolean, levelingAvailableListener: L1?, accuracyChangedListener: L2?, adjustGravityNorm: Boolean)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.BaseLevelingEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/-base-leveling-estimator2.html","searchKeys":["BaseLevelingEstimator2","constructor(context: Context, sensorDelay: SensorDelay, useAccelerometer: Boolean, startOffsetEnabled: Boolean, accelerometerSensorType: AccelerometerSensorType, accelerometerAveragingFilter: AveragingFilter, estimateCoordinateTransformation: Boolean, estimateEulerAngles: Boolean, levelingAvailableListener: L1?, accuracyChangedListener: L2?, adjustGravityNorm: Boolean)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.BaseLevelingEstimator2"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.BufferedAccelerometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-accelerometer-sensor-collector/-buffered-accelerometer-sensor-collector.html","searchKeys":["BufferedAccelerometerSensorCollector","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AccelerometerSensorMeasurement, BufferedAccelerometerSensorCollector>? = null)","com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.BufferedAccelerometerSensorCollector"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<AccelerometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<AccelerometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<AccelerometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<AccelerometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<AccelerometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<AccelerometerIntervalDetector>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.AccelerometerIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-accelerometer-interval-detector/-accelerometer-interval-detector.html","searchKeys":["AccelerometerIntervalDetector","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<AccelerometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<AccelerometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<AccelerometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<AccelerometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<AccelerometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<AccelerometerIntervalDetector>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.AccelerometerIntervalDetector"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<AccelerometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<AccelerometerNormEstimator>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.AccelerometerNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-norm-estimator/-accelerometer-norm-estimator.html","searchKeys":["AccelerometerNormEstimator","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<AccelerometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<AccelerometerNormEstimator>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.AccelerometerNormEstimator"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<AccelerometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<AccelerometerNoiseEstimator>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.AccelerometerNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-noise-estimator/-accelerometer-noise-estimator.html","searchKeys":["AccelerometerNoiseEstimator","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<AccelerometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<AccelerometerNoiseEstimator>? = null, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.AccelerometerNoiseEstimator"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.AccelerometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/-accelerometer-sensor-collector.html","searchKeys":["AccelerometerSensorCollector","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: AccelerometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.AccelerometerSensorCollector"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, unreliableGravityNormEstimationListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialBiasAvailableListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener? = null, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<SingleSensorStaticIntervalAccelerometerCalibrator, StandardDeviationBodyKinematics>? = null, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.SingleSensorStaticIntervalAccelerometerCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-single-sensor-static-interval-accelerometer-calibrator.html","searchKeys":["SingleSensorStaticIntervalAccelerometerCalibrator","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, solveCalibrationWhenEnoughMeasurements: Boolean = true, isGroundTruthInitialBias: Boolean = false, location: Location? = null, initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, unreliableGravityNormEstimationListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener? = null, initialBiasAvailableListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener? = null, newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<SingleSensorStaticIntervalAccelerometerCalibrator, StandardDeviationBodyKinematics>? = null, readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<SingleSensorStaticIntervalAccelerometerCalibrator>? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.SingleSensorStaticIntervalAccelerometerCalibrator"]},{"name":"constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.AccelerometerSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector2/-accelerometer-sensor-collector2.html","searchKeys":["AccelerometerSensorCollector2","constructor(context: Context, sensorType: AccelerometerSensorType = AccelerometerSensorType.ACCELEROMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AccelerometerSensorMeasurement, AccelerometerSensorCollector2>? = null)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.AccelerometerSensorCollector2"]},{"name":"constructor(context: Context, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.BufferedAttitudeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-attitude-sensor-collector/-buffered-attitude-sensor-collector.html","searchKeys":["BufferedAttitudeSensorCollector","constructor(context: Context, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<AttitudeSensorMeasurement, BufferedAttitudeSensorCollector>? = null)","com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.BufferedAttitudeSensorCollector"]},{"name":"constructor(context: Context, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.AttitudeSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-collector2/-attitude-sensor-collector2.html","searchKeys":["AttitudeSensorCollector2","constructor(context: Context, sensorType: AttitudeSensorType = AttitudeSensorType.ABSOLUTE_ATTITUDE, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<AttitudeSensorMeasurement, AttitudeSensorCollector2>? = null)","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.AttitudeSensorCollector2"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.BufferedGyroscopeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gyroscope-sensor-collector/-buffered-gyroscope-sensor-collector.html","searchKeys":["BufferedGyroscopeSensorCollector","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<GyroscopeSensorMeasurement, BufferedGyroscopeSensorCollector>? = null)","com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.BufferedGyroscopeSensorCollector"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<GyroscopeIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<GyroscopeIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<GyroscopeIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<GyroscopeIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<GyroscopeIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<GyroscopeIntervalDetector>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.GyroscopeIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-gyroscope-interval-detector/-gyroscope-interval-detector.html","searchKeys":["GyroscopeIntervalDetector","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<GyroscopeIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<GyroscopeIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<GyroscopeIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<GyroscopeIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<GyroscopeIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<GyroscopeIntervalDetector>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.GyroscopeIntervalDetector"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GyroscopeNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GyroscopeNormEstimator>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.GyroscopeNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-norm-estimator/-gyroscope-norm-estimator.html","searchKeys":["GyroscopeNormEstimator","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<GyroscopeNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<GyroscopeNormEstimator>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.GyroscopeNormEstimator"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<GyroscopeNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<GyroscopeNoiseEstimator>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.GyroscopeNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-noise-estimator/-gyroscope-noise-estimator.html","searchKeys":["GyroscopeNoiseEstimator","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<GyroscopeNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<GyroscopeNoiseEstimator>? = null, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.GyroscopeNoiseEstimator"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.GyroscopeSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/-gyroscope-sensor-collector.html","searchKeys":["GyroscopeSensorCollector","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.GyroscopeSensorCollector"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.GyroscopeSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector2/-gyroscope-sensor-collector2.html","searchKeys":["GyroscopeSensorCollector2","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<GyroscopeSensorMeasurement, GyroscopeSensorCollector2>? = null)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.GyroscopeSensorCollector2"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateDisplayEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator.RelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator/-relative-gyroscope-attitude-estimator.html","searchKeys":["RelativeGyroscopeAttitudeEstimator","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateDisplayEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator.RelativeGyroscopeAttitudeEstimator"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator.AccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator/-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["AccurateRelativeGyroscopeAttitudeEstimator","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator.AccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: L? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.BaseRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/-base-relative-gyroscope-attitude-estimator.html","searchKeys":["BaseRelativeGyroscopeAttitudeEstimator","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: L? = null, gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.BaseRelativeGyroscopeAttitudeEstimator"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.AccurateRelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator2/-accurate-relative-gyroscope-attitude-estimator2.html","searchKeys":["AccurateRelativeGyroscopeAttitudeEstimator2","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.AccurateRelativeGyroscopeAttitudeEstimator2"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.RelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator2/-relative-gyroscope-attitude-estimator2.html","searchKeys":["RelativeGyroscopeAttitudeEstimator2","constructor(context: Context, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.GAME, startOffsetEnabled: Boolean = false, estimateCoordinateTransformation: Boolean = false, estimateEulerAngles: Boolean = true, attitudeAvailableListener: RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener? = null, accuracyChangedListener: RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.RelativeGyroscopeAttitudeEstimator2"]},{"name":"constructor(context: Context, sensorType: GyroscopeSensorType, sensorDelay: SensorDelay, startOffsetEnabled: Boolean, estimateCoordinateTransformation: Boolean, estimateEulerAngles: Boolean, attitudeAvailableListener: L1?, accuracyChangedListener: L2?)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.BaseRelativeGyroscopeAttitudeEstimator2","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/-base-relative-gyroscope-attitude-estimator2.html","searchKeys":["BaseRelativeGyroscopeAttitudeEstimator2","constructor(context: Context, sensorType: GyroscopeSensorType, sensorDelay: SensorDelay, startOffsetEnabled: Boolean, estimateCoordinateTransformation: Boolean, estimateEulerAngles: Boolean, attitudeAvailableListener: L1?, accuracyChangedListener: L2?)","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.BaseRelativeGyroscopeAttitudeEstimator2"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.BufferedMagnetometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-magnetometer-sensor-collector/-buffered-magnetometer-sensor-collector.html","searchKeys":["BufferedMagnetometerSensorCollector","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, capacity: Int = DEFAULT_CAPACITY, startOffsetEnabled: Boolean = true, stopWhenFilledBuffer: Boolean = true, skipWhenProcessing: Boolean = true, accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null, measurementListener: BufferedSensorCollector.OnMeasurementListener<MagnetometerSensorMeasurement, BufferedMagnetometerSensorCollector>? = null)","com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.BufferedMagnetometerSensorCollector"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<MagnetometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<MagnetometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<MagnetometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<MagnetometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<MagnetometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<MagnetometerIntervalDetector>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.MagnetometerIntervalDetector","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-magnetometer-interval-detector/-magnetometer-interval-detector.html","searchKeys":["MagnetometerIntervalDetector","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, initializationStartedListener: IntervalDetector.OnInitializationStartedListener<MagnetometerIntervalDetector>? = null, initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<MagnetometerIntervalDetector>? = null, errorListener: IntervalDetector.OnErrorListener<MagnetometerIntervalDetector>? = null, staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<MagnetometerIntervalDetector>? = null, dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<MagnetometerIntervalDetector>? = null, resetListener: IntervalDetector.OnResetListener<MagnetometerIntervalDetector>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.MagnetometerIntervalDetector"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<MagnetometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<MagnetometerNormEstimator>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.MagnetometerNormEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-norm-estimator/-magnetometer-norm-estimator.html","searchKeys":["MagnetometerNormEstimator","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<MagnetometerNormEstimator>? = null, unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<MagnetometerNormEstimator>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.MagnetometerNormEstimator"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<MagnetometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<MagnetometerNoiseEstimator>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null)","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.MagnetometerNoiseEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-noise-estimator/-magnetometer-noise-estimator.html","searchKeys":["MagnetometerNoiseEstimator","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION, completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<MagnetometerNoiseEstimator>? = null, unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<MagnetometerNoiseEstimator>? = null, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null)","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.MagnetometerNoiseEstimator"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.MagnetometerSensorCollector","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/-magnetometer-sensor-collector.html","searchKeys":["MagnetometerSensorCollector","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, measurementListener: MagnetometerSensorCollector.OnMeasurementListener? = null, accuracyChangedListener: SensorCollector.OnAccuracyChangedListener? = null)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.MagnetometerSensorCollector"]},{"name":"constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.MagnetometerSensorCollector2","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector2/-magnetometer-sensor-collector2.html","searchKeys":["MagnetometerSensorCollector2","constructor(context: Context, sensorType: MagnetometerSensorType = MagnetometerSensorType.MAGNETOMETER_UNCALIBRATED, sensorDelay: SensorDelay = SensorDelay.FASTEST, startOffsetEnabled: Boolean = true, accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null, measurementListener: SensorCollector2.OnMeasurementListener<MagnetometerSensorMeasurement, MagnetometerSensorCollector2>? = null)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.MagnetometerSensorCollector2"]},{"name":"constructor(context: Context, stopWhenFilledBuffer: Boolean, staleOffsetNanos: Long, staleDetectionEnabled: Boolean, skipWhenProcessing: Boolean, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.SensorMeasurementSyncer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-sensor-measurement-syncer.html","searchKeys":["SensorMeasurementSyncer","constructor(context: Context, stopWhenFilledBuffer: Boolean, staleOffsetNanos: Long, staleDetectionEnabled: Boolean, skipWhenProcessing: Boolean, accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?, bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?, syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?, staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.SensorMeasurementSyncer"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerLinearSensorMeasurementInterpolator.AccelerometerLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-linear-sensor-measurement-interpolator/-accelerometer-linear-sensor-measurement-interpolator.html","searchKeys":["AccelerometerLinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerLinearSensorMeasurementInterpolator.AccelerometerLinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerQuadraticSensorMeasurementInterpolator.AccelerometerQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-quadratic-sensor-measurement-interpolator/-accelerometer-quadratic-sensor-measurement-interpolator.html","searchKeys":["AccelerometerQuadraticSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerQuadraticSensorMeasurementInterpolator.AccelerometerQuadraticSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeLinearSensorMeasurementInterpolator.AttitudeLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-linear-sensor-measurement-interpolator/-attitude-linear-sensor-measurement-interpolator.html","searchKeys":["AttitudeLinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeLinearSensorMeasurementInterpolator.AttitudeLinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityLinearSensorMeasurementInterpolator.GravityLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-linear-sensor-measurement-interpolator/-gravity-linear-sensor-measurement-interpolator.html","searchKeys":["GravityLinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityLinearSensorMeasurementInterpolator.GravityLinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravityQuadraticSensorMeasurementInterpolator.GravityQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-quadratic-sensor-measurement-interpolator/-gravity-quadratic-sensor-measurement-interpolator.html","searchKeys":["GravityQuadraticSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.GravityQuadraticSensorMeasurementInterpolator.GravityQuadraticSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeLinearSensorMeasurementInterpolator.GyroscopeLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-linear-sensor-measurement-interpolator/-gyroscope-linear-sensor-measurement-interpolator.html","searchKeys":["GyroscopeLinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeLinearSensorMeasurementInterpolator.GyroscopeLinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeQuadraticSensorMeasurementInterpolator.GyroscopeQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-quadratic-sensor-measurement-interpolator/-gyroscope-quadratic-sensor-measurement-interpolator.html","searchKeys":["GyroscopeQuadraticSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeQuadraticSensorMeasurementInterpolator.GyroscopeQuadraticSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerLinearSensorMeasurementInterpolator.MagnetometerLinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-linear-sensor-measurement-interpolator/-magnetometer-linear-sensor-measurement-interpolator.html","searchKeys":["MagnetometerLinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerLinearSensorMeasurementInterpolator.MagnetometerLinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean = true)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerQuadraticSensorMeasurementInterpolator.MagnetometerQuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-quadratic-sensor-measurement-interpolator/-magnetometer-quadratic-sensor-measurement-interpolator.html","searchKeys":["MagnetometerQuadraticSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean = true)","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerQuadraticSensorMeasurementInterpolator.MagnetometerQuadraticSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.LinearSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/-linear-sensor-measurement-interpolator.html","searchKeys":["LinearSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean)","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.LinearSensorMeasurementInterpolator"]},{"name":"constructor(copyIfNotInitialized: Boolean)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.QuadraticSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/-quadratic-sensor-measurement-interpolator.html","searchKeys":["QuadraticSensorMeasurementInterpolator","constructor(copyIfNotInitialized: Boolean)","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.QuadraticSensorMeasurementInterpolator"]},{"name":"constructor(dynamParams: Int, measureParams: Int)","description":"com.irurueta.android.navigation.inertial.KalmanFilter.KalmanFilter","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/-kalman-filter.html","searchKeys":["KalmanFilter","constructor(dynamParams: Int, measureParams: Int)","com.irurueta.android.navigation.inertial.KalmanFilter.KalmanFilter"]},{"name":"constructor(dynamParams: Int, measureParams: Int, controlParams: Int)","description":"com.irurueta.android.navigation.inertial.KalmanFilter.KalmanFilter","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/-kalman-filter.html","searchKeys":["KalmanFilter","constructor(dynamParams: Int, measureParams: Int, controlParams: Int)","com.irurueta.android.navigation.inertial.KalmanFilter.KalmanFilter"]},{"name":"constructor(externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.KalmanAccelerometerCorrector","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/-kalman-accelerometer-corrector.html","searchKeys":["KalmanAccelerometerCorrector","constructor(externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.KalmanAccelerometerCorrector"]},{"name":"constructor(gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement.html","searchKeys":["GravityGyroscopeAndMagnetometerSyncedSensorMeasurement","constructor(gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.GravityAndGyroscopeSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-synced-sensor-measurement/-gravity-and-gyroscope-synced-sensor-measurement.html","searchKeys":["GravityAndGyroscopeSyncedSensorMeasurement","constructor(gravityMeasurement: GravitySensorMeasurement? = null, gyroscopeMeasurement: GyroscopeSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.GravityAndGyroscopeSyncedSensorMeasurement"]},{"name":"constructor(gravityMeasurement: GravitySensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.GravityAndMagnetometerSyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-synced-sensor-measurement/-gravity-and-magnetometer-synced-sensor-measurement.html","searchKeys":["GravityAndMagnetometerSyncedSensorMeasurement","constructor(gravityMeasurement: GravitySensorMeasurement? = null, magnetometerMeasurement: MagnetometerSensorMeasurement? = null, timestamp: Long = 0)","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.GravityAndMagnetometerSyncedSensorMeasurement"]},{"name":"constructor(gx: Float = 0.0f, gy: Float = 0.0f, gz: Float = 0.0f, timestamp: Long = 0, accuracy: SensorAccuracy? = null)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.GravitySensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/-gravity-sensor-measurement.html","searchKeys":["GravitySensorMeasurement","constructor(gx: Float = 0.0f, gy: Float = 0.0f, gz: Float = 0.0f, timestamp: Long = 0, accuracy: SensorAccuracy? = null)","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.GravitySensorMeasurement"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor.AccelerometerDoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-e-c-e-f-absolute-pose-processor/-accelerometer-double-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["AccelerometerDoubleFusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor.AccelerometerDoubleFusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor.AccelerometerFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-e-c-e-f-absolute-pose-processor/-accelerometer-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["AccelerometerFusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor.AccelerometerFusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor.AttitudeECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-e-c-e-f-absolute-pose-processor/-attitude-e-c-e-f-absolute-pose-processor.html","searchKeys":["AttitudeECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor.AttitudeECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor.DoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-e-c-e-f-absolute-pose-processor/-double-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["DoubleFusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor.DoubleFusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor.FusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-e-c-e-f-absolute-pose-processor/-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["FusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor.FusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor.AccelerometerDoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-local-pose-processor/-accelerometer-double-fused-local-pose-processor.html","searchKeys":["AccelerometerDoubleFusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor.AccelerometerDoubleFusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor.AccelerometerFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-local-pose-processor/-accelerometer-fused-local-pose-processor.html","searchKeys":["AccelerometerFusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor.AccelerometerFusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor.AttitudeLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-local-pose-processor/-attitude-local-pose-processor.html","searchKeys":["AttitudeLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor.AttitudeLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor.DoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-local-pose-processor/-double-fused-local-pose-processor.html","searchKeys":["DoubleFusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor.DoubleFusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor.FusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-local-pose-processor/-fused-local-pose-processor.html","searchKeys":["FusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity = NEDVelocity(), estimatePoseTransformation: Boolean = false, processorListener: BaseLocalPoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor.FusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.BaseDoubleFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/-base-double-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["BaseDoubleFusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.BaseDoubleFusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.BaseECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/-base-e-c-e-f-absolute-pose-processor.html","searchKeys":["BaseECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.BaseECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.BaseFusedECEFAbsolutePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/-base-fused-e-c-e-f-absolute-pose-processor.html","searchKeys":["BaseFusedECEFAbsolutePoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.BaseFusedECEFAbsolutePoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.BaseDoubleFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/-base-double-fused-local-pose-processor.html","searchKeys":["BaseDoubleFusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.BaseDoubleFusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.BaseFusedLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/-base-fused-local-pose-processor.html","searchKeys":["BaseFusedLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.BaseFusedLocalPoseProcessor"]},{"name":"constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.BaseLocalPoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/-base-local-pose-processor.html","searchKeys":["BaseLocalPoseProcessor","constructor(initialLocation: Location, initialVelocity: NEDVelocity, estimatePoseTransformation: Boolean, processorListener: BaseLocalPoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.BaseLocalPoseProcessor"]},{"name":"constructor(initialSpeed: SpeedTriad = SpeedTriad(), averagingFilter: AveragingFilter = LowPassAveragingFilter(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.AttitudeRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/-attitude-relative-pose-processor.html","searchKeys":["AttitudeRelativePoseProcessor","constructor(initialSpeed: SpeedTriad = SpeedTriad(), averagingFilter: AveragingFilter = LowPassAveragingFilter(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.AttitudeRelativePoseProcessor"]},{"name":"constructor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor.AccelerometerFusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-relative-pose-processor/-accelerometer-fused-relative-pose-processor.html","searchKeys":["AccelerometerFusedRelativePoseProcessor","constructor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor.AccelerometerFusedRelativePoseProcessor"]},{"name":"constructor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor.FusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-relative-pose-processor/-fused-relative-pose-processor.html","searchKeys":["FusedRelativePoseProcessor","constructor(initialSpeed: SpeedTriad = SpeedTriad(), processorListener: BaseRelativePoseProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor.FusedRelativePoseProcessor"]},{"name":"constructor(initialSpeed: SpeedTriad, processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.BaseFusedRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/-base-fused-relative-pose-processor.html","searchKeys":["BaseFusedRelativePoseProcessor","constructor(initialSpeed: SpeedTriad, processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.BaseFusedRelativePoseProcessor"]},{"name":"constructor(initialSpeed: SpeedTriad, processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.BaseRelativePoseProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/-base-relative-pose-processor.html","searchKeys":["BaseRelativePoseProcessor","constructor(initialSpeed: SpeedTriad, processorListener: BaseRelativePoseProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.BaseRelativePoseProcessor"]},{"name":"constructor(input: LowPassAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.LowPassAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-low-pass-averaging-filter/-low-pass-averaging-filter.html","searchKeys":["LowPassAveragingFilter","constructor(input: LowPassAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.LowPassAveragingFilter"]},{"name":"constructor(input: MeanAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.MeanAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/-mean-averaging-filter.html","searchKeys":["MeanAveragingFilter","constructor(input: MeanAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.MeanAveragingFilter"]},{"name":"constructor(input: MedianAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.MedianAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/-median-averaging-filter.html","searchKeys":["MedianAveragingFilter","constructor(input: MedianAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.MedianAveragingFilter"]},{"name":"constructor(location: Location, processorListener: BaseLevelingProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.AccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/-accurate-leveling-processor.html","searchKeys":["AccurateLevelingProcessor","constructor(location: Location, processorListener: BaseLevelingProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.AccurateLevelingProcessor"]},{"name":"constructor(location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<GravitySensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor.GravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-gravity-processor/-gravity-processor.html","searchKeys":["GravityProcessor","constructor(location: Location? = null, adjustGravityNorm: Boolean = true, processorListener: BaseGravityProcessor.OnProcessedListener<GravitySensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor.GravityProcessor"]},{"name":"constructor(location: Location? = null, currentDate: Date? = null, computeExternalAcceleration: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEulerAnglesCovariance: Boolean = true, fixMagnetometerMeasurements: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.KalmanAbsoluteAttitudeProcessor4","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-kalman-absolute-attitude-processor4.html","searchKeys":["KalmanAbsoluteAttitudeProcessor4","constructor(location: Location? = null, currentDate: Date? = null, computeExternalAcceleration: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEulerAnglesCovariance: Boolean = true, fixMagnetometerMeasurements: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.KalmanAbsoluteAttitudeProcessor4"]},{"name":"constructor(location: Location? = null, currentDate: Date? = null, computeExternalAcceleration: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEulerAnglesCovariance: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: QuaternionStepIntegratorType = QuaternionStepIntegratorType.SUH, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD, processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.KalmanAbsoluteAttitudeProcessor5","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-kalman-absolute-attitude-processor5.html","searchKeys":["KalmanAbsoluteAttitudeProcessor5","constructor(location: Location? = null, currentDate: Date? = null, computeExternalAcceleration: Boolean = true, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEulerAnglesCovariance: Boolean = true, phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegrator: QuaternionStepIntegratorType = QuaternionStepIntegratorType.SUH, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod = DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD, processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.KalmanAbsoluteAttitudeProcessor5"]},{"name":"constructor(location: Location? = null, currentDate: Date? = null, currentTemperature: Double = DEFAULT_TEMPERATURE_CELSIUS, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEcefAttitudeCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeEcefAccelerationCovariance: Boolean = true, computeNedRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, temperatureStandardDeviation: Double = DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.KalmanAbsoluteAttitudeProcessor3","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-kalman-absolute-attitude-processor3.html","searchKeys":["KalmanAbsoluteAttitudeProcessor3","constructor(location: Location? = null, currentDate: Date? = null, currentTemperature: Double = DEFAULT_TEMPERATURE_CELSIUS, computeEulerAngles: Boolean = true, computeCovariances: Boolean = true, computeEcefAttitudeCovariance: Boolean = true, computeEulerAnglesCovariance: Boolean = true, computeEcefAccelerationCovariance: Boolean = true, computeNedRotationAxisCovariance: Boolean = true, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD, accelerometerNoiseStandardDeviation: Double = DEFAULT_ACCELEROMETER_NOISE_STANDARD_DEVIATION, magnetometerNoiseStandardDeviation: Double = DEFAULT_MAGNETOMETER_NOISE_STANDARD_DEVIATION, temperatureStandardDeviation: Double = DEFAULT_TEMPERATURE_NOISE_STANDARD_DEVIATION, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegrator.DEFAULT_TYPE, freeFallThreshold: Double = DEFAULT_FREE_FALL_THRESHOLD, symmetricThreshold: Double = SYMMETRIC_THRESHOLD, processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null, numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.KalmanAbsoluteAttitudeProcessor3"]},{"name":"constructor(location: Location?, adjustGravityNorm: Boolean, processorListener: BaseGravityProcessor.OnProcessedListener<T>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.BaseGravityProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/-base-gravity-processor.html","searchKeys":["BaseGravityProcessor","constructor(location: Location?, adjustGravityNorm: Boolean, processorListener: BaseGravityProcessor.OnProcessedListener<T>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.BaseGravityProcessor"]},{"name":"constructor(maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION)","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.BaseAccumulatedEstimator","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/-base-accumulated-estimator.html","searchKeys":["BaseAccumulatedEstimator","constructor(maxSamples: Int = DEFAULT_MAX_SAMPLES, maxDurationMillis: Long = DEFAULT_MAX_DURATION_MILLIS, stopMode: StopMode = StopMode.MAX_SAMPLES_OR_DURATION)","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.BaseAccumulatedEstimator"]},{"name":"constructor(measurementX: Speed, measurementY: Speed, measurementZ: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-speed-triad.html","searchKeys":["SpeedTriad","constructor(measurementX: Speed, measurementY: Speed, measurementZ: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad"]},{"name":"constructor(measurements: List<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalGyroscopeCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalGyroscopeCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalGyroscopeCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalGyroscopeCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, isGroundTruthInitialBias: Boolean = false, isCommonAxisUsed: Boolean = false, initialBiasX: Double? = null, initialBiasY: Double? = null, initialBiasZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, isGDependentCrossBiasesEstimated: Boolean = false, gyroscopeInitialGg: Matrix = Matrix(BodyKinematics.COMPONENTS, BodyKinematics.COMPONENTS), accelerometerBiasX: Double? = null, accelerometerBiasY: Double? = null, accelerometerBiasZ: Double? = null, accelerometerSx: Double = 0.0, accelerometerSy: Double = 0.0, accelerometerSz: Double = 0.0, accelerometerMxy: Double = 0.0, accelerometerMxz: Double = 0.0, accelerometerMyx: Double = 0.0, accelerometerMyz: Double = 0.0, accelerometerMzx: Double = 0.0, accelerometerMzy: Double = 0.0, baseNoiseLevel: Double? = null, qualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.GyroscopeInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/-gyroscope-internal-calibrator-builder.html","searchKeys":["GyroscopeInternalCalibratorBuilder","constructor(measurements: List<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalGyroscopeCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalGyroscopeCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalGyroscopeCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalGyroscopeCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, isGroundTruthInitialBias: Boolean = false, isCommonAxisUsed: Boolean = false, initialBiasX: Double? = null, initialBiasY: Double? = null, initialBiasZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, isGDependentCrossBiasesEstimated: Boolean = false, gyroscopeInitialGg: Matrix = Matrix(BodyKinematics.COMPONENTS, BodyKinematics.COMPONENTS), accelerometerBiasX: Double? = null, accelerometerBiasY: Double? = null, accelerometerBiasZ: Double? = null, accelerometerSx: Double = 0.0, accelerometerSy: Double = 0.0, accelerometerSz: Double = 0.0, accelerometerMxy: Double = 0.0, accelerometerMxz: Double = 0.0, accelerometerMyx: Double = 0.0, accelerometerMyz: Double = 0.0, accelerometerMzx: Double = 0.0, accelerometerMzy: Double = 0.0, baseNoiseLevel: Double? = null, qualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>> = DefaultGyroscopeQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.GyroscopeInternalCalibratorBuilder"]},{"name":"constructor(measurements: List<StandardDeviationBodyKinematics>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalAccelerometerCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalAccelerometerCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalAccelerometerCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalAccelerometerCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, location: Location? = null, gravityNorm: Double? = null, isGroundTruthInitialBias: Boolean = false, isCommonAxisUsed: Boolean = false, initialBiasX: Double? = null, initialBiasY: Double? = null, initialBiasZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, baseNoiseLevel: Double? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.AccelerometerInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/-accelerometer-internal-calibrator-builder.html","searchKeys":["AccelerometerInternalCalibratorBuilder","constructor(measurements: List<StandardDeviationBodyKinematics>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalAccelerometerCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalAccelerometerCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalAccelerometerCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalAccelerometerCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, location: Location? = null, gravityNorm: Double? = null, isGroundTruthInitialBias: Boolean = false, isCommonAxisUsed: Boolean = false, initialBiasX: Double? = null, initialBiasY: Double? = null, initialBiasZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, baseNoiseLevel: Double? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics> = DefaultAccelerometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.AccelerometerInternalCalibratorBuilder"]},{"name":"constructor(measurements: List<StandardDeviationBodyMagneticFluxDensity>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, groundTruthMagneticFluxDensityNorm: Double? = null, location: Location? = null, timestamp: Date? = Date(), robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalMagnetometerCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalMagnetometerCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalMagnetometerCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalMagnetometerCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, isGroundTruthInitialHardIron: Boolean = false, isCommonAxisUsed: Boolean = false, initialHardIronX: Double? = null, initialHardIronY: Double? = null, initialHardIronZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, baseNoiseLevel: Double? = null, worldMagneticModel: WorldMagneticModel? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.MagnetometerInternalCalibratorBuilder","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/-magnetometer-internal-calibrator-builder.html","searchKeys":["MagnetometerInternalCalibratorBuilder","constructor(measurements: List<StandardDeviationBodyMagneticFluxDensity>, robustPreliminarySubsetSize: Int, minimumRequiredMeasurements: Int, groundTruthMagneticFluxDensityNorm: Double? = null, location: Location? = null, timestamp: Date? = Date(), robustMethod: RobustEstimatorMethod? = null, robustConfidence: Double = StaticIntervalMagnetometerCalibrator.ROBUST_DEFAULT_CONFIDENCE, robustMaxIterations: Int = StaticIntervalMagnetometerCalibrator.ROBUST_DEFAULT_MAX_ITERATIONS, robustThreshold: Double? = null, robustThresholdFactor: Double = StaticIntervalMagnetometerCalibrator.DEFAULT_ROBUST_THRESHOLD_FACTOR, robustStopThresholdFactor: Double = StaticIntervalMagnetometerCalibrator.DEFAULT_ROBUST_STOP_THRESHOLD_FACTOR, isGroundTruthInitialHardIron: Boolean = false, isCommonAxisUsed: Boolean = false, initialHardIronX: Double? = null, initialHardIronY: Double? = null, initialHardIronZ: Double? = null, initialSx: Double = 0.0, initialSy: Double = 0.0, initialSz: Double = 0.0, initialMxy: Double = 0.0, initialMxz: Double = 0.0, initialMyx: Double = 0.0, initialMyz: Double = 0.0, initialMzx: Double = 0.0, initialMzy: Double = 0.0, baseNoiseLevel: Double? = null, worldMagneticModel: WorldMagneticModel? = null, qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity> = DefaultMagnetometerQualityScoreMapper())","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.MagnetometerInternalCalibratorBuilder"]},{"name":"constructor(other: AccelerometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.AccelerometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/-accelerometer-sensor-measurement.html","searchKeys":["AccelerometerSensorMeasurement","constructor(other: AccelerometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.AccelerometerSensorMeasurement"]},{"name":"constructor(other: AttitudeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.AttitudeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/-attitude-sensor-measurement.html","searchKeys":["AttitudeSensorMeasurement","constructor(other: AttitudeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.AttitudeSensorMeasurement"]},{"name":"constructor(other: GravitySensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.GravitySensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/-gravity-sensor-measurement.html","searchKeys":["GravitySensorMeasurement","constructor(other: GravitySensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.GravitySensorMeasurement"]},{"name":"constructor(other: GyroscopeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.GyroscopeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/-gyroscope-sensor-measurement.html","searchKeys":["GyroscopeSensorMeasurement","constructor(other: GyroscopeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.GyroscopeSensorMeasurement"]},{"name":"constructor(other: MagnetometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.MagnetometerSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/-magnetometer-sensor-measurement.html","searchKeys":["MagnetometerSensorMeasurement","constructor(other: MagnetometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.MagnetometerSensorMeasurement"]},{"name":"constructor(other: SpeedTriad)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-speed-triad.html","searchKeys":["SpeedTriad","constructor(other: SpeedTriad)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad"]},{"name":"constructor(phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.KalmanGyroscopePredictor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/-kalman-gyroscope-predictor.html","searchKeys":["KalmanGyroscopePredictor","constructor(phiMatrixMethod: PhiMatrixMethod = PhiMatrixMethod.APPROXIMATED, processNoiseCovarianceMethod: ProcessNoiseCovarianceMethod = ProcessNoiseCovarianceMethod.BETTER, quaternionStepIntegratorType: QuaternionStepIntegratorType = QuaternionStepIntegratorType.RUNGE_KUTTA, gyroscopeNoisePsd: Double = DEFAULT_GYROSCOPE_NOISE_PSD)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.KalmanGyroscopePredictor"]},{"name":"constructor(processorListener: AttitudeProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.AttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/-attitude-processor.html","searchKeys":["AttitudeProcessor","constructor(processorListener: AttitudeProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.AttitudeProcessor"]},{"name":"constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor.AccelerometerDoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-double-fused-geomagnetic-attitude-processor/-accelerometer-double-fused-geomagnetic-attitude-processor.html","searchKeys":["AccelerometerDoubleFusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor.AccelerometerDoubleFusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor.DoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-double-fused-geomagnetic-attitude-processor/-double-fused-geomagnetic-attitude-processor.html","searchKeys":["DoubleFusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor.DoubleFusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.BaseDoubleFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-base-double-fused-geomagnetic-attitude-processor.html","searchKeys":["BaseDoubleFusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.BaseDoubleFusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor.AccelerometerFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-fused-geomagnetic-attitude-processor/-accelerometer-fused-geomagnetic-attitude-processor.html","searchKeys":["AccelerometerFusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor.AccelerometerFusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor.FusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-fused-geomagnetic-attitude-processor/-fused-geomagnetic-attitude-processor.html","searchKeys":["FusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityGyroscopeAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor.FusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.BaseFusedGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-base-fused-geomagnetic-attitude-processor.html","searchKeys":["BaseFusedGeomagneticAttitudeProcessor","constructor(processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.BaseFusedGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor.AccelerometerGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-geomagnetic-attitude-processor/-accelerometer-geomagnetic-attitude-processor.html","searchKeys":["AccelerometerGeomagneticAttitudeProcessor","constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor.AccelerometerGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor.GeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-geomagnetic-attitude-processor/-geomagnetic-attitude-processor.html","searchKeys":["GeomagneticAttitudeProcessor","constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndMagnetometerSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor.GeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.BaseGeomagneticAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/-base-geomagnetic-attitude-processor.html","searchKeys":["BaseGeomagneticAttitudeProcessor","constructor(processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.BaseGeomagneticAttitudeProcessor"]},{"name":"constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor.AccelerometerLeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-leveled-relative-attitude-processor/-accelerometer-leveled-relative-attitude-processor.html","searchKeys":["AccelerometerLeveledRelativeAttitudeProcessor","constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<AccelerometerSensorMeasurement, AccelerometerAndGyroscopeSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor.AccelerometerLeveledRelativeAttitudeProcessor"]},{"name":"constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement>? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor.LeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveled-relative-attitude-processor/-leveled-relative-attitude-processor.html","searchKeys":["LeveledRelativeAttitudeProcessor","constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<GravitySensorMeasurement, GravityAndGyroscopeSyncedSensorMeasurement>? = null)","com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor.LeveledRelativeAttitudeProcessor"]},{"name":"constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.BaseLeveledRelativeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-base-leveled-relative-attitude-processor.html","searchKeys":["BaseLeveledRelativeAttitudeProcessor","constructor(processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.BaseLeveledRelativeAttitudeProcessor"]},{"name":"constructor(processorListener: BaseLevelingProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor.LevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveling-processor/-leveling-processor.html","searchKeys":["LevelingProcessor","constructor(processorListener: BaseLevelingProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor.LevelingProcessor"]},{"name":"constructor(processorListener: BaseLevelingProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.BaseLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/-base-leveling-processor.html","searchKeys":["BaseLevelingProcessor","constructor(processorListener: BaseLevelingProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.BaseLevelingProcessor"]},{"name":"constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor.AccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-relative-gyroscope-attitude-processor/-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["AccurateRelativeGyroscopeAttitudeProcessor","constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor.AccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor.RelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-relative-gyroscope-attitude-processor/-relative-gyroscope-attitude-processor.html","searchKeys":["RelativeGyroscopeAttitudeProcessor","constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener? = null)","com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor.RelativeGyroscopeAttitudeProcessor"]},{"name":"constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.BaseRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/-base-relative-gyroscope-attitude-processor.html","searchKeys":["BaseRelativeGyroscopeAttitudeProcessor","constructor(processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?)","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.BaseRelativeGyroscopeAttitudeProcessor"]},{"name":"constructor(q: Matrix? = null, a: Matrix? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.ApproximatedProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-process-noise-covariance-integrator/-approximated-process-noise-covariance-integrator.html","searchKeys":["ApproximatedProcessNoiseCovarianceIntegrator","constructor(q: Matrix? = null, a: Matrix? = null)","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.ApproximatedProcessNoiseCovarianceIntegrator"]},{"name":"constructor(q: Matrix? = null, a: Matrix? = null)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.BetterProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-better-process-noise-covariance-integrator/-better-process-noise-covariance-integrator.html","searchKeys":["BetterProcessNoiseCovarianceIntegrator","constructor(q: Matrix? = null, a: Matrix? = null)","com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.BetterProcessNoiseCovarianceIntegrator"]},{"name":"constructor(q: Matrix? = null, a: Matrix? = null, integratorType: IntegratorType = MatrixIntegrator.DEFAULT_INTEGRATOR_TYPE, quadratureType: QuadratureType = MatrixIntegrator.DEFAULT_QUADRATURE_TYPE)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.PreciseProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/-precise-process-noise-covariance-integrator.html","searchKeys":["PreciseProcessNoiseCovarianceIntegrator","constructor(q: Matrix? = null, a: Matrix? = null, integratorType: IntegratorType = MatrixIntegrator.DEFAULT_INTEGRATOR_TYPE, quadratureType: QuadratureType = MatrixIntegrator.DEFAULT_QUADRATURE_TYPE)","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.PreciseProcessNoiseCovarianceIntegrator"]},{"name":"constructor(q: Matrix?, a: Matrix?)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.ProcessNoiseCovarianceIntegrator","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-process-noise-covariance-integrator.html","searchKeys":["ProcessNoiseCovarianceIntegrator","constructor(q: Matrix?, a: Matrix?)","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.ProcessNoiseCovarianceIntegrator"]},{"name":"constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.AveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/-averaging-filter.html","searchKeys":["AveragingFilter","constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.AveragingFilter"]},{"name":"constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","description":"com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.LowPassAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-low-pass-averaging-filter/-low-pass-averaging-filter.html","searchKeys":["LowPassAveragingFilter","constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.LowPassAveragingFilter"]},{"name":"constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.MeanAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/-mean-averaging-filter.html","searchKeys":["MeanAveragingFilter","constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.MeanAveragingFilter"]},{"name":"constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.MedianAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/-median-averaging-filter.html","searchKeys":["MedianAveragingFilter","constructor(timeConstant: Double = DEFAULT_TIME_CONSTANT)","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.MedianAveragingFilter"]},{"name":"constructor(timestamp: Long)","description":"com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement.SyncedSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-synced-sensor-measurement/-synced-sensor-measurement.html","searchKeys":["SyncedSensorMeasurement","constructor(timestamp: Long)","com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement.SyncedSensorMeasurement"]},{"name":"constructor(timestamp: Long, accuracy: SensorAccuracy?)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.SensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/-sensor-measurement.html","searchKeys":["SensorMeasurement","constructor(timestamp: Long, accuracy: SensorAccuracy?)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.SensorMeasurement"]},{"name":"constructor(unit: SpeedUnit = DEFAULT_UNIT)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-speed-triad.html","searchKeys":["SpeedTriad","constructor(unit: SpeedUnit = DEFAULT_UNIT)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad"]},{"name":"constructor(unit: SpeedUnit, valueX: Double, valueY: Double, valueZ: Double)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-speed-triad.html","searchKeys":["SpeedTriad","constructor(unit: SpeedUnit, valueX: Double, valueY: Double, valueZ: Double)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad"]},{"name":"constructor(valueX: Double, valueY: Double, valueZ: Double)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-speed-triad.html","searchKeys":["SpeedTriad","constructor(valueX: Double, valueY: Double, valueZ: Double)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.SpeedTriad"]},{"name":"constructor(wx: Float = 0.0f, wy: Float = 0.0f, wz: Float = 0.0f, bx: Float? = null, by: Float? = null, bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.GyroscopeSensorMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/-gyroscope-sensor-measurement.html","searchKeys":["GyroscopeSensorMeasurement","constructor(wx: Float = 0.0f, wy: Float = 0.0f, wz: Float = 0.0f, bx: Float? = null, by: Float? = null, bz: Float? = null, timestamp: Long = 0, accuracy: SensorAccuracy? = null, sensorType: GyroscopeSensorType = GyroscopeSensorType.GYROSCOPE_UNCALIBRATED)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.GyroscopeSensorMeasurement"]},{"name":"data class LocationPermissionResult(val cancelled: Boolean = true, val finePermissionGranted: Boolean = false, val coarsePermissionGranted: Boolean = false, val backgroundPermissionGranted: Boolean = false, val finePermissionRequested: Boolean = false, val coarsePermissionRequested: Boolean = false, val backgroundPermissionRequested: Boolean = false)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/index.html","searchKeys":["LocationPermissionResult","data class LocationPermissionResult(val cancelled: Boolean = true, val finePermissionGranted: Boolean = false, val coarsePermissionGranted: Boolean = false, val backgroundPermissionGranted: Boolean = false, val finePermissionRequested: Boolean = false, val coarsePermissionRequested: Boolean = false, val backgroundPermissionRequested: Boolean = false)","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult"]},{"name":"enum AccelerometerSensorType : Enum<AccelerometerSensorType> ","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/index.html","searchKeys":["AccelerometerSensorType","enum AccelerometerSensorType : Enum<AccelerometerSensorType> ","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType"]},{"name":"enum AttitudeSensorType : Enum<AttitudeSensorType> ","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/index.html","searchKeys":["AttitudeSensorType","enum AttitudeSensorType : Enum<AttitudeSensorType> ","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType"]},{"name":"enum CalibratorErrorReason : Enum<CalibratorErrorReason> ","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/index.html","searchKeys":["CalibratorErrorReason","enum CalibratorErrorReason : Enum<CalibratorErrorReason> ","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason"]},{"name":"enum ErrorReason : Enum<ErrorReason> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/index.html","searchKeys":["ErrorReason","enum ErrorReason : Enum<ErrorReason> ","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason"]},{"name":"enum ExternalAccelerationCovarianceMatrixEstimationMethod : Enum<ExternalAccelerationCovarianceMatrixEstimationMethod> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/index.html","searchKeys":["ExternalAccelerationCovarianceMatrixEstimationMethod","enum ExternalAccelerationCovarianceMatrixEstimationMethod : Enum<ExternalAccelerationCovarianceMatrixEstimationMethod> ","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod"]},{"name":"enum GooglePlayStatus : Enum<LocationService.GooglePlayStatus> ","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/index.html","searchKeys":["GooglePlayStatus","enum GooglePlayStatus : Enum<LocationService.GooglePlayStatus> ","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus"]},{"name":"enum GyroscopeSensorType : Enum<GyroscopeSensorType> ","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/index.html","searchKeys":["GyroscopeSensorType","enum GyroscopeSensorType : Enum<GyroscopeSensorType> ","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType"]},{"name":"enum MagnetometerSensorType : Enum<MagnetometerSensorType> ","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/index.html","searchKeys":["MagnetometerSensorType","enum MagnetometerSensorType : Enum<MagnetometerSensorType> ","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType"]},{"name":"enum PhiMatrixMethod : Enum<PhiMatrixMethod> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/index.html","searchKeys":["PhiMatrixMethod","enum PhiMatrixMethod : Enum<PhiMatrixMethod> ","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod"]},{"name":"enum ProcessNoiseCovarianceMethod : Enum<ProcessNoiseCovarianceMethod> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/index.html","searchKeys":["ProcessNoiseCovarianceMethod","enum ProcessNoiseCovarianceMethod : Enum<ProcessNoiseCovarianceMethod> ","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod"]},{"name":"enum QuaternionStepIntegratorType : Enum<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/index.html","searchKeys":["QuaternionStepIntegratorType","enum QuaternionStepIntegratorType : Enum<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType> ","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType"]},{"name":"enum QuaternionStepIntegratorType : Enum<QuaternionStepIntegratorType> ","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/index.html","searchKeys":["QuaternionStepIntegratorType","enum QuaternionStepIntegratorType : Enum<QuaternionStepIntegratorType> ","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType"]},{"name":"enum SensorAccuracy : Enum<SensorAccuracy> ","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/index.html","searchKeys":["SensorAccuracy","enum SensorAccuracy : Enum<SensorAccuracy> ","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy"]},{"name":"enum SensorDelay : Enum<SensorDelay> ","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/index.html","searchKeys":["SensorDelay","enum SensorDelay : Enum<SensorDelay> ","com.irurueta.android.navigation.inertial.collectors.SensorDelay"]},{"name":"enum SensorType : Enum<SensorType> ","description":"com.irurueta.android.navigation.inertial.collectors.SensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/index.html","searchKeys":["SensorType","enum SensorType : Enum<SensorType> ","com.irurueta.android.navigation.inertial.collectors.SensorType"]},{"name":"enum Status : Enum<Status> ","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/index.html","searchKeys":["Status","enum Status : Enum<Status> ","com.irurueta.android.navigation.inertial.calibration.intervals.Status"]},{"name":"enum StopMode : Enum<StopMode> ","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/index.html","searchKeys":["StopMode","enum StopMode : Enum<StopMode> ","com.irurueta.android.navigation.inertial.calibration.noise.StopMode"]},{"name":"fun <T : Triad<U, M>, U : Enum<*>, M : Measurement<U>> convert(input: T, output: T)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert.html","searchKeys":["convert","fun <T : Triad<U, M>, U : Enum<*>, M : Measurement<U>> convert(input: T, output: T)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert"]},{"name":"fun <T : Triad<U, M>, U : Enum<*>, M : Measurement<U>> convert(valueX: Double, valueY: Double, valueZ: Double, output: T)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert.html","searchKeys":["convert","fun <T : Triad<U, M>, U : Enum<*>, M : Measurement<U>> convert(valueX: Double, valueY: Double, valueZ: Double, output: T)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert"]},{"name":"fun Location.toNEDPosition(): NEDPosition","description":"com.irurueta.android.navigation.inertial.toNEDPosition","location":"lib/com.irurueta.android.navigation.inertial/to-n-e-d-position.html","searchKeys":["toNEDPosition","fun Location.toNEDPosition(): NEDPosition","com.irurueta.android.navigation.inertial.toNEDPosition"]},{"name":"fun Location.toNEDPosition(result: NEDPosition)","description":"com.irurueta.android.navigation.inertial.toNEDPosition","location":"lib/com.irurueta.android.navigation.inertial/to-n-e-d-position.html","searchKeys":["toNEDPosition","fun Location.toNEDPosition(result: NEDPosition)","com.irurueta.android.navigation.inertial.toNEDPosition"]},{"name":"fun build(): AccelerometerNonLinearCalibrator","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.build","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/build.html","searchKeys":["build","fun build(): AccelerometerNonLinearCalibrator","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.build"]},{"name":"fun build(): GyroscopeNonLinearCalibrator","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.build","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/build.html","searchKeys":["build","fun build(): GyroscopeNonLinearCalibrator","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.build"]},{"name":"fun build(): MagnetometerNonLinearCalibrator","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.build","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/build.html","searchKeys":["build","fun build(): MagnetometerNonLinearCalibrator","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.build"]},{"name":"fun calibrate(): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrate","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/calibrate.html","searchKeys":["calibrate","fun calibrate(): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrate"]},{"name":"fun cancelCurrentLocation()","description":"com.irurueta.android.navigation.inertial.LocationService.cancelCurrentLocation","location":"lib/com.irurueta.android.navigation.inertial/-location-service/cancel-current-location.html","searchKeys":["cancelCurrentLocation","fun cancelCurrentLocation()","com.irurueta.android.navigation.inertial.LocationService.cancelCurrentLocation"]},{"name":"fun cancelLocationUpdates()","description":"com.irurueta.android.navigation.inertial.LocationService.cancelLocationUpdates","location":"lib/com.irurueta.android.navigation.inertial/-location-service/cancel-location-updates.html","searchKeys":["cancelLocationUpdates","fun cancelLocationUpdates()","com.irurueta.android.navigation.inertial.LocationService.cancelLocationUpdates"]},{"name":"fun circularShiftByOneColumn(matrix: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion.circularShiftByOneColumn","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/-companion/circular-shift-by-one-column.html","searchKeys":["circularShiftByOneColumn","fun circularShiftByOneColumn(matrix: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion.circularShiftByOneColumn"]},{"name":"fun computeLevelingAttitude(latitude: Double, height: Double, fx: Double, fy: Double, fz: Double, result: Quaternion)","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.Companion.computeLevelingAttitude","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/-companion/compute-leveling-attitude.html","searchKeys":["computeLevelingAttitude","fun computeLevelingAttitude(latitude: Double, height: Double, fx: Double, fy: Double, fz: Double, result: Quaternion)","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.Companion.computeLevelingAttitude"]},{"name":"fun computeLevelingAttitude(latitude: Double, height: Double, gx: Double, gy: Double, gz: Double, result: Quaternion)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.Companion.computeLevelingAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/-companion/compute-leveling-attitude.html","searchKeys":["computeLevelingAttitude","fun computeLevelingAttitude(latitude: Double, height: Double, gx: Double, gy: Double, gz: Double, result: Quaternion)","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.Companion.computeLevelingAttitude"]},{"name":"fun conversionRotation(result: Rotation3D)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotation","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/conversion-rotation.html","searchKeys":["conversionRotation","fun conversionRotation(result: Rotation3D)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotation"]},{"name":"fun conversionRotationMatrix(result: Matrix)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotationMatrix","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/conversion-rotation-matrix.html","searchKeys":["conversionRotationMatrix","fun conversionRotationMatrix(result: Matrix)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotationMatrix"]},{"name":"fun convert(event: SensorEvent?, result: AccelerometerSensorMeasurement, startOffset: Long? = null): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurementConverter.convert","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement-converter/convert.html","searchKeys":["convert","fun convert(event: SensorEvent?, result: AccelerometerSensorMeasurement, startOffset: Long? = null): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurementConverter.convert"]},{"name":"fun convert(event: SensorEvent?, result: AttitudeSensorMeasurement, startOffset: Long? = null): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurementConverter.convert","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement-converter/convert.html","searchKeys":["convert","fun convert(event: SensorEvent?, result: AttitudeSensorMeasurement, startOffset: Long? = null): Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurementConverter.convert"]},{"name":"fun convert(event: SensorEvent?, result: GravitySensorMeasurement, startOffset: Long? = null): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurementConverter.convert","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement-converter/convert.html","searchKeys":["convert","fun convert(event: SensorEvent?, result: GravitySensorMeasurement, startOffset: Long? = null): Boolean","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurementConverter.convert"]},{"name":"fun convert(event: SensorEvent?, result: GyroscopeSensorMeasurement, startOffset: Long? = null): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurementConverter.convert","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement-converter/convert.html","searchKeys":["convert","fun convert(event: SensorEvent?, result: GyroscopeSensorMeasurement, startOffset: Long? = null): Boolean","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurementConverter.convert"]},{"name":"fun convert(event: SensorEvent?, result: MagnetometerSensorMeasurement, startOffset: Long? = null): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurementConverter.convert","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement-converter/convert.html","searchKeys":["convert","fun convert(event: SensorEvent?, result: MagnetometerSensorMeasurement, startOffset: Long? = null): Boolean","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurementConverter.convert"]},{"name":"fun convert(input: EuclideanTransformation3D, output: EuclideanTransformation3D)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert.html","searchKeys":["convert","fun convert(input: EuclideanTransformation3D, output: EuclideanTransformation3D)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert"]},{"name":"fun convert(input: Quaternion, output: Quaternion)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert.html","searchKeys":["convert","fun convert(input: Quaternion, output: Quaternion)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convert"]},{"name":"fun convertAndReturnNew(input: AccelerationTriad): AccelerationTriad","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-and-return-new.html","searchKeys":["convertAndReturnNew","fun convertAndReturnNew(input: AccelerationTriad): AccelerationTriad","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew"]},{"name":"fun convertAndReturnNew(input: AngularSpeedTriad): AngularSpeedTriad","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-and-return-new.html","searchKeys":["convertAndReturnNew","fun convertAndReturnNew(input: AngularSpeedTriad): AngularSpeedTriad","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew"]},{"name":"fun convertAndReturnNew(input: EuclideanTransformation3D): EuclideanTransformation3D","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-and-return-new.html","searchKeys":["convertAndReturnNew","fun convertAndReturnNew(input: EuclideanTransformation3D): EuclideanTransformation3D","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew"]},{"name":"fun convertAndReturnNew(input: MagneticFluxDensityTriad): MagneticFluxDensityTriad","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-and-return-new.html","searchKeys":["convertAndReturnNew","fun convertAndReturnNew(input: MagneticFluxDensityTriad): MagneticFluxDensityTriad","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew"]},{"name":"fun convertAndReturnNew(value: Quaternion): Quaternion","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-and-return-new.html","searchKeys":["convertAndReturnNew","fun convertAndReturnNew(value: Quaternion): Quaternion","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertAndReturnNew"]},{"name":"fun convertPoint(input: DoubleArray, output: DoubleArray)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-point.html","searchKeys":["convertPoint","fun convertPoint(input: DoubleArray, output: DoubleArray)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint"]},{"name":"fun convertPoint(input: Point3D, output: Point3D)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-point.html","searchKeys":["convertPoint","fun convertPoint(input: Point3D, output: Point3D)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint"]},{"name":"fun convertPoint(valueX: Double, valueY: Double, valueZ: Double, output: DoubleArray)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-point.html","searchKeys":["convertPoint","fun convertPoint(valueX: Double, valueY: Double, valueZ: Double, output: DoubleArray)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPoint"]},{"name":"fun convertPointAndReturnNew(input: DoubleArray): DoubleArray","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPointAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-point-and-return-new.html","searchKeys":["convertPointAndReturnNew","fun convertPointAndReturnNew(input: DoubleArray): DoubleArray","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPointAndReturnNew"]},{"name":"fun convertPointAndReturnNew(input: Point3D): InhomogeneousPoint3D","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPointAndReturnNew","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/convert-point-and-return-new.html","searchKeys":["convertPointAndReturnNew","fun convertPointAndReturnNew(input: Point3D): InhomogeneousPoint3D","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.convertPointAndReturnNew"]},{"name":"fun copyFrom(input: LowPassAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-low-pass-averaging-filter/copy-from.html","searchKeys":["copyFrom","fun copyFrom(input: LowPassAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.copyFrom"]},{"name":"fun copyFrom(input: MeanAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/copy-from.html","searchKeys":["copyFrom","fun copyFrom(input: MeanAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.copyFrom"]},{"name":"fun copyFrom(input: MedianAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/copy-from.html","searchKeys":["copyFrom","fun copyFrom(input: MedianAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.copyFrom"]},{"name":"fun copyTo(output: LowPassAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.copyTo","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-low-pass-averaging-filter/copy-to.html","searchKeys":["copyTo","fun copyTo(output: LowPassAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.LowPassAveragingFilter.copyTo"]},{"name":"fun copyTo(output: MeanAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.copyTo","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/copy-to.html","searchKeys":["copyTo","fun copyTo(output: MeanAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.copyTo"]},{"name":"fun copyTo(output: MedianAveragingFilter)","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.copyTo","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/copy-to.html","searchKeys":["copyTo","fun copyTo(output: MedianAveragingFilter)","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.copyTo"]},{"name":"fun copyTo(result: T)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copyTo","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/copy-to.html","searchKeys":["copyTo","fun copyTo(result: T)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copyTo"]},{"name":"fun correct()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.correct","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/correct.html","searchKeys":["correct","fun correct()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.correct"]},{"name":"fun correct()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.correct","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/correct.html","searchKeys":["correct","fun correct()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.correct"]},{"name":"fun create(a: Matrix? = null, method: PhiMatrixMethod = DEFAULT_METHOD): PhiMatrixEstimator","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.create","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-companion/create.html","searchKeys":["create","fun create(a: Matrix? = null, method: PhiMatrixMethod = DEFAULT_METHOD): PhiMatrixEstimator","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.create"]},{"name":"fun create(q: Matrix? = null, a: Matrix? = null, method: ProcessNoiseCovarianceMethod = DEFAULT_METHOD): ProcessNoiseCovarianceIntegrator","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.create","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-companion/create.html","searchKeys":["create","fun create(q: Matrix? = null, a: Matrix? = null, method: ProcessNoiseCovarianceMethod = DEFAULT_METHOD): ProcessNoiseCovarianceIntegrator","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.create"]},{"name":"fun dotProduct(q1: Quaternion, q2: Quaternion): Double","description":"com.irurueta.android.navigation.inertial.QuaternionHelper.dotProduct","location":"lib/com.irurueta.android.navigation.inertial/-quaternion-helper/dot-product.html","searchKeys":["dotProduct","fun dotProduct(q1: Quaternion, q2: Quaternion): Double","com.irurueta.android.navigation.inertial.QuaternionHelper.dotProduct"]},{"name":"fun filter(valueX: Double, valueY: Double, valueZ: Double, output: DoubleArray, timestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.filter","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/filter.html","searchKeys":["filter","fun filter(valueX: Double, valueY: Double, valueZ: Double, output: DoubleArray, timestamp: Long): Boolean","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.filter"]},{"name":"fun from(accelerometerSensorType: AccelerometerSensorType): SensorType","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/from.html","searchKeys":["from","fun from(accelerometerSensorType: AccelerometerSensorType): SensorType","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from"]},{"name":"fun from(attitudeSensorType: AttitudeSensorType): SensorType","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/from.html","searchKeys":["from","fun from(attitudeSensorType: AttitudeSensorType): SensorType","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from"]},{"name":"fun from(gyroscopeSensorType: GyroscopeSensorType): SensorType","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/from.html","searchKeys":["from","fun from(gyroscopeSensorType: GyroscopeSensorType): SensorType","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from"]},{"name":"fun from(magnetometerSensorType: MagnetometerSensorType): SensorType","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/from.html","searchKeys":["from","fun from(magnetometerSensorType: MagnetometerSensorType): SensorType","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from"]},{"name":"fun from(value: Int): AccelerometerSensorType?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/-companion/from.html","searchKeys":["from","fun from(value: Int): AccelerometerSensorType?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.Companion.from"]},{"name":"fun from(value: Int): AttitudeSensorType?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/-companion/from.html","searchKeys":["from","fun from(value: Int): AttitudeSensorType?","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.Companion.from"]},{"name":"fun from(value: Int): GyroscopeSensorType?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/-companion/from.html","searchKeys":["from","fun from(value: Int): GyroscopeSensorType?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.Companion.from"]},{"name":"fun from(value: Int): LocationService.GooglePlayStatus?","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.Companion.from","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-companion/from.html","searchKeys":["from","fun from(value: Int): LocationService.GooglePlayStatus?","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.Companion.from"]},{"name":"fun from(value: Int): MagnetometerSensorType?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/-companion/from.html","searchKeys":["from","fun from(value: Int): MagnetometerSensorType?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.Companion.from"]},{"name":"fun from(value: Int): SensorAccuracy?","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-companion/from.html","searchKeys":["from","fun from(value: Int): SensorAccuracy?","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.Companion.from"]},{"name":"fun from(value: Int): SensorDelay?","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-companion/from.html","searchKeys":["from","fun from(value: Int): SensorDelay?","com.irurueta.android.navigation.inertial.collectors.SensorDelay.Companion.from"]},{"name":"fun from(value: Int): SensorType?","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/from.html","searchKeys":["from","fun from(value: Int): SensorType?","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion.from"]},{"name":"fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/get-accelerometer-average-time-interval-as-time.html","searchKeys":["getAccelerometerAverageTimeIntervalAsTime","fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerAverageTimeIntervalAsTime"]},{"name":"fun getAccelerometerBias(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.getAccelerometerBias","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/get-accelerometer-bias.html","searchKeys":["getAccelerometerBias","fun getAccelerometerBias(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.getAccelerometerBias"]},{"name":"fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-accelerometer-initial-bias-as-triad.html","searchKeys":["getAccelerometerInitialBiasAsTriad","fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasAsTriad"]},{"name":"fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-accelerometer-initial-bias-as-triad.html","searchKeys":["getAccelerometerInitialBiasAsTriad","fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasAsTriad"]},{"name":"fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-accelerometer-initial-bias-as-triad.html","searchKeys":["getAccelerometerInitialBiasAsTriad","fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasAsTriad"]},{"name":"fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-accelerometer-initial-bias-as-triad.html","searchKeys":["getAccelerometerInitialBiasAsTriad","fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasAsTriad"]},{"name":"fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-initial-bias-as-triad.html","searchKeys":["getAccelerometerInitialBiasAsTriad","fun getAccelerometerInitialBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasAsTriad"]},{"name":"fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-accelerometer-initial-bias-x-as-measurement.html","searchKeys":["getAccelerometerInitialBiasXAsMeasurement","fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasXAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-accelerometer-initial-bias-x-as-measurement.html","searchKeys":["getAccelerometerInitialBiasXAsMeasurement","fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasXAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-accelerometer-initial-bias-x-as-measurement.html","searchKeys":["getAccelerometerInitialBiasXAsMeasurement","fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasXAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-accelerometer-initial-bias-x-as-measurement.html","searchKeys":["getAccelerometerInitialBiasXAsMeasurement","fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasXAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-initial-bias-x-as-measurement.html","searchKeys":["getAccelerometerInitialBiasXAsMeasurement","fun getAccelerometerInitialBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasXAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-accelerometer-initial-bias-y-as-measurement.html","searchKeys":["getAccelerometerInitialBiasYAsMeasurement","fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasYAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-accelerometer-initial-bias-y-as-measurement.html","searchKeys":["getAccelerometerInitialBiasYAsMeasurement","fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasYAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-accelerometer-initial-bias-y-as-measurement.html","searchKeys":["getAccelerometerInitialBiasYAsMeasurement","fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasYAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-accelerometer-initial-bias-y-as-measurement.html","searchKeys":["getAccelerometerInitialBiasYAsMeasurement","fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasYAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-initial-bias-y-as-measurement.html","searchKeys":["getAccelerometerInitialBiasYAsMeasurement","fun getAccelerometerInitialBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasYAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-accelerometer-initial-bias-z-as-measurement.html","searchKeys":["getAccelerometerInitialBiasZAsMeasurement","fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerInitialBiasZAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-accelerometer-initial-bias-z-as-measurement.html","searchKeys":["getAccelerometerInitialBiasZAsMeasurement","fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialBiasZAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-accelerometer-initial-bias-z-as-measurement.html","searchKeys":["getAccelerometerInitialBiasZAsMeasurement","fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialBiasZAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-accelerometer-initial-bias-z-as-measurement.html","searchKeys":["getAccelerometerInitialBiasZAsMeasurement","fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialBiasZAsMeasurement"]},{"name":"fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-initial-bias-z-as-measurement.html","searchKeys":["getAccelerometerInitialBiasZAsMeasurement","fun getAccelerometerInitialBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialBiasZAsMeasurement"]},{"name":"fun getAccelerometerInitialMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-accelerometer-initial-ma.html","searchKeys":["getAccelerometerInitialMa","fun getAccelerometerInitialMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAccelerometerInitialMa"]},{"name":"fun getAccelerometerInitialMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-accelerometer-initial-ma.html","searchKeys":["getAccelerometerInitialMa","fun getAccelerometerInitialMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAccelerometerInitialMa"]},{"name":"fun getAccelerometerInitialMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-accelerometer-initial-ma.html","searchKeys":["getAccelerometerInitialMa","fun getAccelerometerInitialMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAccelerometerInitialMa"]},{"name":"fun getAccelerometerInitialMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-initial-ma.html","searchKeys":["getAccelerometerInitialMa","fun getAccelerometerInitialMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerInitialMa"]},{"name":"fun getAccelerometerMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-accelerometer-ma.html","searchKeys":["getAccelerometerMa","fun getAccelerometerMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getAccelerometerMa"]},{"name":"fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/get-accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["getAccelerometerTimeIntervalStandardDeviationAsTime","fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.getAccelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"fun getAccumulatedAvgTriad(result: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-avg-triad.html","searchKeys":["getAccumulatedAvgTriad","fun getAccumulatedAvgTriad(result: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgTriad"]},{"name":"fun getAccumulatedAvgXAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-avg-x-as-measurement.html","searchKeys":["getAccumulatedAvgXAsMeasurement","fun getAccumulatedAvgXAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgXAsMeasurement"]},{"name":"fun getAccumulatedAvgYAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-avg-y-as-measurement.html","searchKeys":["getAccumulatedAvgYAsMeasurement","fun getAccumulatedAvgYAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgYAsMeasurement"]},{"name":"fun getAccumulatedAvgZAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-avg-z-as-measurement.html","searchKeys":["getAccumulatedAvgZAsMeasurement","fun getAccumulatedAvgZAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedAvgZAsMeasurement"]},{"name":"fun getAccumulatedStdTriad(result: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-std-triad.html","searchKeys":["getAccumulatedStdTriad","fun getAccumulatedStdTriad(result: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdTriad"]},{"name":"fun getAccumulatedStdXAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-std-x-as-measurement.html","searchKeys":["getAccumulatedStdXAsMeasurement","fun getAccumulatedStdXAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdXAsMeasurement"]},{"name":"fun getAccumulatedStdYAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-std-y-as-measurement.html","searchKeys":["getAccumulatedStdYAsMeasurement","fun getAccumulatedStdYAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdYAsMeasurement"]},{"name":"fun getAccumulatedStdZAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-accumulated-std-z-as-measurement.html","searchKeys":["getAccumulatedStdZAsMeasurement","fun getAccumulatedStdZAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAccumulatedStdZAsMeasurement"]},{"name":"fun getAttitudeCovariance(result: Matrix): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-attitude-covariance.html","searchKeys":["getAttitudeCovariance","fun getAttitudeCovariance(result: Matrix): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getAttitudeCovariance"]},{"name":"fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getAverageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-average-gravity-norm-as-measurement.html","searchKeys":["getAverageGravityNormAsMeasurement","fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getAverageGravityNormAsMeasurement"]},{"name":"fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAverageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-average-gravity-norm-as-measurement.html","searchKeys":["getAverageGravityNormAsMeasurement","fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getAverageGravityNormAsMeasurement"]},{"name":"fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAverageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-average-gravity-norm-as-measurement.html","searchKeys":["getAverageGravityNormAsMeasurement","fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getAverageGravityNormAsMeasurement"]},{"name":"fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAverageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-average-gravity-norm-as-measurement.html","searchKeys":["getAverageGravityNormAsMeasurement","fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getAverageGravityNormAsMeasurement"]},{"name":"fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAverageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-average-gravity-norm-as-measurement.html","searchKeys":["getAverageGravityNormAsMeasurement","fun getAverageGravityNormAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAverageGravityNormAsMeasurement"]},{"name":"fun getAverageNormAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.getAverageNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/get-average-norm-as-measurement.html","searchKeys":["getAverageNormAsMeasurement","fun getAverageNormAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.getAverageNormAsMeasurement"]},{"name":"fun getAverageNormAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-norm-as-measurement.html","searchKeys":["getAverageNormAsMeasurement","fun getAverageNormAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageNormAsMeasurement"]},{"name":"fun getAverageStandardDeviationAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-standard-deviation-as-measurement.html","searchKeys":["getAverageStandardDeviationAsMeasurement","fun getAverageStandardDeviationAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageStandardDeviationAsMeasurement"]},{"name":"fun getAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/get-average-time-interval-as-time.html","searchKeys":["getAverageTimeIntervalAsTime","fun getAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getAverageTimeIntervalAsTime"]},{"name":"fun getAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-average-time-interval-as-time.html","searchKeys":["getAverageTimeIntervalAsTime","fun getAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getAverageTimeIntervalAsTime"]},{"name":"fun getAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/get-average-time-interval-as-time.html","searchKeys":["getAverageTimeIntervalAsTime","fun getAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getAverageTimeIntervalAsTime"]},{"name":"fun getAverageTriad(result: T): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-triad.html","searchKeys":["getAverageTriad","fun getAverageTriad(result: T): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageTriad"]},{"name":"fun getAverageXAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-x-as-measurement.html","searchKeys":["getAverageXAsMeasurement","fun getAverageXAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageXAsMeasurement"]},{"name":"fun getAverageYAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-y-as-measurement.html","searchKeys":["getAverageYAsMeasurement","fun getAverageYAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageYAsMeasurement"]},{"name":"fun getAverageZAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-average-z-as-measurement.html","searchKeys":["getAverageZAsMeasurement","fun getAverageZAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getAverageZAsMeasurement"]},{"name":"fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"fun getBaseNoiseLevelAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/get-base-noise-level-as-measurement.html","searchKeys":["getBaseNoiseLevelAsMeasurement","fun getBaseNoiseLevelAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getBaseNoiseLevelAsMeasurement"]},{"name":"fun getBaseNoiseLevelAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-base-noise-level-as-measurement.html","searchKeys":["getBaseNoiseLevelAsMeasurement","fun getBaseNoiseLevelAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getBaseNoiseLevelAsMeasurement"]},{"name":"fun getBodyExternalAcceleration(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getBodyExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-body-external-acceleration.html","searchKeys":["getBodyExternalAcceleration","fun getBodyExternalAcceleration(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getBodyExternalAcceleration"]},{"name":"fun getCurrentBatteryTemperature(result: Temperature): Boolean","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.getCurrentBatteryTemperature","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/get-current-battery-temperature.html","searchKeys":["getCurrentBatteryTemperature","fun getCurrentBatteryTemperature(result: Temperature): Boolean","com.irurueta.android.navigation.inertial.BatteryTemperatureService.getCurrentBatteryTemperature"]},{"name":"fun getCurrentLocation(listener: LocationService.OnCurrentLocationListener)","description":"com.irurueta.android.navigation.inertial.LocationService.getCurrentLocation","location":"lib/com.irurueta.android.navigation.inertial/-location-service/get-current-location.html","searchKeys":["getCurrentLocation","fun getCurrentLocation(listener: LocationService.OnCurrentLocationListener)","com.irurueta.android.navigation.inertial.LocationService.getCurrentLocation"]},{"name":"fun getDisplayRotationDegrees(context: Context): Double","description":"com.irurueta.android.navigation.inertial.DisplayOrientationHelper.getDisplayRotationDegrees","location":"lib/com.irurueta.android.navigation.inertial/-display-orientation-helper/get-display-rotation-degrees.html","searchKeys":["getDisplayRotationDegrees","fun getDisplayRotationDegrees(context: Context): Double","com.irurueta.android.navigation.inertial.DisplayOrientationHelper.getDisplayRotationDegrees"]},{"name":"fun getDisplayRotationRadians(context: Context): Double","description":"com.irurueta.android.navigation.inertial.DisplayOrientationHelper.getDisplayRotationRadians","location":"lib/com.irurueta.android.navigation.inertial/-display-orientation-helper/get-display-rotation-radians.html","searchKeys":["getDisplayRotationRadians","fun getDisplayRotationRadians(context: Context): Double","com.irurueta.android.navigation.inertial.DisplayOrientationHelper.getDisplayRotationRadians"]},{"name":"fun getEcefExternalAcceleration(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEcefExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-ecef-external-acceleration.html","searchKeys":["getEcefExternalAcceleration","fun getEcefExternalAcceleration(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEcefExternalAcceleration"]},{"name":"fun getElapsedTime(result: Time)","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getElapsedTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/get-elapsed-time.html","searchKeys":["getElapsedTime","fun getElapsedTime(result: Time)","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getElapsedTime"]},{"name":"fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-accelerometer-bias-as-triad.html","searchKeys":["getEstimatedAccelerometerBiasAsTriad","fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasAsTriad"]},{"name":"fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-estimated-accelerometer-bias-as-triad.html","searchKeys":["getEstimatedAccelerometerBiasAsTriad","fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasAsTriad"]},{"name":"fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-accelerometer-bias-as-triad.html","searchKeys":["getEstimatedAccelerometerBiasAsTriad","fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasAsTriad"]},{"name":"fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-accelerometer-bias-as-triad.html","searchKeys":["getEstimatedAccelerometerBiasAsTriad","fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasAsTriad"]},{"name":"fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-accelerometer-bias-as-triad.html","searchKeys":["getEstimatedAccelerometerBiasAsTriad","fun getEstimatedAccelerometerBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasAsTriad"]},{"name":"fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasXAsMeasurement","fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasXAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasXAsMeasurement","fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasXAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasXAsMeasurement","fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasXAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasXAsMeasurement","fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasXAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasXAsMeasurement","fun getEstimatedAccelerometerBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasXAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasYAsMeasurement","fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasYAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasYAsMeasurement","fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasYAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasYAsMeasurement","fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasYAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasYAsMeasurement","fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasYAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasYAsMeasurement","fun getEstimatedAccelerometerBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasYAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasZAsMeasurement","fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedAccelerometerBiasZAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasZAsMeasurement","fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getEstimatedAccelerometerBiasZAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasZAsMeasurement","fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedAccelerometerBiasZAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasZAsMeasurement","fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedAccelerometerBiasZAsMeasurement"]},{"name":"fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["getEstimatedAccelerometerBiasZAsMeasurement","fun getEstimatedAccelerometerBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedAccelerometerBiasZAsMeasurement"]},{"name":"fun getEstimatedBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-estimated-bias-as-triad.html","searchKeys":["getEstimatedBiasAsTriad","fun getEstimatedBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasAsTriad"]},{"name":"fun getEstimatedBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-estimated-bias-x-as-measurement.html","searchKeys":["getEstimatedBiasXAsMeasurement","fun getEstimatedBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasXAsMeasurement"]},{"name":"fun getEstimatedBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-estimated-bias-y-as-measurement.html","searchKeys":["getEstimatedBiasYAsMeasurement","fun getEstimatedBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasYAsMeasurement"]},{"name":"fun getEstimatedBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-estimated-bias-z-as-measurement.html","searchKeys":["getEstimatedBiasZAsMeasurement","fun getEstimatedBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getEstimatedBiasZAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-gyroscope-bias-as-triad.html","searchKeys":["getEstimatedGyroscopeBiasAsTriad","fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasAsTriad"]},{"name":"fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-gyroscope-bias-as-triad.html","searchKeys":["getEstimatedGyroscopeBiasAsTriad","fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasAsTriad"]},{"name":"fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-gyroscope-bias-as-triad.html","searchKeys":["getEstimatedGyroscopeBiasAsTriad","fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasAsTriad"]},{"name":"fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-gyroscope-bias-as-triad.html","searchKeys":["getEstimatedGyroscopeBiasAsTriad","fun getEstimatedGyroscopeBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasAsTriad"]},{"name":"fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasXAsMeasurement","fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasXAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasXAsMeasurement","fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasXAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasXAsMeasurement","fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasXAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasXAsMeasurement","fun getEstimatedGyroscopeBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasXAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasYAsMeasurement","fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasYAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasYAsMeasurement","fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasYAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasYAsMeasurement","fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasYAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasYAsMeasurement","fun getEstimatedGyroscopeBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasYAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasZAsMeasurement","fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getEstimatedGyroscopeBiasZAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasZAsMeasurement","fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedGyroscopeBiasZAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasZAsMeasurement","fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedGyroscopeBiasZAsMeasurement"]},{"name":"fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["getEstimatedGyroscopeBiasZAsMeasurement","fun getEstimatedGyroscopeBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getEstimatedGyroscopeBiasZAsMeasurement"]},{"name":"fun getEstimatedHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-estimated-hard-iron-as-triad.html","searchKeys":["getEstimatedHardIronAsTriad","fun getEstimatedHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronAsTriad"]},{"name":"fun getEstimatedHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-estimated-hard-iron-x-as-measurement.html","searchKeys":["getEstimatedHardIronXAsMeasurement","fun getEstimatedHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronXAsMeasurement"]},{"name":"fun getEstimatedHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-estimated-hard-iron-y-as-measurement.html","searchKeys":["getEstimatedHardIronYAsMeasurement","fun getEstimatedHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronYAsMeasurement"]},{"name":"fun getEstimatedHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-estimated-hard-iron-z-as-measurement.html","searchKeys":["getEstimatedHardIronZAsMeasurement","fun getEstimatedHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getEstimatedHardIronZAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["getEstimatedMagnetometerHardIronAsTriad","fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronAsTriad"]},{"name":"fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["getEstimatedMagnetometerHardIronAsTriad","fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronAsTriad"]},{"name":"fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["getEstimatedMagnetometerHardIronAsTriad","fun getEstimatedMagnetometerHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronAsTriad"]},{"name":"fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronXAsMeasurement","fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronXAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronXAsMeasurement","fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronXAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronXAsMeasurement","fun getEstimatedMagnetometerHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronXAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronYAsMeasurement","fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronYAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronYAsMeasurement","fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronYAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronYAsMeasurement","fun getEstimatedMagnetometerHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronYAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronZAsMeasurement","fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getEstimatedMagnetometerHardIronZAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronZAsMeasurement","fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getEstimatedMagnetometerHardIronZAsMeasurement"]},{"name":"fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["getEstimatedMagnetometerHardIronZAsMeasurement","fun getEstimatedMagnetometerHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getEstimatedMagnetometerHardIronZAsMeasurement"]},{"name":"fun getEulerAngles(result: DoubleArray): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-euler-angles.html","searchKeys":["getEulerAngles","fun getEulerAngles(result: DoubleArray): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEulerAngles"]},{"name":"fun getEulerAnglesCovariance(result: Matrix): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-euler-angles-covariance.html","searchKeys":["getEulerAnglesCovariance","fun getEulerAnglesCovariance(result: Matrix): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getEulerAnglesCovariance"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.getGravity"]},{"name":"fun getGravity(result: AccelerationTriad)","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.getGravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/get-gravity.html","searchKeys":["getGravity","fun getGravity(result: AccelerationTriad)","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.getGravity"]},{"name":"fun getGravityForLocation(location: Location): ECEFGravity","description":"com.irurueta.android.navigation.inertial.GravityHelper.getGravityForLocation","location":"lib/com.irurueta.android.navigation.inertial/-gravity-helper/get-gravity-for-location.html","searchKeys":["getGravityForLocation","fun getGravityForLocation(location: Location): ECEFGravity","com.irurueta.android.navigation.inertial.GravityHelper.getGravityForLocation"]},{"name":"fun getGravityForPosition(nedPosition: NEDPosition): ECEFGravity","description":"com.irurueta.android.navigation.inertial.GravityHelper.getGravityForPosition","location":"lib/com.irurueta.android.navigation.inertial/-gravity-helper/get-gravity-for-position.html","searchKeys":["getGravityForPosition","fun getGravityForPosition(nedPosition: NEDPosition): ECEFGravity","com.irurueta.android.navigation.inertial.GravityHelper.getGravityForPosition"]},{"name":"fun getGravityNormForLocation(location: Location): Double","description":"com.irurueta.android.navigation.inertial.GravityHelper.getGravityNormForLocation","location":"lib/com.irurueta.android.navigation.inertial/-gravity-helper/get-gravity-norm-for-location.html","searchKeys":["getGravityNormForLocation","fun getGravityNormForLocation(location: Location): Double","com.irurueta.android.navigation.inertial.GravityHelper.getGravityNormForLocation"]},{"name":"fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getGravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-gravity-norm-standard-deviation-as-measurement.html","searchKeys":["getGravityNormStandardDeviationAsMeasurement","fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getGravityNormStandardDeviationAsMeasurement"]},{"name":"fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gravity-norm-standard-deviation-as-measurement.html","searchKeys":["getGravityNormStandardDeviationAsMeasurement","fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGravityNormStandardDeviationAsMeasurement"]},{"name":"fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getGravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/get-gravity-norm-standard-deviation-as-measurement.html","searchKeys":["getGravityNormStandardDeviationAsMeasurement","fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.getGravityNormStandardDeviationAsMeasurement"]},{"name":"fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gravity-norm-standard-deviation-as-measurement.html","searchKeys":["getGravityNormStandardDeviationAsMeasurement","fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGravityNormStandardDeviationAsMeasurement"]},{"name":"fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gravity-norm-standard-deviation-as-measurement.html","searchKeys":["getGravityNormStandardDeviationAsMeasurement","fun getGravityNormStandardDeviationAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGravityNormStandardDeviationAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/get-gyroscope-base-noise-level-as-measurement.html","searchKeys":["getGyroscopeBaseNoiseLevelAsMeasurement","fun getGyroscopeBaseNoiseLevelAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.getGyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"fun getGyroscopeBias(result: AngularSpeedTriad)","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.getGyroscopeBias","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/get-gyroscope-bias.html","searchKeys":["getGyroscopeBias","fun getGyroscopeBias(result: AngularSpeedTriad)","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.getGyroscopeBias"]},{"name":"fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-initial-bias-as-triad.html","searchKeys":["getGyroscopeInitialBiasAsTriad","fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasAsTriad"]},{"name":"fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-initial-bias-as-triad.html","searchKeys":["getGyroscopeInitialBiasAsTriad","fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasAsTriad"]},{"name":"fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-initial-bias-as-triad.html","searchKeys":["getGyroscopeInitialBiasAsTriad","fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasAsTriad"]},{"name":"fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-initial-bias-as-triad.html","searchKeys":["getGyroscopeInitialBiasAsTriad","fun getGyroscopeInitialBiasAsTriad(result: AngularSpeedTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasAsTriad"]},{"name":"fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-initial-bias-x-as-measurement.html","searchKeys":["getGyroscopeInitialBiasXAsMeasurement","fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasXAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-initial-bias-x-as-measurement.html","searchKeys":["getGyroscopeInitialBiasXAsMeasurement","fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasXAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-initial-bias-x-as-measurement.html","searchKeys":["getGyroscopeInitialBiasXAsMeasurement","fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasXAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-initial-bias-x-as-measurement.html","searchKeys":["getGyroscopeInitialBiasXAsMeasurement","fun getGyroscopeInitialBiasXAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasXAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-initial-bias-y-as-measurement.html","searchKeys":["getGyroscopeInitialBiasYAsMeasurement","fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasYAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-initial-bias-y-as-measurement.html","searchKeys":["getGyroscopeInitialBiasYAsMeasurement","fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasYAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-initial-bias-y-as-measurement.html","searchKeys":["getGyroscopeInitialBiasYAsMeasurement","fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasYAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-initial-bias-y-as-measurement.html","searchKeys":["getGyroscopeInitialBiasYAsMeasurement","fun getGyroscopeInitialBiasYAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasYAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-initial-bias-z-as-measurement.html","searchKeys":["getGyroscopeInitialBiasZAsMeasurement","fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialBiasZAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-initial-bias-z-as-measurement.html","searchKeys":["getGyroscopeInitialBiasZAsMeasurement","fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialBiasZAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-initial-bias-z-as-measurement.html","searchKeys":["getGyroscopeInitialBiasZAsMeasurement","fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialBiasZAsMeasurement"]},{"name":"fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-initial-bias-z-as-measurement.html","searchKeys":["getGyroscopeInitialBiasZAsMeasurement","fun getGyroscopeInitialBiasZAsMeasurement(result: AngularSpeed): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialBiasZAsMeasurement"]},{"name":"fun getGyroscopeInitialMg(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/get-gyroscope-initial-mg.html","searchKeys":["getGyroscopeInitialMg","fun getGyroscopeInitialMg(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.getGyroscopeInitialMg"]},{"name":"fun getGyroscopeInitialMg(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-gyroscope-initial-mg.html","searchKeys":["getGyroscopeInitialMg","fun getGyroscopeInitialMg(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getGyroscopeInitialMg"]},{"name":"fun getGyroscopeInitialMg(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-gyroscope-initial-mg.html","searchKeys":["getGyroscopeInitialMg","fun getGyroscopeInitialMg(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getGyroscopeInitialMg"]},{"name":"fun getGyroscopeInitialMg(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/get-gyroscope-initial-mg.html","searchKeys":["getGyroscopeInitialMg","fun getGyroscopeInitialMg(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.getGyroscopeInitialMg"]},{"name":"fun getInitialBiasAsTriad(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-initial-bias-as-triad.html","searchKeys":["getInitialBiasAsTriad","fun getInitialBiasAsTriad(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasAsTriad"]},{"name":"fun getInitialBiasXAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-initial-bias-x-as-measurement.html","searchKeys":["getInitialBiasXAsMeasurement","fun getInitialBiasXAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasXAsMeasurement"]},{"name":"fun getInitialBiasYAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-initial-bias-y-as-measurement.html","searchKeys":["getInitialBiasYAsMeasurement","fun getInitialBiasYAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasYAsMeasurement"]},{"name":"fun getInitialBiasZAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-initial-bias-z-as-measurement.html","searchKeys":["getInitialBiasZAsMeasurement","fun getInitialBiasZAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialBiasZAsMeasurement"]},{"name":"fun getInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-initial-hard-iron-as-triad.html","searchKeys":["getInitialHardIronAsTriad","fun getInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronAsTriad"]},{"name":"fun getInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-initial-hard-iron-x-as-measurement.html","searchKeys":["getInitialHardIronXAsMeasurement","fun getInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronXAsMeasurement"]},{"name":"fun getInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-initial-hard-iron-y-as-measurement.html","searchKeys":["getInitialHardIronYAsMeasurement","fun getInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronYAsMeasurement"]},{"name":"fun getInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-initial-hard-iron-z-as-measurement.html","searchKeys":["getInitialHardIronZAsMeasurement","fun getInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialHardIronZAsMeasurement"]},{"name":"fun getInitialMa(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/get-initial-ma.html","searchKeys":["getInitialMa","fun getInitialMa(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.getInitialMa"]},{"name":"fun getInitialMagneticFluxDensityNormAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getInitialMagneticFluxDensityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-initial-magnetic-flux-density-norm-as-measurement.html","searchKeys":["getInitialMagneticFluxDensityNormAsMeasurement","fun getInitialMagneticFluxDensityNormAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getInitialMagneticFluxDensityNormAsMeasurement"]},{"name":"fun getInitialMagneticFluxDensityNormAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.getInitialMagneticFluxDensityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/get-initial-magnetic-flux-density-norm-as-measurement.html","searchKeys":["getInitialMagneticFluxDensityNormAsMeasurement","fun getInitialMagneticFluxDensityNormAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.getInitialMagneticFluxDensityNormAsMeasurement"]},{"name":"fun getInitialMm(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/get-initial-mm.html","searchKeys":["getInitialMm","fun getInitialMm(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.getInitialMm"]},{"name":"fun getInstantaneousAvgTriad(result: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-avg-triad.html","searchKeys":["getInstantaneousAvgTriad","fun getInstantaneousAvgTriad(result: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgTriad"]},{"name":"fun getInstantaneousAvgXAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-avg-x-as-measurement.html","searchKeys":["getInstantaneousAvgXAsMeasurement","fun getInstantaneousAvgXAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgXAsMeasurement"]},{"name":"fun getInstantaneousAvgYAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-avg-y-as-measurement.html","searchKeys":["getInstantaneousAvgYAsMeasurement","fun getInstantaneousAvgYAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgYAsMeasurement"]},{"name":"fun getInstantaneousAvgZAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-avg-z-as-measurement.html","searchKeys":["getInstantaneousAvgZAsMeasurement","fun getInstantaneousAvgZAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousAvgZAsMeasurement"]},{"name":"fun getInstantaneousStdTriad(result: T)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-std-triad.html","searchKeys":["getInstantaneousStdTriad","fun getInstantaneousStdTriad(result: T)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdTriad"]},{"name":"fun getInstantaneousStdXAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-std-x-as-measurement.html","searchKeys":["getInstantaneousStdXAsMeasurement","fun getInstantaneousStdXAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdXAsMeasurement"]},{"name":"fun getInstantaneousStdYAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-std-y-as-measurement.html","searchKeys":["getInstantaneousStdYAsMeasurement","fun getInstantaneousStdYAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdYAsMeasurement"]},{"name":"fun getInstantaneousStdZAsMeasurement(result: M)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-instantaneous-std-z-as-measurement.html","searchKeys":["getInstantaneousStdZAsMeasurement","fun getInstantaneousStdZAsMeasurement(result: M)","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getInstantaneousStdZAsMeasurement"]},{"name":"fun getLastKnownLocation(): Location?","description":"com.irurueta.android.navigation.inertial.LocationService.getLastKnownLocation","location":"lib/com.irurueta.android.navigation.inertial/-location-service/get-last-known-location.html","searchKeys":["getLastKnownLocation","fun getLastKnownLocation(): Location?","com.irurueta.android.navigation.inertial.LocationService.getLastKnownLocation"]},{"name":"fun getMagnetometerAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-average-time-interval-as-time.html","searchKeys":["getMagnetometerAverageTimeIntervalAsTime","fun getMagnetometerAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerAverageTimeIntervalAsTime"]},{"name":"fun getMagnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: MagneticFluxDensity)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement","fun getMagnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: MagneticFluxDensity)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-base-noise-level-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAsMeasurement","fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerBaseNoiseLevelAsMeasurement"]},{"name":"fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-base-noise-level-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAsMeasurement","fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerBaseNoiseLevelAsMeasurement"]},{"name":"fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-base-noise-level-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAsMeasurement","fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerBaseNoiseLevelAsMeasurement"]},{"name":"fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getMagnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-magnetometer-base-noise-level-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAsMeasurement","fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getMagnetometerBaseNoiseLevelAsMeasurement"]},{"name":"fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.getMagnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/get-magnetometer-base-noise-level-as-measurement.html","searchKeys":["getMagnetometerBaseNoiseLevelAsMeasurement","fun getMagnetometerBaseNoiseLevelAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.getMagnetometerBaseNoiseLevelAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-initial-hard-iron-as-triad.html","searchKeys":["getMagnetometerInitialHardIronAsTriad","fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronAsTriad"]},{"name":"fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-initial-hard-iron-as-triad.html","searchKeys":["getMagnetometerInitialHardIronAsTriad","fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronAsTriad"]},{"name":"fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-initial-hard-iron-as-triad.html","searchKeys":["getMagnetometerInitialHardIronAsTriad","fun getMagnetometerInitialHardIronAsTriad(result: MagneticFluxDensityTriad): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronAsTriad"]},{"name":"fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronXAsMeasurement","fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronXAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronXAsMeasurement","fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronXAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronXAsMeasurement","fun getMagnetometerInitialHardIronXAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronXAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronYAsMeasurement","fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronYAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronYAsMeasurement","fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronYAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronYAsMeasurement","fun getMagnetometerInitialHardIronYAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronYAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronZAsMeasurement","fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialHardIronZAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronZAsMeasurement","fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialHardIronZAsMeasurement"]},{"name":"fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["getMagnetometerInitialHardIronZAsMeasurement","fun getMagnetometerInitialHardIronZAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialHardIronZAsMeasurement"]},{"name":"fun getMagnetometerInitialMm(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/get-magnetometer-initial-mm.html","searchKeys":["getMagnetometerInitialMm","fun getMagnetometerInitialMm(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.getMagnetometerInitialMm"]},{"name":"fun getMagnetometerInitialMm(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-initial-mm.html","searchKeys":["getMagnetometerInitialMm","fun getMagnetometerInitialMm(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerInitialMm"]},{"name":"fun getMagnetometerInitialMm(result: Matrix)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/get-magnetometer-initial-mm.html","searchKeys":["getMagnetometerInitialMm","fun getMagnetometerInitialMm(result: Matrix)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.getMagnetometerInitialMm"]},{"name":"fun getMagnetometerThresholdAsMeasurement(result: MagneticFluxDensity): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-threshold-as-measurement.html","searchKeys":["getMagnetometerThresholdAsMeasurement","fun getMagnetometerThresholdAsMeasurement(result: MagneticFluxDensity): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerThresholdAsMeasurement"]},{"name":"fun getMagnetometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-magnetometer-time-interval-standard-deviation-as-time.html","searchKeys":["getMagnetometerTimeIntervalStandardDeviationAsTime","fun getMagnetometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getMagnetometerTimeIntervalStandardDeviationAsTime"]},{"name":"fun getMeasurementsBeforePosition(position: Int): Deque<M>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.getMeasurementsBeforePosition","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/get-measurements-before-position.html","searchKeys":["getMeasurementsBeforePosition","fun getMeasurementsBeforePosition(position: Int): Deque<M>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.getMeasurementsBeforePosition"]},{"name":"fun getMeasurementsBeforeTimestamp(timestamp: Long): Deque<M>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.getMeasurementsBeforeTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/get-measurements-before-timestamp.html","searchKeys":["getMeasurementsBeforeTimestamp","fun getMeasurementsBeforeTimestamp(timestamp: Long): Deque<M>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.getMeasurementsBeforeTimestamp"]},{"name":"fun getNedExternalAcceleration(result: AccelerationTriad): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getNedExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/get-ned-external-acceleration.html","searchKeys":["getNedExternalAcceleration","fun getNedExternalAcceleration(result: AccelerationTriad): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.getNedExternalAcceleration"]},{"name":"fun getNedPosition(result: NEDPosition): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.getNedPosition","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/get-ned-position.html","searchKeys":["getNedPosition","fun getNedPosition(result: NEDPosition): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.getNedPosition"]},{"name":"fun getNormStandardDeviationAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.getNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/get-norm-standard-deviation-as-measurement.html","searchKeys":["getNormStandardDeviationAsMeasurement","fun getNormStandardDeviationAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.getNormStandardDeviationAsMeasurement"]},{"name":"fun getStandardDeviationNormAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-standard-deviation-norm-as-measurement.html","searchKeys":["getStandardDeviationNormAsMeasurement","fun getStandardDeviationNormAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationNormAsMeasurement"]},{"name":"fun getStandardDeviationTriad(result: T): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-standard-deviation-triad.html","searchKeys":["getStandardDeviationTriad","fun getStandardDeviationTriad(result: T): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationTriad"]},{"name":"fun getStandardDeviationXAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-standard-deviation-x-as-measurement.html","searchKeys":["getStandardDeviationXAsMeasurement","fun getStandardDeviationXAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationXAsMeasurement"]},{"name":"fun getStandardDeviationYAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-standard-deviation-y-as-measurement.html","searchKeys":["getStandardDeviationYAsMeasurement","fun getStandardDeviationYAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationYAsMeasurement"]},{"name":"fun getStandardDeviationZAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/get-standard-deviation-z-as-measurement.html","searchKeys":["getStandardDeviationZAsMeasurement","fun getStandardDeviationZAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.getStandardDeviationZAsMeasurement"]},{"name":"fun getThresholdAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","fun getThresholdAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getThresholdAsMeasurement"]},{"name":"fun getThresholdAsMeasurement(result: M): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","fun getThresholdAsMeasurement(result: M): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getThresholdAsMeasurement"]},{"name":"fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/get-time-interval-standard-deviation-as-time.html","searchKeys":["getTimeIntervalStandardDeviationAsTime","fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.getTimeIntervalStandardDeviationAsTime"]},{"name":"fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/get-time-interval-standard-deviation-as-time.html","searchKeys":["getTimeIntervalStandardDeviationAsTime","fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.getTimeIntervalStandardDeviationAsTime"]},{"name":"fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/get-time-interval-standard-deviation-as-time.html","searchKeys":["getTimeIntervalStandardDeviationAsTime","fun getTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.getTimeIntervalStandardDeviationAsTime"]},{"name":"fun hasBackgroundLocationPermission(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.hasBackgroundLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/has-background-location-permission.html","searchKeys":["hasBackgroundLocationPermission","fun hasBackgroundLocationPermission(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.hasBackgroundLocationPermission"]},{"name":"fun hasCoarseLocationPermission(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.hasCoarseLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/has-coarse-location-permission.html","searchKeys":["hasCoarseLocationPermission","fun hasCoarseLocationPermission(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.hasCoarseLocationPermission"]},{"name":"fun hasFineLocationPermission(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.hasFineLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/has-fine-location-permission.html","searchKeys":["hasFineLocationPermission","fun hasFineLocationPermission(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.hasFineLocationPermission"]},{"name":"fun hasSensor(sensorType: SensorType): Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.hasSensor","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/has-sensor.html","searchKeys":["hasSensor","fun hasSensor(sensorType: SensorType): Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.hasSensor"]},{"name":"fun initKalmanErrorCov()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.initKalmanErrorCov","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/init-kalman-error-cov.html","searchKeys":["initKalmanErrorCov","fun initKalmanErrorCov()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.initKalmanErrorCov"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.collectors.SensorCollector.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener : BaseLevelingEstimator2.OnAccuracyChangedListener<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener : BaseLevelingEstimator2.OnAccuracyChangedListener<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener : BaseLevelingEstimator2.OnAccuracyChangedListener<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener : BaseLevelingEstimator2.OnAccuracyChangedListener<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAccuracyChangedListener<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/-on-accuracy-changed-listener/index.html","searchKeys":["OnAccuracyChangedListener","fun interface OnAccuracyChangedListener<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<DoubleFusedGeomagneticAttitudeEstimator> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<DoubleFusedGeomagneticAttitudeEstimator> ","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<FusedGeomagneticAttitudeEstimator> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<FusedGeomagneticAttitudeEstimator> ","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<AccurateRelativeGyroscopeAttitudeEstimator, AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<AccurateRelativeGyroscopeAttitudeEstimator, AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<RelativeGyroscopeAttitudeEstimator, RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<RelativeGyroscopeAttitudeEstimator, RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-relative-gyroscope-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<AccurateRelativeGyroscopeAttitudeEstimator2, AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, AccurateRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-relative-gyroscope-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<RelativeGyroscopeAttitudeEstimator2, RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener, RelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.RelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener<T : AbsoluteAttitudeEstimator<T, *>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener<T : AbsoluteAttitudeEstimator<T, *>>","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener<T : BaseRelativeGyroscopeAttitudeEstimator2<T, L1, L2>, L1 : BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener<T, L1, L2>, L2 : BaseRelativeGyroscopeAttitudeEstimator2.OnAccuracyChangedListener<T, L1, L2>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.OnAttitudeAvailableListener"]},{"name":"fun interface OnAttitudeAvailableListener<T : BaseRelativeGyroscopeAttitudeEstimator<T, L>, L : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<T, L>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/-on-attitude-available-listener/index.html","searchKeys":["OnAttitudeAvailableListener","fun interface OnAttitudeAvailableListener<T : BaseRelativeGyroscopeAttitudeEstimator<T, L>, L : BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener<T, L>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.OnAttitudeAvailableListener"]},{"name":"fun interface OnBatteryTemperatureChangedListener","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.OnBatteryTemperatureChangedListener","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/-on-battery-temperature-changed-listener/index.html","searchKeys":["OnBatteryTemperatureChangedListener","fun interface OnBatteryTemperatureChangedListener","com.irurueta.android.navigation.inertial.BatteryTemperatureService.OnBatteryTemperatureChangedListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnBufferFilledListener"]},{"name":"fun interface OnBufferFilledListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnBufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-buffer-filled-listener/index.html","searchKeys":["OnBufferFilledListener","fun interface OnBufferFilledListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnBufferFilledListener"]},{"name":"fun interface OnCalibrationCompletedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-calibration-completed-listener/index.html","searchKeys":["OnCalibrationCompletedListener","fun interface OnCalibrationCompletedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener"]},{"name":"fun interface OnCalibrationCompletedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-calibration-completed-listener/index.html","searchKeys":["OnCalibrationCompletedListener","fun interface OnCalibrationCompletedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener"]},{"name":"fun interface OnCalibrationSolvingStartedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-calibration-solving-started-listener/index.html","searchKeys":["OnCalibrationSolvingStartedListener","fun interface OnCalibrationSolvingStartedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener"]},{"name":"fun interface OnCalibrationSolvingStartedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-calibration-solving-started-listener/index.html","searchKeys":["OnCalibrationSolvingStartedListener","fun interface OnCalibrationSolvingStartedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener"]},{"name":"fun interface OnCurrentLocationListener","description":"com.irurueta.android.navigation.inertial.LocationService.OnCurrentLocationListener","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-on-current-location-listener/index.html","searchKeys":["OnCurrentLocationListener","fun interface OnCurrentLocationListener","com.irurueta.android.navigation.inertial.LocationService.OnCurrentLocationListener"]},{"name":"fun interface OnDynamicIntervalDetectedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-dynamic-interval-detected-listener/index.html","searchKeys":["OnDynamicIntervalDetectedListener","fun interface OnDynamicIntervalDetectedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener"]},{"name":"fun interface OnDynamicIntervalDetectedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-dynamic-interval-detected-listener/index.html","searchKeys":["OnDynamicIntervalDetectedListener","fun interface OnDynamicIntervalDetectedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener"]},{"name":"fun interface OnDynamicIntervalDetectedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-dynamic-interval-detected-listener/index.html","searchKeys":["OnDynamicIntervalDetectedListener","fun interface OnDynamicIntervalDetectedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener"]},{"name":"fun interface OnDynamicIntervalDetectedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-dynamic-interval-detected-listener/index.html","searchKeys":["OnDynamicIntervalDetectedListener","fun interface OnDynamicIntervalDetectedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener"]},{"name":"fun interface OnDynamicIntervalDetectedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnDynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-dynamic-interval-detected-listener/index.html","searchKeys":["OnDynamicIntervalDetectedListener","fun interface OnDynamicIntervalDetectedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnDynamicIntervalDetectedListener"]},{"name":"fun interface OnDynamicIntervalSkippedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-dynamic-interval-skipped-listener/index.html","searchKeys":["OnDynamicIntervalSkippedListener","fun interface OnDynamicIntervalSkippedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener"]},{"name":"fun interface OnDynamicIntervalSkippedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-dynamic-interval-skipped-listener/index.html","searchKeys":["OnDynamicIntervalSkippedListener","fun interface OnDynamicIntervalSkippedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener"]},{"name":"fun interface OnDynamicIntervalSkippedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-dynamic-interval-skipped-listener/index.html","searchKeys":["OnDynamicIntervalSkippedListener","fun interface OnDynamicIntervalSkippedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener"]},{"name":"fun interface OnDynamicIntervalSkippedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-dynamic-interval-skipped-listener/index.html","searchKeys":["OnDynamicIntervalSkippedListener","fun interface OnDynamicIntervalSkippedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener"]},{"name":"fun interface OnErrorListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener"]},{"name":"fun interface OnErrorListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener"]},{"name":"fun interface OnErrorListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnErrorListener"]},{"name":"fun interface OnErrorListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnErrorListener"]},{"name":"fun interface OnErrorListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener"]},{"name":"fun interface OnErrorListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnErrorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-error-listener/index.html","searchKeys":["OnErrorListener","fun interface OnErrorListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnErrorListener"]},{"name":"fun interface OnEstimationCompletedListener<A : AccumulatedMeasurementEstimator<*, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnEstimationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/-on-estimation-completed-listener/index.html","searchKeys":["OnEstimationCompletedListener","fun interface OnEstimationCompletedListener<A : AccumulatedMeasurementEstimator<*, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnEstimationCompletedListener"]},{"name":"fun interface OnEstimationCompletedListener<A : AccumulatedTriadEstimator<*, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnEstimationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/-on-estimation-completed-listener/index.html","searchKeys":["OnEstimationCompletedListener","fun interface OnEstimationCompletedListener<A : AccumulatedTriadEstimator<*, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnEstimationCompletedListener"]},{"name":"fun interface OnEstimationListener","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.OnEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/-on-estimation-listener/index.html","searchKeys":["OnEstimationListener","fun interface OnEstimationListener","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.OnEstimationListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedAccelerometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-accelerometer-measurement-listener/index.html","searchKeys":["OnGeneratedAccelerometerMeasurementListener","fun interface OnGeneratedAccelerometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedGyroscopeMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-gyroscope-measurement-listener/index.html","searchKeys":["OnGeneratedGyroscopeMeasurementListener","fun interface OnGeneratedGyroscopeMeasurementListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener"]},{"name":"fun interface OnGeneratedMagnetometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-generated-magnetometer-measurement-listener/index.html","searchKeys":["OnGeneratedMagnetometerMeasurementListener","fun interface OnGeneratedMagnetometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener"]},{"name":"fun interface OnGeneratedMagnetometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-generated-magnetometer-measurement-listener/index.html","searchKeys":["OnGeneratedMagnetometerMeasurementListener","fun interface OnGeneratedMagnetometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener"]},{"name":"fun interface OnGeneratedMagnetometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-on-generated-magnetometer-measurement-listener/index.html","searchKeys":["OnGeneratedMagnetometerMeasurementListener","fun interface OnGeneratedMagnetometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener"]},{"name":"fun interface OnGeneratedMagnetometerMeasurementListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-generated-magnetometer-measurement-listener/index.html","searchKeys":["OnGeneratedMagnetometerMeasurementListener","fun interface OnGeneratedMagnetometerMeasurementListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener"]},{"name":"fun interface OnGeneratedMeasurementListener<C : SingleSensorCalibrationMeasurementGenerator<C, T, *, *, *>, T>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-generated-measurement-listener/index.html","searchKeys":["OnGeneratedMeasurementListener","fun interface OnGeneratedMeasurementListener<C : SingleSensorCalibrationMeasurementGenerator<C, T, *, *, *>, T>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener"]},{"name":"fun interface OnInitialAccelerometerBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-initial-accelerometer-bias-available-listener/index.html","searchKeys":["OnInitialAccelerometerBiasAvailableListener","fun interface OnInitialAccelerometerBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener"]},{"name":"fun interface OnInitialAccelerometerBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-initial-accelerometer-bias-available-listener/index.html","searchKeys":["OnInitialAccelerometerBiasAvailableListener","fun interface OnInitialAccelerometerBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener"]},{"name":"fun interface OnInitialAccelerometerBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-accelerometer-bias-available-listener/index.html","searchKeys":["OnInitialAccelerometerBiasAvailableListener","fun interface OnInitialAccelerometerBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener"]},{"name":"fun interface OnInitialAccelerometerBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-accelerometer-bias-available-listener/index.html","searchKeys":["OnInitialAccelerometerBiasAvailableListener","fun interface OnInitialAccelerometerBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener"]},{"name":"fun interface OnInitialBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-on-initial-bias-available-listener/index.html","searchKeys":["OnInitialBiasAvailableListener","fun interface OnInitialBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener"]},{"name":"fun interface OnInitialGyroscopeBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-initial-gyroscope-bias-available-listener/index.html","searchKeys":["OnInitialGyroscopeBiasAvailableListener","fun interface OnInitialGyroscopeBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener"]},{"name":"fun interface OnInitialGyroscopeBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-gyroscope-bias-available-listener/index.html","searchKeys":["OnInitialGyroscopeBiasAvailableListener","fun interface OnInitialGyroscopeBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener"]},{"name":"fun interface OnInitialGyroscopeBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-gyroscope-bias-available-listener/index.html","searchKeys":["OnInitialGyroscopeBiasAvailableListener","fun interface OnInitialGyroscopeBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener"]},{"name":"fun interface OnInitialGyroscopeBiasAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-on-initial-gyroscope-bias-available-listener/index.html","searchKeys":["OnInitialGyroscopeBiasAvailableListener","fun interface OnInitialGyroscopeBiasAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener"]},{"name":"fun interface OnInitialHardIronAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-on-initial-hard-iron-available-listener/index.html","searchKeys":["OnInitialHardIronAvailableListener","fun interface OnInitialHardIronAvailableListener","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener"]},{"name":"fun interface OnInitialMagnetometerHardIronAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-initial-magnetometer-hard-iron-available-listener/index.html","searchKeys":["OnInitialMagnetometerHardIronAvailableListener","fun interface OnInitialMagnetometerHardIronAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener"]},{"name":"fun interface OnInitialMagnetometerHardIronAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-initial-magnetometer-hard-iron-available-listener/index.html","searchKeys":["OnInitialMagnetometerHardIronAvailableListener","fun interface OnInitialMagnetometerHardIronAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener"]},{"name":"fun interface OnInitialMagnetometerHardIronAvailableListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-on-initial-magnetometer-hard-iron-available-listener/index.html","searchKeys":["OnInitialMagnetometerHardIronAvailableListener","fun interface OnInitialMagnetometerHardIronAvailableListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener"]},{"name":"fun interface OnInitializationCompletedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationCompletedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationCompletedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationCompletedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationCompletedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationCompletedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-initialization-completed-listener/index.html","searchKeys":["OnInitializationCompletedListener","fun interface OnInitializationCompletedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationCompletedListener"]},{"name":"fun interface OnInitializationStartedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener"]},{"name":"fun interface OnInitializationStartedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener"]},{"name":"fun interface OnInitializationStartedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener"]},{"name":"fun interface OnInitializationStartedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener"]},{"name":"fun interface OnInitializationStartedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener"]},{"name":"fun interface OnInitializationStartedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-initialization-started-listener/index.html","searchKeys":["OnInitializationStartedListener","fun interface OnInitializationStartedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnInitializationStartedListener"]},{"name":"fun interface OnLevelingAvailableListener : BaseLevelingEstimator.OnLevelingAvailableListener<AccurateLevelingEstimator, AccurateLevelingEstimator.OnLevelingAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener : BaseLevelingEstimator.OnLevelingAvailableListener<AccurateLevelingEstimator, AccurateLevelingEstimator.OnLevelingAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.OnLevelingAvailableListener"]},{"name":"fun interface OnLevelingAvailableListener : BaseLevelingEstimator.OnLevelingAvailableListener<LevelingEstimator, LevelingEstimator.OnLevelingAvailableListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener : BaseLevelingEstimator.OnLevelingAvailableListener<LevelingEstimator, LevelingEstimator.OnLevelingAvailableListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.OnLevelingAvailableListener"]},{"name":"fun interface OnLevelingAvailableListener : BaseLevelingEstimator2.OnLevelingAvailableListener<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator2/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener : BaseLevelingEstimator2.OnLevelingAvailableListener<AccurateLevelingEstimator2, AccurateLevelingEstimator2.OnLevelingAvailableListener, AccurateLevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.OnLevelingAvailableListener"]},{"name":"fun interface OnLevelingAvailableListener : BaseLevelingEstimator2.OnLevelingAvailableListener<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator2/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener : BaseLevelingEstimator2.OnLevelingAvailableListener<LevelingEstimator2, LevelingEstimator2.OnLevelingAvailableListener, LevelingEstimator2.OnAccuracyChangedListener> ","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.OnLevelingAvailableListener"]},{"name":"fun interface OnLevelingAvailableListener<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener<T : BaseLevelingEstimator2<T, L1, L2>, L1 : BaseLevelingEstimator2.OnLevelingAvailableListener<T, L1, L2>, L2 : BaseLevelingEstimator2.OnAccuracyChangedListener<T, L1, L2>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.OnLevelingAvailableListener"]},{"name":"fun interface OnLevelingAvailableListener<T : BaseLevelingEstimator<T, L>, L : BaseLevelingEstimator.OnLevelingAvailableListener<T, L>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.OnLevelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/-on-leveling-available-listener/index.html","searchKeys":["OnLevelingAvailableListener","fun interface OnLevelingAvailableListener<T : BaseLevelingEstimator<T, L>, L : BaseLevelingEstimator.OnLevelingAvailableListener<T, L>>","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.OnLevelingAvailableListener"]},{"name":"fun interface OnLocationPermissionRequestResultListener","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.OnLocationPermissionRequestResultListener","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-on-location-permission-request-result-listener/index.html","searchKeys":["OnLocationPermissionRequestResultListener","fun interface OnLocationPermissionRequestResultListener","com.irurueta.android.navigation.inertial.LocationPermissionService.OnLocationPermissionRequestResultListener"]},{"name":"fun interface OnMeasurementListener","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.OnMeasurementListener"]},{"name":"fun interface OnMeasurementListener","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.OnMeasurementListener"]},{"name":"fun interface OnMeasurementListener","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.OnMeasurementListener"]},{"name":"fun interface OnMeasurementListener","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.OnMeasurementListener"]},{"name":"fun interface OnMeasurementListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener<M : SensorMeasurement<M>, C : BufferedSensorCollector<M, C>>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.OnMeasurementListener"]},{"name":"fun interface OnMeasurementListener<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/-on-measurement-listener/index.html","searchKeys":["OnMeasurementListener","fun interface OnMeasurementListener<M : SensorMeasurement<M>, C : SensorCollector2<M, C>>","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.OnMeasurementListener"]},{"name":"fun interface OnNewCalibrationMeasurementAvailableListener<C : SingleSensorStaticIntervalCalibrator<C, R, *, *, *, *>, R>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-new-calibration-measurement-available-listener/index.html","searchKeys":["OnNewCalibrationMeasurementAvailableListener","fun interface OnNewCalibrationMeasurementAvailableListener<C : SingleSensorStaticIntervalCalibrator<C, R, *, *, *, *>, R>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener"]},{"name":"fun interface OnNumericalInstabilitiesDetectedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-on-numerical-instabilities-detected-listener/index.html","searchKeys":["OnNumericalInstabilitiesDetectedListener","fun interface OnNumericalInstabilitiesDetectedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener"]},{"name":"fun interface OnNumericalInstabilitiesDetectedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-on-numerical-instabilities-detected-listener/index.html","searchKeys":["OnNumericalInstabilitiesDetectedListener","fun interface OnNumericalInstabilitiesDetectedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener"]},{"name":"fun interface OnNumericalInstabilitiesDetectedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-on-numerical-instabilities-detected-listener/index.html","searchKeys":["OnNumericalInstabilitiesDetectedListener","fun interface OnNumericalInstabilitiesDetectedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener"]},{"name":"fun interface OnNumericalInstabilitiesDetectedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-on-numerical-instabilities-detected-listener/index.html","searchKeys":["OnNumericalInstabilitiesDetectedListener","fun interface OnNumericalInstabilitiesDetectedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener"]},{"name":"fun interface OnNumericalInstabilitiesDetectedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-on-numerical-instabilities-detected-listener/index.html","searchKeys":["OnNumericalInstabilitiesDetectedListener","fun interface OnNumericalInstabilitiesDetectedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener"]},{"name":"fun interface OnPoseAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener : AbsolutePoseEstimator.OnPoseAvailableListener<EcefAbsolutePoseEstimator> ","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener : AbsolutePoseEstimator.OnPoseAvailableListener<EcefAbsolutePoseEstimator> ","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener : AbsolutePoseEstimator.OnPoseAvailableListener<LocalPoseEstimator> ","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener : AbsolutePoseEstimator.OnPoseAvailableListener<LocalPoseEstimator> ","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.OnPoseAvailableListener"]},{"name":"fun interface OnPoseAvailableListener<T : AbsolutePoseEstimator>","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.OnPoseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/-on-pose-available-listener/index.html","searchKeys":["OnPoseAvailableListener","fun interface OnPoseAvailableListener<T : AbsolutePoseEstimator>","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator.OnPoseAvailableListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener<M : SensorMeasurement<M>, S : SyncedSensorMeasurement>","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.OnProcessedListener"]},{"name":"fun interface OnProcessedListener<T : SensorMeasurement<T>>","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.OnProcessedListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/-on-processed-listener/index.html","searchKeys":["OnProcessedListener","fun interface OnProcessedListener<T : SensorMeasurement<T>>","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.OnProcessedListener"]},{"name":"fun interface OnReadyToSolveCalibrationListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-ready-to-solve-calibration-listener/index.html","searchKeys":["OnReadyToSolveCalibrationListener","fun interface OnReadyToSolveCalibrationListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener"]},{"name":"fun interface OnReadyToSolveCalibrationListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-ready-to-solve-calibration-listener/index.html","searchKeys":["OnReadyToSolveCalibrationListener","fun interface OnReadyToSolveCalibrationListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener"]},{"name":"fun interface OnResetListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-reset-listener/index.html","searchKeys":["OnResetListener","fun interface OnResetListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener"]},{"name":"fun interface OnResetListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-reset-listener/index.html","searchKeys":["OnResetListener","fun interface OnResetListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener"]},{"name":"fun interface OnResetListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnResetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-reset-listener/index.html","searchKeys":["OnResetListener","fun interface OnResetListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnResetListener"]},{"name":"fun interface OnResetListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnResetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-reset-listener/index.html","searchKeys":["OnResetListener","fun interface OnResetListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnResetListener"]},{"name":"fun interface OnStaleDetectedMeasurementsListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-stale-detected-measurements-listener/index.html","searchKeys":["OnStaleDetectedMeasurementsListener","fun interface OnStaleDetectedMeasurementsListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener"]},{"name":"fun interface OnStaticIntervalDetectedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-static-interval-detected-listener/index.html","searchKeys":["OnStaticIntervalDetectedListener","fun interface OnStaticIntervalDetectedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener"]},{"name":"fun interface OnStaticIntervalDetectedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-static-interval-detected-listener/index.html","searchKeys":["OnStaticIntervalDetectedListener","fun interface OnStaticIntervalDetectedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener"]},{"name":"fun interface OnStaticIntervalDetectedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-static-interval-detected-listener/index.html","searchKeys":["OnStaticIntervalDetectedListener","fun interface OnStaticIntervalDetectedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener"]},{"name":"fun interface OnStaticIntervalDetectedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-static-interval-detected-listener/index.html","searchKeys":["OnStaticIntervalDetectedListener","fun interface OnStaticIntervalDetectedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener"]},{"name":"fun interface OnStaticIntervalDetectedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnStaticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/-on-static-interval-detected-listener/index.html","searchKeys":["OnStaticIntervalDetectedListener","fun interface OnStaticIntervalDetectedListener<T : IntervalDetector<T, *, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.OnStaticIntervalDetectedListener"]},{"name":"fun interface OnStaticIntervalSkippedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/-on-static-interval-skipped-listener/index.html","searchKeys":["OnStaticIntervalSkippedListener","fun interface OnStaticIntervalSkippedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener"]},{"name":"fun interface OnStaticIntervalSkippedListener","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/-on-static-interval-skipped-listener/index.html","searchKeys":["OnStaticIntervalSkippedListener","fun interface OnStaticIntervalSkippedListener","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener"]},{"name":"fun interface OnStaticIntervalSkippedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/-on-static-interval-skipped-listener/index.html","searchKeys":["OnStaticIntervalSkippedListener","fun interface OnStaticIntervalSkippedListener<C : SingleSensorCalibrationMeasurementGenerator<C, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener"]},{"name":"fun interface OnStaticIntervalSkippedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-static-interval-skipped-listener/index.html","searchKeys":["OnStaticIntervalSkippedListener","fun interface OnStaticIntervalSkippedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener"]},{"name":"fun interface OnStoppedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnStoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-on-stopped-listener/index.html","searchKeys":["OnStoppedListener","fun interface OnStoppedListener<C : SingleSensorStaticIntervalCalibrator<C, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.OnStoppedListener"]},{"name":"fun interface OnStoppedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/-on-stopped-listener/index.html","searchKeys":["OnStoppedListener","fun interface OnStoppedListener<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, *>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener"]},{"name":"fun interface OnSyncedMeasurementsListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnSyncedMeasurementsListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/-on-synced-measurements-listener/index.html","searchKeys":["OnSyncedMeasurementsListener","fun interface OnSyncedMeasurementsListener<M : SyncedSensorMeasurement, S : SensorMeasurementSyncer<M, S>>","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.OnSyncedMeasurementsListener"]},{"name":"fun interface OnUnreliableGravityEstimationListener","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-on-unreliable-gravity-estimation-listener/index.html","searchKeys":["OnUnreliableGravityEstimationListener","fun interface OnUnreliableGravityEstimationListener","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener"]},{"name":"fun interface OnUnreliableGravityEstimationListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/-on-unreliable-gravity-estimation-listener/index.html","searchKeys":["OnUnreliableGravityEstimationListener","fun interface OnUnreliableGravityEstimationListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener"]},{"name":"fun interface OnUnreliableGravityEstimationListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-on-unreliable-gravity-estimation-listener/index.html","searchKeys":["OnUnreliableGravityEstimationListener","fun interface OnUnreliableGravityEstimationListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener"]},{"name":"fun interface OnUnreliableGravityEstimationListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/-on-unreliable-gravity-estimation-listener/index.html","searchKeys":["OnUnreliableGravityEstimationListener","fun interface OnUnreliableGravityEstimationListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener"]},{"name":"fun interface OnUnreliableGravityEstimationListener","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/-on-unreliable-gravity-estimation-listener/index.html","searchKeys":["OnUnreliableGravityEstimationListener","fun interface OnUnreliableGravityEstimationListener","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener"]},{"name":"fun interface OnUnreliableListener<A : AccumulatedMeasurementEstimator<*, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnUnreliableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/-on-unreliable-listener/index.html","searchKeys":["OnUnreliableListener","fun interface OnUnreliableListener<A : AccumulatedMeasurementEstimator<*, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.OnUnreliableListener"]},{"name":"fun interface OnUnreliableListener<A : AccumulatedTriadEstimator<*, *, *, *, *, *>>","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnUnreliableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/-on-unreliable-listener/index.html","searchKeys":["OnUnreliableListener","fun interface OnUnreliableListener<A : AccumulatedTriadEstimator<*, *, *, *, *, *>>","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.OnUnreliableListener"]},{"name":"fun mapErrorReason(reason: ErrorReason): CalibratorErrorReason","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.Companion.mapErrorReason","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-companion/map-error-reason.html","searchKeys":["mapErrorReason","fun mapErrorReason(reason: ErrorReason): CalibratorErrorReason","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.Companion.mapErrorReason"]},{"name":"fun mapErrorReason(reason: TriadStaticIntervalDetector.ErrorReason, unreliable: Boolean): ErrorReason","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.Companion.mapErrorReason","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/-companion/map-error-reason.html","searchKeys":["mapErrorReason","fun mapErrorReason(reason: TriadStaticIntervalDetector.ErrorReason, unreliable: Boolean): ErrorReason","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.Companion.mapErrorReason"]},{"name":"fun mapStatus(status: TriadStaticIntervalDetector.Status?, unreliable: Boolean): Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.Companion.mapStatus","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-companion/map-status.html","searchKeys":["mapStatus","fun mapStatus(status: TriadStaticIntervalDetector.Status?, unreliable: Boolean): Status","com.irurueta.android.navigation.inertial.calibration.intervals.Status.Companion.mapStatus"]},{"name":"fun norm(q: Quaternion): Double","description":"com.irurueta.android.navigation.inertial.QuaternionHelper.norm","location":"lib/com.irurueta.android.navigation.inertial/-quaternion-helper/norm.html","searchKeys":["norm","fun norm(q: Quaternion): Double","com.irurueta.android.navigation.inertial.QuaternionHelper.norm"]},{"name":"fun predict()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.predict","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/predict.html","searchKeys":["predict","fun predict()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.predict"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, magnetometerMeasurement: MagnetometerSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.process"]},{"name":"fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/process.html","searchKeys":["process","fun process(accelerometerMeasurement: AccelerometerSensorMeasurement, gyroscopeMeasurement: GyroscopeSensorMeasurement, timestamp: Long = gyroscopeMeasurement.timestamp): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.process"]},{"name":"fun process(measurement: AttitudeSensorMeasurement): Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/process.html","searchKeys":["process","fun process(measurement: AttitudeSensorMeasurement): Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.process"]},{"name":"fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-relative-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedRelativePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGravityAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-relative-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGravityAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.FusedRelativePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-e-c-e-f-absolute-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedECEFAbsolutePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-double-fused-local-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.DoubleFusedLocalPoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-e-c-e-f-absolute-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.FusedECEFAbsolutePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-fused-local-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.FusedLocalPoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-e-c-e-f-absolute-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedECEFAbsolutePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-double-fused-local-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerDoubleFusedLocalPoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-e-c-e-f-absolute-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedECEFAbsolutePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-accelerometer-fused-local-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AccelerometerFusedLocalPoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-e-c-e-f-absolute-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AttitudeECEFAbsolutePoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-local-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AttitudeLocalPoseProcessor.process"]},{"name":"fun process(syncedMeasurement: AttitudeAndAccelerometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/process.html","searchKeys":["process","fun process(syncedMeasurement: AttitudeAndAccelerometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.process"]},{"name":"fun quaternionConversionJacobian(result: Matrix)","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.quaternionConversionJacobian","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/quaternion-conversion-jacobian.html","searchKeys":["quaternionConversionJacobian","fun quaternionConversionJacobian(result: Matrix)","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.quaternionConversionJacobian"]},{"name":"fun requestBackgroundCoarseLocationPermission()","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.requestBackgroundCoarseLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/request-background-coarse-location-permission.html","searchKeys":["requestBackgroundCoarseLocationPermission","fun requestBackgroundCoarseLocationPermission()","com.irurueta.android.navigation.inertial.LocationPermissionService.requestBackgroundCoarseLocationPermission"]},{"name":"fun requestBackgroundCoarseLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestBackgroundCoarseLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-companion/request-background-coarse-location-permission.html","searchKeys":["requestBackgroundCoarseLocationPermission","fun requestBackgroundCoarseLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestBackgroundCoarseLocationPermission"]},{"name":"fun requestBackgroundFineLocationPermission()","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.requestBackgroundFineLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/request-background-fine-location-permission.html","searchKeys":["requestBackgroundFineLocationPermission","fun requestBackgroundFineLocationPermission()","com.irurueta.android.navigation.inertial.LocationPermissionService.requestBackgroundFineLocationPermission"]},{"name":"fun requestBackgroundFineLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestBackgroundFineLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-companion/request-background-fine-location-permission.html","searchKeys":["requestBackgroundFineLocationPermission","fun requestBackgroundFineLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestBackgroundFineLocationPermission"]},{"name":"fun requestCoarseLocationPermission()","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.requestCoarseLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/request-coarse-location-permission.html","searchKeys":["requestCoarseLocationPermission","fun requestCoarseLocationPermission()","com.irurueta.android.navigation.inertial.LocationPermissionService.requestCoarseLocationPermission"]},{"name":"fun requestCoarseLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestCoarseLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-companion/request-coarse-location-permission.html","searchKeys":["requestCoarseLocationPermission","fun requestCoarseLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestCoarseLocationPermission"]},{"name":"fun requestFineLocationPermission()","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.requestFineLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/request-fine-location-permission.html","searchKeys":["requestFineLocationPermission","fun requestFineLocationPermission()","com.irurueta.android.navigation.inertial.LocationPermissionService.requestFineLocationPermission"]},{"name":"fun requestFineLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestFineLocationPermission","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-companion/request-fine-location-permission.html","searchKeys":["requestFineLocationPermission","fun requestFineLocationPermission(caller: ActivityResultCaller, listener: LocationPermissionService.OnLocationPermissionRequestResultListener?)","com.irurueta.android.navigation.inertial.LocationPermissionService.Companion.requestFineLocationPermission"]},{"name":"fun requestLocationUpdates()","description":"com.irurueta.android.navigation.inertial.LocationService.requestLocationUpdates","location":"lib/com.irurueta.android.navigation.inertial/-location-service/request-location-updates.html","searchKeys":["requestLocationUpdates","fun requestLocationUpdates()","com.irurueta.android.navigation.inertial.LocationService.requestLocationUpdates"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.reset"]},{"name":"fun reset()","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/reset.html","searchKeys":["reset","fun reset()","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.reset"]},{"name":"fun setAccelerometerCrossCouplingErrors(accelerometerMxy: Double, accelerometerMxz: Double, accelerometerMyx: Double, accelerometerMyz: Double, accelerometerMzx: Double, accelerometerMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setAccelerometerCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/set-accelerometer-cross-coupling-errors.html","searchKeys":["setAccelerometerCrossCouplingErrors","fun setAccelerometerCrossCouplingErrors(accelerometerMxy: Double, accelerometerMxz: Double, accelerometerMyx: Double, accelerometerMyz: Double, accelerometerMzx: Double, accelerometerMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setAccelerometerCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-accelerometer-initial-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialCrossCouplingErrors","fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/set-accelerometer-initial-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialCrossCouplingErrors","fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-accelerometer-initial-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialCrossCouplingErrors","fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-accelerometer-initial-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialCrossCouplingErrors","fun setAccelerometerInitialCrossCouplingErrors(accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-accelerometer-initial-scaling-factors.html","searchKeys":["setAccelerometerInitialScalingFactors","fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialScalingFactors"]},{"name":"fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/set-accelerometer-initial-scaling-factors.html","searchKeys":["setAccelerometerInitialScalingFactors","fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialScalingFactors"]},{"name":"fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-accelerometer-initial-scaling-factors.html","searchKeys":["setAccelerometerInitialScalingFactors","fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialScalingFactors"]},{"name":"fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-accelerometer-initial-scaling-factors.html","searchKeys":["setAccelerometerInitialScalingFactors","fun setAccelerometerInitialScalingFactors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialScalingFactors"]},{"name":"fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-accelerometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/set-accelerometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-accelerometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-accelerometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setAccelerometerInitialScalingFactorsAndCrossCouplingErrors","fun setAccelerometerInitialScalingFactorsAndCrossCouplingErrors(accelerometerInitialSx: Double, accelerometerInitialSy: Double, accelerometerInitialSz: Double, accelerometerInitialMxy: Double, accelerometerInitialMxz: Double, accelerometerInitialMyx: Double, accelerometerInitialMyz: Double, accelerometerInitialMzx: Double, accelerometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setAccelerometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setAccelerometerScalingFactors(accelerometerSx: Double, accelerometerSy: Double, accelerometerSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setAccelerometerScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/set-accelerometer-scaling-factors.html","searchKeys":["setAccelerometerScalingFactors","fun setAccelerometerScalingFactors(accelerometerSx: Double, accelerometerSy: Double, accelerometerSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setAccelerometerScalingFactors"]},{"name":"fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-gyroscope-initial-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialCrossCouplingErrors","fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-gyroscope-initial-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialCrossCouplingErrors","fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-gyroscope-initial-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialCrossCouplingErrors","fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/set-gyroscope-initial-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialCrossCouplingErrors","fun setGyroscopeInitialCrossCouplingErrors(gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-gyroscope-initial-scaling-factors.html","searchKeys":["setGyroscopeInitialScalingFactors","fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialScalingFactors"]},{"name":"fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-gyroscope-initial-scaling-factors.html","searchKeys":["setGyroscopeInitialScalingFactors","fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialScalingFactors"]},{"name":"fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-gyroscope-initial-scaling-factors.html","searchKeys":["setGyroscopeInitialScalingFactors","fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialScalingFactors"]},{"name":"fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/set-gyroscope-initial-scaling-factors.html","searchKeys":["setGyroscopeInitialScalingFactors","fun setGyroscopeInitialScalingFactors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialScalingFactors"]},{"name":"fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/set-gyroscope-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-gyroscope-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-gyroscope-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/set-gyroscope-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setGyroscopeInitialScalingFactorsAndCrossCouplingErrors","fun setGyroscopeInitialScalingFactorsAndCrossCouplingErrors(gyroscopeInitialSx: Double, gyroscopeInitialSy: Double, gyroscopeInitialSz: Double, gyroscopeInitialMxy: Double, gyroscopeInitialMxz: Double, gyroscopeInitialMyx: Double, gyroscopeInitialMyz: Double, gyroscopeInitialMzx: Double, gyroscopeInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.setGyroscopeInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setInitialCrossCouplingErrors(initialMxy: Double, initialMxz: Double, initialMyx: Double, initialMyz: Double, initialMzx: Double, initialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/set-initial-cross-coupling-errors.html","searchKeys":["setInitialCrossCouplingErrors","fun setInitialCrossCouplingErrors(initialMxy: Double, initialMxz: Double, initialMyx: Double, initialMyz: Double, initialMzx: Double, initialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialCrossCouplingErrors"]},{"name":"fun setInitialScalingFactors(initialSx: Double, initialSy: Double, initialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/set-initial-scaling-factors.html","searchKeys":["setInitialScalingFactors","fun setInitialScalingFactors(initialSx: Double, initialSy: Double, initialSz: Double)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialScalingFactors"]},{"name":"fun setInitialScalingFactorsAndCrossCouplingErrors(initialSx: Double, initialSy: Double, initialSz: Double, initialMxy: Double, initialMxz: Double, initialMyx: Double, initialMyz: Double, initialMzx: Double, initialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/set-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setInitialScalingFactorsAndCrossCouplingErrors","fun setInitialScalingFactorsAndCrossCouplingErrors(initialSx: Double, initialSy: Double, initialSz: Double, initialMxy: Double, initialMxz: Double, initialMyx: Double, initialMyz: Double, initialMzx: Double, initialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.setInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-magnetometer-initial-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialCrossCouplingErrors","fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-magnetometer-initial-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialCrossCouplingErrors","fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/set-magnetometer-initial-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialCrossCouplingErrors","fun setMagnetometerInitialCrossCouplingErrors(magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-magnetometer-initial-scaling-factors.html","searchKeys":["setMagnetometerInitialScalingFactors","fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialScalingFactors"]},{"name":"fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-magnetometer-initial-scaling-factors.html","searchKeys":["setMagnetometerInitialScalingFactors","fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialScalingFactors"]},{"name":"fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialScalingFactors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/set-magnetometer-initial-scaling-factors.html","searchKeys":["setMagnetometerInitialScalingFactors","fun setMagnetometerInitialScalingFactors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialScalingFactors"]},{"name":"fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/set-magnetometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/set-magnetometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/set-magnetometer-initial-scaling-factors-and-cross-coupling-errors.html","searchKeys":["setMagnetometerInitialScalingFactorsAndCrossCouplingErrors","fun setMagnetometerInitialScalingFactorsAndCrossCouplingErrors(magnetometerInitialSx: Double, magnetometerInitialSy: Double, magnetometerInitialSz: Double, magnetometerInitialMxy: Double, magnetometerInitialMxz: Double, magnetometerInitialMyx: Double, magnetometerInitialMyz: Double, magnetometerInitialMzx: Double, magnetometerInitialMzy: Double)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.setMagnetometerInitialScalingFactorsAndCrossCouplingErrors"]},{"name":"fun shouldShowRequestBackgroundLocationPermissionRationale(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestBackgroundLocationPermissionRationale","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/should-show-request-background-location-permission-rationale.html","searchKeys":["shouldShowRequestBackgroundLocationPermissionRationale","fun shouldShowRequestBackgroundLocationPermissionRationale(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestBackgroundLocationPermissionRationale"]},{"name":"fun shouldShowRequestCoarseLocationPermissionRationale(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestCoarseLocationPermissionRationale","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/should-show-request-coarse-location-permission-rationale.html","searchKeys":["shouldShowRequestCoarseLocationPermissionRationale","fun shouldShowRequestCoarseLocationPermissionRationale(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestCoarseLocationPermissionRationale"]},{"name":"fun shouldShowRequestFineLocationPermissionRationale(): Boolean","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestFineLocationPermissionRationale","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/should-show-request-fine-location-permission-rationale.html","searchKeys":["shouldShowRequestFineLocationPermissionRationale","fun shouldShowRequestFineLocationPermissionRationale(): Boolean","com.irurueta.android.navigation.inertial.LocationPermissionService.shouldShowRequestFineLocationPermissionRationale"]},{"name":"fun sqrNorm(q: Quaternion): Double","description":"com.irurueta.android.navigation.inertial.QuaternionHelper.sqrNorm","location":"lib/com.irurueta.android.navigation.inertial/-quaternion-helper/sqr-norm.html","searchKeys":["sqrNorm","fun sqrNorm(q: Quaternion): Double","com.irurueta.android.navigation.inertial.QuaternionHelper.sqrNorm"]},{"name":"fun start()","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.start","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/start.html","searchKeys":["start","fun start()","com.irurueta.android.navigation.inertial.BatteryTemperatureService.start"]},{"name":"fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/start.html","searchKeys":["start","fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.start"]},{"name":"fun start()","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/start.html","searchKeys":["start","fun start()","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.start"]},{"name":"fun start()","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/start.html","searchKeys":["start","fun start()","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.start"]},{"name":"fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/start.html","searchKeys":["start","fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.start"]},{"name":"fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/start.html","searchKeys":["start","fun start(startTimestamp: Long = SystemClock.elapsedRealtimeNanos()): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.start"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.stop","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.BatteryTemperatureService.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.collectors.SensorCollector.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.stop"]},{"name":"fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/stop.html","searchKeys":["stop","fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.stop"]},{"name":"fun valueOf(value: String): AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.valueOf"]},{"name":"fun valueOf(value: String): AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.valueOf"]},{"name":"fun valueOf(value: String): CalibratorErrorReason","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.valueOf","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CalibratorErrorReason","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.valueOf"]},{"name":"fun valueOf(value: String): ErrorReason","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.valueOf","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ErrorReason","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.valueOf"]},{"name":"fun valueOf(value: String): ExternalAccelerationCovarianceMatrixEstimationMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.valueOf","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ExternalAccelerationCovarianceMatrixEstimationMethod","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.valueOf"]},{"name":"fun valueOf(value: String): GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.valueOf"]},{"name":"fun valueOf(value: String): KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.valueOf"]},{"name":"fun valueOf(value: String): LocationService.GooglePlayStatus","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.valueOf","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LocationService.GooglePlayStatus","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.valueOf"]},{"name":"fun valueOf(value: String): MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.valueOf"]},{"name":"fun valueOf(value: String): PhiMatrixMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.valueOf","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PhiMatrixMethod","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.valueOf"]},{"name":"fun valueOf(value: String): ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.valueOf","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.valueOf"]},{"name":"fun valueOf(value: String): QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.valueOf"]},{"name":"fun valueOf(value: String): SensorAccuracy","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SensorAccuracy","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.valueOf"]},{"name":"fun valueOf(value: String): SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SensorDelay","com.irurueta.android.navigation.inertial.collectors.SensorDelay.valueOf"]},{"name":"fun valueOf(value: String): SensorType","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.valueOf","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SensorType","com.irurueta.android.navigation.inertial.collectors.SensorType.valueOf"]},{"name":"fun valueOf(value: String): Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.valueOf","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Status","com.irurueta.android.navigation.inertial.calibration.intervals.Status.valueOf"]},{"name":"fun valueOf(value: String): StopMode","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.valueOf","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StopMode","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.valueOf"]},{"name":"fun values(): Array<AccelerometerSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/values.html","searchKeys":["values","fun values(): Array<AccelerometerSensorType>","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.values"]},{"name":"fun values(): Array<AttitudeSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/values.html","searchKeys":["values","fun values(): Array<AttitudeSensorType>","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.values"]},{"name":"fun values(): Array<CalibratorErrorReason>","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.values","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/values.html","searchKeys":["values","fun values(): Array<CalibratorErrorReason>","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.values"]},{"name":"fun values(): Array<ErrorReason>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.values","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/values.html","searchKeys":["values","fun values(): Array<ErrorReason>","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.values"]},{"name":"fun values(): Array<ExternalAccelerationCovarianceMatrixEstimationMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.values","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/values.html","searchKeys":["values","fun values(): Array<ExternalAccelerationCovarianceMatrixEstimationMethod>","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.values"]},{"name":"fun values(): Array<GyroscopeSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/values.html","searchKeys":["values","fun values(): Array<GyroscopeSensorType>","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.values"]},{"name":"fun values(): Array<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType>","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.values","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/values.html","searchKeys":["values","fun values(): Array<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType>","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.values"]},{"name":"fun values(): Array<LocationService.GooglePlayStatus>","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.values","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/values.html","searchKeys":["values","fun values(): Array<LocationService.GooglePlayStatus>","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.values"]},{"name":"fun values(): Array<MagnetometerSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/values.html","searchKeys":["values","fun values(): Array<MagnetometerSensorType>","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.values"]},{"name":"fun values(): Array<PhiMatrixMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.values","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/values.html","searchKeys":["values","fun values(): Array<PhiMatrixMethod>","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.values"]},{"name":"fun values(): Array<ProcessNoiseCovarianceMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.values","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/values.html","searchKeys":["values","fun values(): Array<ProcessNoiseCovarianceMethod>","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.values"]},{"name":"fun values(): Array<QuaternionStepIntegratorType>","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.values","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/values.html","searchKeys":["values","fun values(): Array<QuaternionStepIntegratorType>","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.values"]},{"name":"fun values(): Array<SensorAccuracy>","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/values.html","searchKeys":["values","fun values(): Array<SensorAccuracy>","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.values"]},{"name":"fun values(): Array<SensorDelay>","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/values.html","searchKeys":["values","fun values(): Array<SensorDelay>","com.irurueta.android.navigation.inertial.collectors.SensorDelay.values"]},{"name":"fun values(): Array<SensorType>","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.values","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/values.html","searchKeys":["values","fun values(): Array<SensorType>","com.irurueta.android.navigation.inertial.collectors.SensorType.values"]},{"name":"fun values(): Array<Status>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.values","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/values.html","searchKeys":["values","fun values(): Array<Status>","com.irurueta.android.navigation.inertial.calibration.intervals.Status.values"]},{"name":"fun values(): Array<StopMode>","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.values","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/values.html","searchKeys":["values","fun values(): Array<StopMode>","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.values"]},{"name":"interface AbsoluteAttitudeEstimator<T : AbsoluteAttitudeEstimator<T, L>, L : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<T>>","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-absolute-attitude-estimator/index.html","searchKeys":["AbsoluteAttitudeEstimator","interface AbsoluteAttitudeEstimator<T : AbsoluteAttitudeEstimator<T, L>, L : AbsoluteAttitudeEstimator.OnAttitudeAvailableListener<T>>","com.irurueta.android.navigation.inertial.estimators.attitude.AbsoluteAttitudeEstimator"]},{"name":"interface AbsolutePoseEstimator : PoseEstimator","description":"com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-absolute-pose-estimator/index.html","searchKeys":["AbsolutePoseEstimator","interface AbsolutePoseEstimator : PoseEstimator","com.irurueta.android.navigation.inertial.estimators.pose.AbsolutePoseEstimator"]},{"name":"interface AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-accelerometer-sensor-measurement-interpolator/index.html","searchKeys":["AccelerometerSensorMeasurementInterpolator","interface AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AccelerometerSensorMeasurementInterpolator"]},{"name":"interface AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-attitude-sensor-measurement-interpolator/index.html","searchKeys":["AttitudeSensorMeasurementInterpolator","interface AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.AttitudeSensorMeasurementInterpolator"]},{"name":"interface GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gravity-sensor-measurement-interpolator/index.html","searchKeys":["GravitySensorMeasurementInterpolator","interface GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GravitySensorMeasurementInterpolator"]},{"name":"interface GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-gyroscope-sensor-measurement-interpolator/index.html","searchKeys":["GyroscopeSensorMeasurementInterpolator","interface GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.GyroscopeSensorMeasurementInterpolator"]},{"name":"interface MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-magnetometer-sensor-measurement-interpolator/index.html","searchKeys":["MagnetometerSensorMeasurementInterpolator","interface MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.interpolators.MagnetometerSensorMeasurementInterpolator"]},{"name":"interface OnLocationUpdateListener","description":"com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-on-location-update-listener/index.html","searchKeys":["OnLocationUpdateListener","interface OnLocationUpdateListener","com.irurueta.android.navigation.inertial.LocationService.OnLocationUpdateListener"]},{"name":"interface PoseEstimator","description":"com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-pose-estimator/index.html","searchKeys":["PoseEstimator","interface PoseEstimator","com.irurueta.android.navigation.inertial.estimators.pose.PoseEstimator"]},{"name":"interface SensorMeasurementInterpolator<T : SensorMeasurementInterpolator<T, M>, M : SensorMeasurement<M>>","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-sensor-measurement-interpolator/index.html","searchKeys":["SensorMeasurementInterpolator","interface SensorMeasurementInterpolator<T : SensorMeasurementInterpolator<T, M>, M : SensorMeasurement<M>>","com.irurueta.android.navigation.inertial.collectors.interpolators.SensorMeasurementInterpolator"]},{"name":"interface StaticIntervalWithMeasurementGeneratorCalibrator<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, I>, I>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-with-measurement-generator-calibrator/index.html","searchKeys":["StaticIntervalWithMeasurementGeneratorCalibrator","interface StaticIntervalWithMeasurementGeneratorCalibrator<C : StaticIntervalWithMeasurementGeneratorCalibrator<C, I>, I>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalWithMeasurementGeneratorCalibrator"]},{"name":"object AccelerometerSensorMeasurementConverter","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurementConverter","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement-converter/index.html","searchKeys":["AccelerometerSensorMeasurementConverter","object AccelerometerSensorMeasurementConverter","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurementConverter"]},{"name":"object AttitudeSensorMeasurementConverter","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurementConverter","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement-converter/index.html","searchKeys":["AttitudeSensorMeasurementConverter","object AttitudeSensorMeasurementConverter","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurementConverter"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.Companion","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.LocationPermissionService.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.LocationService.Companion","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.LocationService.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.Companion","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.intervals.Status.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.SensorDelay.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.Companion","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.collectors.SensorType.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.Companion","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.Companion"]},{"name":"object Companion","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.Companion","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/-companion/index.html","searchKeys":["Companion","object Companion","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.Companion"]},{"name":"object Constants","description":"com.irurueta.android.navigation.inertial.collectors.Constants","location":"lib/com.irurueta.android.navigation.inertial.collectors/-constants/index.html","searchKeys":["Constants","object Constants","com.irurueta.android.navigation.inertial.collectors.Constants"]},{"name":"object DisplayOrientationHelper","description":"com.irurueta.android.navigation.inertial.DisplayOrientationHelper","location":"lib/com.irurueta.android.navigation.inertial/-display-orientation-helper/index.html","searchKeys":["DisplayOrientationHelper","object DisplayOrientationHelper","com.irurueta.android.navigation.inertial.DisplayOrientationHelper"]},{"name":"object ENUtoNEDConverter","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/index.html","searchKeys":["ENUtoNEDConverter","object ENUtoNEDConverter","com.irurueta.android.navigation.inertial.ENUtoNEDConverter"]},{"name":"object GravityHelper","description":"com.irurueta.android.navigation.inertial.GravityHelper","location":"lib/com.irurueta.android.navigation.inertial/-gravity-helper/index.html","searchKeys":["GravityHelper","object GravityHelper","com.irurueta.android.navigation.inertial.GravityHelper"]},{"name":"object GravitySensorMeasurementConverter","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurementConverter","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement-converter/index.html","searchKeys":["GravitySensorMeasurementConverter","object GravitySensorMeasurementConverter","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurementConverter"]},{"name":"object GyroscopeSensorMeasurementConverter","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurementConverter","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement-converter/index.html","searchKeys":["GyroscopeSensorMeasurementConverter","object GyroscopeSensorMeasurementConverter","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurementConverter"]},{"name":"object MagnetometerSensorMeasurementConverter","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurementConverter","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement-converter/index.html","searchKeys":["MagnetometerSensorMeasurementConverter","object MagnetometerSensorMeasurementConverter","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurementConverter"]},{"name":"object QuaternionHelper","description":"com.irurueta.android.navigation.inertial.QuaternionHelper","location":"lib/com.irurueta.android.navigation.inertial/-quaternion-helper/index.html","searchKeys":["QuaternionHelper","object QuaternionHelper","com.irurueta.android.navigation.inertial.QuaternionHelper"]},{"name":"open class KalmanFilter : Serializable","description":"com.irurueta.android.navigation.inertial.KalmanFilter","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/index.html","searchKeys":["KalmanFilter","open class KalmanFilter : Serializable","com.irurueta.android.navigation.inertial.KalmanFilter"]},{"name":"open fun copyFrom(other: T)","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open fun copyFrom(other: T)","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.copyFrom"]},{"name":"open fun correct(measurement: Matrix): Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.correct","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/correct.html","searchKeys":["correct","open fun correct(measurement: Matrix): Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.correct"]},{"name":"open fun getControlParameters(): Int","description":"com.irurueta.android.navigation.inertial.KalmanFilter.getControlParameters","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/get-control-parameters.html","searchKeys":["getControlParameters","open fun getControlParameters(): Int","com.irurueta.android.navigation.inertial.KalmanFilter.getControlParameters"]},{"name":"open fun getDynamicParameters(): Int","description":"com.irurueta.android.navigation.inertial.KalmanFilter.getDynamicParameters","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/get-dynamic-parameters.html","searchKeys":["getDynamicParameters","open fun getDynamicParameters(): Int","com.irurueta.android.navigation.inertial.KalmanFilter.getDynamicParameters"]},{"name":"open fun getMeasureParameters(): Int","description":"com.irurueta.android.navigation.inertial.KalmanFilter.getMeasureParameters","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/get-measure-parameters.html","searchKeys":["getMeasureParameters","open fun getMeasureParameters(): Int","com.irurueta.android.navigation.inertial.KalmanFilter.getMeasureParameters"]},{"name":"open fun predict(): Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.predict","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/predict.html","searchKeys":["predict","open fun predict(): Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.predict"]},{"name":"open fun predict(control: Matrix): Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.predict","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/predict.html","searchKeys":["predict","open fun predict(control: Matrix): Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.predict"]},{"name":"open fun reset()","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.reset","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/reset.html","searchKeys":["reset","open fun reset()","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.reset"]},{"name":"open fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/reset.html","searchKeys":["reset","open fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.reset"]},{"name":"open fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/reset.html","searchKeys":["reset","open fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.reset"]},{"name":"open fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/reset.html","searchKeys":["reset","open fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.reset"]},{"name":"open fun setMeasureParameters(measureParameters: Int)","description":"com.irurueta.android.navigation.inertial.KalmanFilter.setMeasureParameters","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/set-measure-parameters.html","searchKeys":["setMeasureParameters","open fun setMeasureParameters(measureParameters: Int)","com.irurueta.android.navigation.inertial.KalmanFilter.setMeasureParameters"]},{"name":"open fun start()","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/start.html","searchKeys":["start","open fun start()","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.start"]},{"name":"open override fun calibrate(): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrate","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/calibrate.html","searchKeys":["calibrate","open override fun calibrate(): Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrate"]},{"name":"open override fun calibrate(): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrate","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/calibrate.html","searchKeys":["calibrate","open override fun calibrate(): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrate"]},{"name":"open override fun clone(): Any","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.clone","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/clone.html","searchKeys":["clone","open override fun clone(): Any","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.clone"]},{"name":"open override fun copy(): AccelerometerSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/copy.html","searchKeys":["copy","open override fun copy(): AccelerometerSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.copy"]},{"name":"open override fun copy(): AttitudeSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/copy.html","searchKeys":["copy","open override fun copy(): AttitudeSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.copy"]},{"name":"open override fun copy(): GravitySensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/copy.html","searchKeys":["copy","open override fun copy(): GravitySensorMeasurement","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.copy"]},{"name":"open override fun copy(): GyroscopeSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/copy.html","searchKeys":["copy","open override fun copy(): GyroscopeSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.copy"]},{"name":"open override fun copy(): MagnetometerSensorMeasurement","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.copy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/copy.html","searchKeys":["copy","open override fun copy(): MagnetometerSensorMeasurement","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.copy"]},{"name":"open override fun copyFrom(other: AccelerometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open override fun copyFrom(other: AccelerometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.copyFrom"]},{"name":"open override fun copyFrom(other: AttitudeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open override fun copyFrom(other: AttitudeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.copyFrom"]},{"name":"open override fun copyFrom(other: GravitySensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open override fun copyFrom(other: GravitySensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.copyFrom"]},{"name":"open override fun copyFrom(other: GyroscopeSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open override fun copyFrom(other: GyroscopeSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.copyFrom"]},{"name":"open override fun copyFrom(other: MagnetometerSensorMeasurement)","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.copyFrom","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/copy-from.html","searchKeys":["copyFrom","open override fun copyFrom(other: MagnetometerSensorMeasurement)","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.copyFrom"]},{"name":"open override fun estimate()","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/estimate.html","searchKeys":["estimate","open override fun estimate()","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.estimate"]},{"name":"open override fun estimate()","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/estimate.html","searchKeys":["estimate","open override fun estimate()","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.estimate"]},{"name":"open override fun estimate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-phi-matrix-estimator/estimate.html","searchKeys":["estimate","open override fun estimate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.estimate"]},{"name":"open override fun estimate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.estimate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-phi-matrix-estimator/estimate.html","searchKeys":["estimate","open override fun estimate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.estimate"]},{"name":"open override fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/get-accelerometer-average-time-interval-as-time.html","searchKeys":["getAccelerometerAverageTimeIntervalAsTime","open override fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerAverageTimeIntervalAsTime"]},{"name":"open override fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-average-time-interval-as-time.html","searchKeys":["getAccelerometerAverageTimeIntervalAsTime","open override fun getAccelerometerAverageTimeIntervalAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerAverageTimeIntervalAsTime"]},{"name":"open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/get-accelerometer-base-noise-level-as-measurement.html","searchKeys":["getAccelerometerBaseNoiseLevelAsMeasurement","open override fun getAccelerometerBaseNoiseLevelAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getAccelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/get-accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["getAccelerometerTimeIntervalStandardDeviationAsTime","open override fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getAccelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"open override fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["getAccelerometerTimeIntervalStandardDeviationAsTime","open override fun getAccelerometerTimeIntervalStandardDeviationAsTime(result: Time): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getAccelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/get-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["getBaseNoiseLevelAbsoluteThresholdAsMeasurement","open override fun getBaseNoiseLevelAbsoluteThresholdAsMeasurement(result: Acceleration)","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override fun getMeasurementNorm(): Speed","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-norm.html","searchKeys":["getMeasurementNorm","open override fun getMeasurementNorm(): Speed","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementNorm"]},{"name":"open override fun getMeasurementX(): Speed","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementX","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-x.html","searchKeys":["getMeasurementX","open override fun getMeasurementX(): Speed","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementX"]},{"name":"open override fun getMeasurementX(result: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementX","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-x.html","searchKeys":["getMeasurementX","open override fun getMeasurementX(result: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementX"]},{"name":"open override fun getMeasurementY(): Speed","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementY","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-y.html","searchKeys":["getMeasurementY","open override fun getMeasurementY(): Speed","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementY"]},{"name":"open override fun getMeasurementY(result: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementY","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-y.html","searchKeys":["getMeasurementY","open override fun getMeasurementY(result: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementY"]},{"name":"open override fun getMeasurementZ(): Speed","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementZ","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-z.html","searchKeys":["getMeasurementZ","open override fun getMeasurementZ(): Speed","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementZ"]},{"name":"open override fun getMeasurementZ(result: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementZ","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/get-measurement-z.html","searchKeys":["getMeasurementZ","open override fun getMeasurementZ(result: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.getMeasurementZ"]},{"name":"open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.getThresholdAsMeasurement"]},{"name":"open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.getThresholdAsMeasurement"]},{"name":"open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.getThresholdAsMeasurement"]},{"name":"open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.getThresholdAsMeasurement"]},{"name":"open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/get-threshold-as-measurement.html","searchKeys":["getThresholdAsMeasurement","open override fun getThresholdAsMeasurement(result: Acceleration): Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.getThresholdAsMeasurement"]},{"name":"open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.integrate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-process-noise-covariance-integrator/integrate.html","searchKeys":["integrate","open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.integrate"]},{"name":"open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.integrate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-better-process-noise-covariance-integrator/integrate.html","searchKeys":["integrate","open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.integrate"]},{"name":"open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.integrate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/integrate.html","searchKeys":["integrate","open override fun integrate(timeIntervalSeconds: Double, result: Matrix)","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.integrate"]},{"name":"open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-direct-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.interpolate"]},{"name":"open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.interpolate"]},{"name":"open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.interpolate","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/interpolate.html","searchKeys":["interpolate","open override fun interpolate(currentMeasurement: M, timestamp: Long, result: M): Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.interpolate"]},{"name":"open override fun process(gx: Double, gy: Double, gz: Double)","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/process.html","searchKeys":["process","open override fun process(gx: Double, gy: Double, gz: Double)","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.process"]},{"name":"open override fun process(gx: Double, gy: Double, gz: Double)","description":"com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveling-processor/process.html","searchKeys":["process","open override fun process(gx: Double, gy: Double, gz: Double)","com.irurueta.android.navigation.inertial.processors.attitude.LevelingProcessor.process"]},{"name":"open override fun process(measurement: AccelerometerSensorMeasurement, timestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-gravity-processor/process.html","searchKeys":["process","open override fun process(measurement: AccelerometerSensorMeasurement, timestamp: Long): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.process"]},{"name":"open override fun process(measurement: GravitySensorMeasurement, timestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-gravity-processor/process.html","searchKeys":["process","open override fun process(measurement: GravitySensorMeasurement, timestamp: Long): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.GravityProcessor.process"]},{"name":"open override fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-relative-gyroscope-attitude-processor/process.html","searchKeys":["process","open override fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccurateRelativeGyroscopeAttitudeProcessor.process"]},{"name":"open override fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-relative-gyroscope-attitude-processor/process.html","searchKeys":["process","open override fun process(measurement: GyroscopeSensorMeasurement, timestamp: Long): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.RelativeGyroscopeAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-leveled-relative-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: AccelerometerAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerLeveledRelativeAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: AccelerometerAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: AccelerometerAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGeomagneticAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-double-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerDoubleFusedGeomagneticAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerFusedGeomagneticAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: GravityAndGyroscopeSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-leveled-relative-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: GravityAndGyroscopeSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.LeveledRelativeAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: GravityAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: GravityAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.GeomagneticAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: GravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-double-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: GravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.DoubleFusedGeomagneticAttitudeProcessor.process"]},{"name":"open override fun process(syncedMeasurement: GravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor.process","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-fused-geomagnetic-attitude-processor/process.html","searchKeys":["process","open override fun process(syncedMeasurement: GravityGyroscopeAndMagnetometerSyncedSensorMeasurement): Boolean","com.irurueta.android.navigation.inertial.processors.attitude.FusedGeomagneticAttitudeProcessor.process"]},{"name":"open override fun push(previousMeasurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-direct-sensor-measurement-interpolator/push.html","searchKeys":["push","open override fun push(previousMeasurement: M)","com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.push"]},{"name":"open override fun push(previousMeasurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/push.html","searchKeys":["push","open override fun push(previousMeasurement: M)","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.push"]},{"name":"open override fun push(previousMeasurement: M)","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.push","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/push.html","searchKeys":["push","open override fun push(previousMeasurement: M)","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.push"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-direct-sensor-measurement-interpolator/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.DirectSensorMeasurementInterpolator.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.reset","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.reset","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-mean-averaging-filter/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.estimators.filter.MeanAveragingFilter.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.reset","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-median-averaging-filter/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.estimators.filter.MedianAveragingFilter.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.reset"]},{"name":"open override fun reset()","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.reset","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/reset.html","searchKeys":["reset","open override fun reset()","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.reset"]},{"name":"open override fun setMeasurementCoordinates(measurementX: Speed, measurementY: Speed, measurementZ: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementCoordinates","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/set-measurement-coordinates.html","searchKeys":["setMeasurementCoordinates","open override fun setMeasurementCoordinates(measurementX: Speed, measurementY: Speed, measurementZ: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementCoordinates"]},{"name":"open override fun setMeasurementX(measurementX: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementX","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/set-measurement-x.html","searchKeys":["setMeasurementX","open override fun setMeasurementX(measurementX: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementX"]},{"name":"open override fun setMeasurementY(measurementY: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementY","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/set-measurement-y.html","searchKeys":["setMeasurementY","open override fun setMeasurementY(measurementY: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementY"]},{"name":"open override fun setMeasurementZ(measurementZ: Speed)","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementZ","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/set-measurement-z.html","searchKeys":["setMeasurementZ","open override fun setMeasurementZ(measurementZ: Speed)","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.setMeasurementZ"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.start","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.start"]},{"name":"open override fun start()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.start","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/start.html","searchKeys":["start","open override fun start()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.start"]},{"name":"open override fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/start.html","searchKeys":["start","open override fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.start"]},{"name":"open override fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/start.html","searchKeys":["start","open override fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.start"]},{"name":"open override fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/start.html","searchKeys":["start","open override fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.start"]},{"name":"open override fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/start.html","searchKeys":["start","open override fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.start"]},{"name":"open override fun start(): Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.start","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/start.html","searchKeys":["start","open override fun start(): Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun start(startTimestamp: Long): Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.start","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/start.html","searchKeys":["start","open override fun start(startTimestamp: Long): Boolean","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.start"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.stop","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.stop","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.stop"]},{"name":"open override fun stop()","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.stop","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/stop.html","searchKeys":["stop","open override fun stop()","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.stop"]},{"name":"open override val accelerometerAverageTimeInterval: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-average-time-interval.html","searchKeys":["accelerometerAverageTimeInterval","open override val accelerometerAverageTimeInterval: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerAverageTimeInterval"]},{"name":"open override val accelerometerAverageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-average-time-interval.html","searchKeys":["accelerometerAverageTimeInterval","open override val accelerometerAverageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeInterval"]},{"name":"open override val accelerometerAverageTimeIntervalAsTime: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-average-time-interval-as-time.html","searchKeys":["accelerometerAverageTimeIntervalAsTime","open override val accelerometerAverageTimeIntervalAsTime: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerAverageTimeIntervalAsTime"]},{"name":"open override val accelerometerAverageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-average-time-interval-as-time.html","searchKeys":["accelerometerAverageTimeIntervalAsTime","open override val accelerometerAverageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerAverageTimeIntervalAsTime"]},{"name":"open override val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","open override val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerAveragingFilter"]},{"name":"open override val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","open override val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerAveragingFilter"]},{"name":"open override val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","open override val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerAveragingFilter"]},{"name":"open override val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","open override val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerAveragingFilter"]},{"name":"open override val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","open override val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerAveragingFilter"]},{"name":"open override val accelerometerBaseNoiseLevel: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","open override val accelerometerBaseNoiseLevel: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevel"]},{"name":"open override val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","open override val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevel"]},{"name":"open override val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","open override val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevel"]},{"name":"open override val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","open override val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevel"]},{"name":"open override val accelerometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/accelerometer-base-noise-level.html","searchKeys":["accelerometerBaseNoiseLevel","open override val accelerometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevel"]},{"name":"open override val accelerometerBaseNoiseLevelAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","open override val accelerometerBaseNoiseLevelAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/accelerometer-base-noise-level-as-measurement.html","searchKeys":["accelerometerBaseNoiseLevelAsMeasurement","open override val accelerometerBaseNoiseLevelAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelAsMeasurement"]},{"name":"open override val accelerometerBaseNoiseLevelPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","open override val accelerometerBaseNoiseLevelPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelPsd"]},{"name":"open override val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","open override val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelPsd"]},{"name":"open override val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","open override val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelPsd"]},{"name":"open override val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","open override val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelPsd"]},{"name":"open override val accelerometerBaseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/accelerometer-base-noise-level-psd.html","searchKeys":["accelerometerBaseNoiseLevelPsd","open override val accelerometerBaseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelPsd"]},{"name":"open override val accelerometerBaseNoiseLevelRootPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","open override val accelerometerBaseNoiseLevelRootPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerBaseNoiseLevelRootPsd"]},{"name":"open override val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","open override val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"open override val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","open override val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"open override val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","open override val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"open override val accelerometerBaseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/accelerometer-base-noise-level-root-psd.html","searchKeys":["accelerometerBaseNoiseLevelRootPsd","open override val accelerometerBaseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerBaseNoiseLevelRootPsd"]},{"name":"open override val accelerometerSensor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensor"]},{"name":"open override val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerSensor"]},{"name":"open override val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerSensor"]},{"name":"open override val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerSensor"]},{"name":"open override val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSensor"]},{"name":"open override val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","open override val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.accelerometerSensor"]},{"name":"open override val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","open override val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorDelay"]},{"name":"open override val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","open override val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensorDelay"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerSensorType"]},{"name":"open override val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","open override val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerSensorType"]},{"name":"open override val accelerometerTimeIntervalStandardDeviation: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-time-interval-standard-deviation.html","searchKeys":["accelerometerTimeIntervalStandardDeviation","open override val accelerometerTimeIntervalStandardDeviation: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalStandardDeviation"]},{"name":"open override val accelerometerTimeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-standard-deviation.html","searchKeys":["accelerometerTimeIntervalStandardDeviation","open override val accelerometerTimeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviation"]},{"name":"open override val accelerometerTimeIntervalStandardDeviationAsTime: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["accelerometerTimeIntervalStandardDeviationAsTime","open override val accelerometerTimeIntervalStandardDeviationAsTime: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"open override val accelerometerTimeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["accelerometerTimeIntervalStandardDeviationAsTime","open override val accelerometerTimeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"open override val accelerometerTimeIntervalVariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-time-interval-variance.html","searchKeys":["accelerometerTimeIntervalVariance","open override val accelerometerTimeIntervalVariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerTimeIntervalVariance"]},{"name":"open override val accelerometerTimeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accelerometer-time-interval-variance.html","searchKeys":["accelerometerTimeIntervalVariance","open override val accelerometerTimeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accelerometerTimeIntervalVariance"]},{"name":"open override val averageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","open override val averageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.averageTimeInterval"]},{"name":"open override val averageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","open override val averageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.averageTimeInterval"]},{"name":"open override val averageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","open override val averageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.averageTimeInterval"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.context","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.context"]},{"name":"open override val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/context.html","searchKeys":["context","open override val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.context"]},{"name":"open override val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","open override val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"open override val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","open override val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"open override val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","open override val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.estimateEulerAngles"]},{"name":"open override val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","open override val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.estimateEulerAngles"]},{"name":"open override val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","open override val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.estimatePoseTransformation"]},{"name":"open override val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","open override val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.estimatePoseTransformation"]},{"name":"open override val estimatedChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-chi-sq.html","searchKeys":["estimatedChiSq","open override val estimatedChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedChiSq"]},{"name":"open override val estimatedChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-chi-sq.html","searchKeys":["estimatedChiSq","open override val estimatedChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedChiSq"]},{"name":"open override val estimatedCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-covariance.html","searchKeys":["estimatedCovariance","open override val estimatedCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedCovariance"]},{"name":"open override val estimatedCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-covariance.html","searchKeys":["estimatedCovariance","open override val estimatedCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedCovariance"]},{"name":"open override val estimatedMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-mse.html","searchKeys":["estimatedMse","open override val estimatedMse: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMse"]},{"name":"open override val estimatedMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mse.html","searchKeys":["estimatedMse","open override val estimatedMse: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMse"]},{"name":"open override val estimatedMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-mxy.html","searchKeys":["estimatedMxy","open override val estimatedMxy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMxy"]},{"name":"open override val estimatedMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mxy.html","searchKeys":["estimatedMxy","open override val estimatedMxy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMxy"]},{"name":"open override val estimatedMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-mxz.html","searchKeys":["estimatedMxz","open override val estimatedMxz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMxz"]},{"name":"open override val estimatedMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mxz.html","searchKeys":["estimatedMxz","open override val estimatedMxz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMxz"]},{"name":"open override val estimatedMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-myx.html","searchKeys":["estimatedMyx","open override val estimatedMyx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMyx"]},{"name":"open override val estimatedMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-myx.html","searchKeys":["estimatedMyx","open override val estimatedMyx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMyx"]},{"name":"open override val estimatedMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-myz.html","searchKeys":["estimatedMyz","open override val estimatedMyz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMyz"]},{"name":"open override val estimatedMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-myz.html","searchKeys":["estimatedMyz","open override val estimatedMyz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMyz"]},{"name":"open override val estimatedMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-mzx.html","searchKeys":["estimatedMzx","open override val estimatedMzx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMzx"]},{"name":"open override val estimatedMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mzx.html","searchKeys":["estimatedMzx","open override val estimatedMzx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMzx"]},{"name":"open override val estimatedMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-mzy.html","searchKeys":["estimatedMzy","open override val estimatedMzy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMzy"]},{"name":"open override val estimatedMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mzy.html","searchKeys":["estimatedMzy","open override val estimatedMzy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMzy"]},{"name":"open override val estimatedSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-sx.html","searchKeys":["estimatedSx","open override val estimatedSx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSx"]},{"name":"open override val estimatedSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-sx.html","searchKeys":["estimatedSx","open override val estimatedSx: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSx"]},{"name":"open override val estimatedSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-sy.html","searchKeys":["estimatedSy","open override val estimatedSy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSy"]},{"name":"open override val estimatedSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-sy.html","searchKeys":["estimatedSy","open override val estimatedSy: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSy"]},{"name":"open override val estimatedSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-sz.html","searchKeys":["estimatedSz","open override val estimatedSz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedSz"]},{"name":"open override val estimatedSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-sz.html","searchKeys":["estimatedSz","open override val estimatedSz: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedSz"]},{"name":"open override val gyroscopeAverageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/gyroscope-average-time-interval.html","searchKeys":["gyroscopeAverageTimeInterval","open override val gyroscopeAverageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeAverageTimeInterval"]},{"name":"open override val gyroscopeAverageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/gyroscope-average-time-interval.html","searchKeys":["gyroscopeAverageTimeInterval","open override val gyroscopeAverageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeAverageTimeInterval"]},{"name":"open override val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","open override val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeSensorType"]},{"name":"open override val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","open override val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeSensorType"]},{"name":"open override val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","open override val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gyroscopeSensorType"]},{"name":"open override val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","open override val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gyroscopeSensorType"]},{"name":"open override val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","open override val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gyroscopeSensorType"]},{"name":"open override val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/initial-velocity.html","searchKeys":["initialVelocity","open override val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.initialVelocity"]},{"name":"open override val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/initial-velocity.html","searchKeys":["initialVelocity","open override val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.initialVelocity"]},{"name":"open override val isDynamicIntervalSkipped: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","open override val isDynamicIntervalSkipped: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isDynamicIntervalSkipped"]},{"name":"open override val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","open override val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isDynamicIntervalSkipped"]},{"name":"open override val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","open override val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.isDynamicIntervalSkipped"]},{"name":"open override val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","open override val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.isDynamicIntervalSkipped"]},{"name":"open override val isDynamicIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.isDynamicIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/is-dynamic-interval-skipped.html","searchKeys":["isDynamicIntervalSkipped","open override val isDynamicIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.isDynamicIntervalSkipped"]},{"name":"open override val isReadyToSolveCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isReadyToSolveCalibration"]},{"name":"open override val isReadyToSolveCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isReadyToSolveCalibration"]},{"name":"open override val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveCalibration"]},{"name":"open override val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveCalibration"]},{"name":"open override val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveCalibration"]},{"name":"open override val isReadyToSolveCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","open override val isReadyToSolveCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isReadyToSolveCalibration"]},{"name":"open override val isStaticIntervalSkipped: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","open override val isStaticIntervalSkipped: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isStaticIntervalSkipped"]},{"name":"open override val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","open override val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.isStaticIntervalSkipped"]},{"name":"open override val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","open override val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.isStaticIntervalSkipped"]},{"name":"open override val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","open override val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.isStaticIntervalSkipped"]},{"name":"open override val isStaticIntervalSkipped: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.isStaticIntervalSkipped","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/is-static-interval-skipped.html","searchKeys":["isStaticIntervalSkipped","open override val isStaticIntervalSkipped: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.isStaticIntervalSkipped"]},{"name":"open override val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","open override val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.magnetometerSensorType"]},{"name":"open override val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","open override val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.magnetometerSensorType"]},{"name":"open override val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","open override val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.magnetometerSensorType"]},{"name":"open override val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","open override val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.magnetometerSensorType"]},{"name":"open override val method: PhiMatrixMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-phi-matrix-estimator/method.html","searchKeys":["method","open override val method: PhiMatrixMethod","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedPhiMatrixEstimator.method"]},{"name":"open override val method: PhiMatrixMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-phi-matrix-estimator/method.html","searchKeys":["method","open override val method: PhiMatrixMethod","com.irurueta.android.navigation.inertial.processors.attitude.PrecisePhiMatrixEstimator.method"]},{"name":"open override val method: ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-approximated-process-noise-covariance-integrator/method.html","searchKeys":["method","open override val method: ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.ApproximatedProcessNoiseCovarianceIntegrator.method"]},{"name":"open override val method: ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-better-process-noise-covariance-integrator/method.html","searchKeys":["method","open override val method: ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.BetterProcessNoiseCovarianceIntegrator.method"]},{"name":"open override val method: ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.method","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/method.html","searchKeys":["method","open override val method: ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.method"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.minimumRequiredMeasurements"]},{"name":"open override val minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","open override val minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.minimumRequiredMeasurements"]},{"name":"open override val numberOfProcessedAccelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.numberOfProcessedAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/number-of-processed-accelerometer-measurements.html","searchKeys":["numberOfProcessedAccelerometerMeasurements","open override val numberOfProcessedAccelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.numberOfProcessedAccelerometerMeasurements"]},{"name":"open override val numberOfProcessedAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.numberOfProcessedAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/number-of-processed-accelerometer-measurements.html","searchKeys":["numberOfProcessedAccelerometerMeasurements","open override val numberOfProcessedAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.numberOfProcessedAccelerometerMeasurements"]},{"name":"open override val processedDynamicSamples: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","open override val processedDynamicSamples: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.processedDynamicSamples"]},{"name":"open override val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","open override val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.processedDynamicSamples"]},{"name":"open override val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","open override val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.processedDynamicSamples"]},{"name":"open override val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","open override val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.processedDynamicSamples"]},{"name":"open override val processedDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.processedDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/processed-dynamic-samples.html","searchKeys":["processedDynamicSamples","open override val processedDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.processedDynamicSamples"]},{"name":"open override val processedStaticSamples: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/processed-static-samples.html","searchKeys":["processedStaticSamples","open override val processedStaticSamples: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.processedStaticSamples"]},{"name":"open override val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/processed-static-samples.html","searchKeys":["processedStaticSamples","open override val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.processedStaticSamples"]},{"name":"open override val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/processed-static-samples.html","searchKeys":["processedStaticSamples","open override val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.processedStaticSamples"]},{"name":"open override val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/processed-static-samples.html","searchKeys":["processedStaticSamples","open override val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.processedStaticSamples"]},{"name":"open override val processedStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.processedStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/processed-static-samples.html","searchKeys":["processedStaticSamples","open override val processedStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.processedStaticSamples"]},{"name":"open override val running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.running","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/running.html","searchKeys":["running","open override val running: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.running"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector2/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-collector2/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-accelerometer-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-attitude-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gravity-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedGravitySensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gyroscope-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-magnetometer-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector2/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector2.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector2/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.sensor"]},{"name":"open override val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.sensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector2/sensor.html","searchKeys":["sensor","open override val sensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.sensor"]},{"name":"open override val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/sensor-available.html","searchKeys":["sensorAvailable","open override val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensorAvailable"]},{"name":"open override val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector2/sensor-available.html","searchKeys":["sensorAvailable","open override val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensorAvailable"]},{"name":"open override val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-accelerometer-sensor-collector/sensor-available.html","searchKeys":["sensorAvailable","open override val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensorAvailable"]},{"name":"open override val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-attitude-sensor-collector/sensor-available.html","searchKeys":["sensorAvailable","open override val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensorAvailable"]},{"name":"open override val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","open override val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.sensorDelay"]},{"name":"open override val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","open override val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.sensorDelay"]},{"name":"open override val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/sensor-delay.html","searchKeys":["sensorDelay","open override val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.sensorDelay"]},{"name":"open override val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/sensor-delay.html","searchKeys":["sensorDelay","open override val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.sensorDelay"]},{"name":"open override val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/sensor-delay.html","searchKeys":["sensorDelay","open override val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.sensorDelay"]},{"name":"open override val solveCalibrationWhenEnoughMeasurements: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.solveCalibrationWhenEnoughMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/solve-calibration-when-enough-measurements.html","searchKeys":["solveCalibrationWhenEnoughMeasurements","open override val solveCalibrationWhenEnoughMeasurements: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.solveCalibrationWhenEnoughMeasurements"]},{"name":"open override val solveCalibrationWhenEnoughMeasurements: Boolean = true","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.solveCalibrationWhenEnoughMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/solve-calibration-when-enough-measurements.html","searchKeys":["solveCalibrationWhenEnoughMeasurements","open override val solveCalibrationWhenEnoughMeasurements: Boolean = true","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.solveCalibrationWhenEnoughMeasurements"]},{"name":"open override val status: Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/status.html","searchKeys":["status","open override val status: Status","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.status"]},{"name":"open override val status: Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/status.html","searchKeys":["status","open override val status: Status","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.status"]},{"name":"open override val status: Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/status.html","searchKeys":["status","open override val status: Status","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.status"]},{"name":"open override val threshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/threshold.html","searchKeys":["threshold","open override val threshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.threshold"]},{"name":"open override val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/threshold.html","searchKeys":["threshold","open override val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.threshold"]},{"name":"open override val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/threshold.html","searchKeys":["threshold","open override val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.threshold"]},{"name":"open override val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/threshold.html","searchKeys":["threshold","open override val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.threshold"]},{"name":"open override val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/threshold.html","searchKeys":["threshold","open override val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.threshold"]},{"name":"open override val thresholdAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","open override val thresholdAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.thresholdAsMeasurement"]},{"name":"open override val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","open override val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.thresholdAsMeasurement"]},{"name":"open override val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","open override val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.thresholdAsMeasurement"]},{"name":"open override val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","open override val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.thresholdAsMeasurement"]},{"name":"open override val thresholdAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","open override val thresholdAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.thresholdAsMeasurement"]},{"name":"open override val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","open override val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccelerometer"]},{"name":"open override val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","open override val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccelerometer"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.accelerometerMeasurementListener"]},{"name":"open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","open override var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.accelerometerMeasurementListener"]},{"name":"open override var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","open override var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.accuracyChangedListener"]},{"name":"open override var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","open override var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accuracyChangedListener"]},{"name":"open override var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","open override var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.adjustGravityNorm"]},{"name":"open override var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","open override var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.adjustGravityNorm"]},{"name":"open override var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","open override var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.attitudeAvailableListener"]},{"name":"open override var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","open override var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.attitudeAvailableListener"]},{"name":"open override var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","open override var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeIndirectInterpolationWeight"]},{"name":"open override var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","open override var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeIndirectInterpolationWeight"]},{"name":"open override var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","open override var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeIndirectInterpolationWeight"]},{"name":"open override var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","open override var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeInterpolationValue"]},{"name":"open override var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","open override var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeInterpolationValue"]},{"name":"open override var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","open override var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeInterpolationValue"]},{"name":"open override var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","open override var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeOutlierPanicThreshold"]},{"name":"open override var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","open override var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeOutlierPanicThreshold"]},{"name":"open override var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","open override var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeOutlierPanicThreshold"]},{"name":"open override var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","open override var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudeOutlierThreshold"]},{"name":"open override var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","open override var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudeOutlierThreshold"]},{"name":"open override var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","open override var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudeOutlierThreshold"]},{"name":"open override var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","open override var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.attitudePanicCounterThreshold"]},{"name":"open override var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","open override var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.attitudePanicCounterThreshold"]},{"name":"open override var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","open override var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.attitudePanicCounterThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","open override var baseNoiseLevelAbsoluteThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.baseNoiseLevelAbsoluteThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","open override var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","open override var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.baseNoiseLevelAbsoluteThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","open override var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.baseNoiseLevelAbsoluteThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","open override var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThreshold"]},{"name":"open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","open override var baseNoiseLevelAbsoluteThresholdAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"open override var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/calibration-completed-listener.html","searchKeys":["calibrationCompletedListener","open override var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrationCompletedListener"]},{"name":"open override var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/calibration-completed-listener.html","searchKeys":["calibrationCompletedListener","open override var calibrationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrationCompletedListener"]},{"name":"open override var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/calibration-solving-started-listener.html","searchKeys":["calibrationSolvingStartedListener","open override var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.calibrationSolvingStartedListener"]},{"name":"open override var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/calibration-solving-started-listener.html","searchKeys":["calibrationSolvingStartedListener","open override var calibrationSolvingStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnCalibrationSolvingStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.calibrationSolvingStartedListener"]},{"name":"open override var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","open override var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalDetectedListener"]},{"name":"open override var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","open override var dynamicIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.dynamicIntervalDetectedListener"]},{"name":"open override var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","open override var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.dynamicIntervalSkippedListener"]},{"name":"open override var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","open override var dynamicIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnDynamicIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.dynamicIntervalSkippedListener"]},{"name":"open override var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/error-listener.html","searchKeys":["errorListener","open override var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.errorListener"]},{"name":"open override var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/error-listener.html","searchKeys":["errorListener","open override var errorListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnErrorListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.errorListener"]},{"name":"open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gravityEstimationListener"]},{"name":"open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gravityEstimationListener"]},{"name":"open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gravityEstimationListener"]},{"name":"open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gravityEstimationListener"]},{"name":"open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","open override var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gravityEstimationListener"]},{"name":"open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.gravityMeasurementListener"]},{"name":"open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gravityMeasurementListener"]},{"name":"open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gravityMeasurementListener"]},{"name":"open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","open override var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.gravityMeasurementListener"]},{"name":"open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.gyroscopeMeasurementListener"]},{"name":"open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.gyroscopeMeasurementListener"]},{"name":"open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.gyroscopeMeasurementListener"]},{"name":"open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.gyroscopeMeasurementListener"]},{"name":"open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","open override var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.gyroscopeMeasurementListener"]},{"name":"open override var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","open override var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.indirectInterpolationWeight"]},{"name":"open override var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","open override var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.indirectInterpolationWeight"]},{"name":"open override var initialLocation: Location","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/initial-location.html","searchKeys":["initialLocation","open override var initialLocation: Location","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.initialLocation"]},{"name":"open override var initialLocation: Location","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/initial-location.html","searchKeys":["initialLocation","open override var initialLocation: Location","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.initialLocation"]},{"name":"open override var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/initial-static-samples.html","searchKeys":["initialStaticSamples","open override var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initialStaticSamples"]},{"name":"open override var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initial-static-samples.html","searchKeys":["initialStaticSamples","open override var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialStaticSamples"]},{"name":"open override var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/initial-static-samples.html","searchKeys":["initialStaticSamples","open override var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initialStaticSamples"]},{"name":"open override var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/initial-static-samples.html","searchKeys":["initialStaticSamples","open override var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialStaticSamples"]},{"name":"open override var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/initial-static-samples.html","searchKeys":["initialStaticSamples","open override var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initialStaticSamples"]},{"name":"open override var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","open override var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initializationCompletedListener"]},{"name":"open override var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","open override var initializationCompletedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationCompletedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initializationCompletedListener"]},{"name":"open override var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/initialization-started-listener.html","searchKeys":["initializationStartedListener","open override var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.initializationStartedListener"]},{"name":"open override var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initialization-started-listener.html","searchKeys":["initializationStartedListener","open override var initializationStartedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnInitializationStartedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initializationStartedListener"]},{"name":"open override var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","open override var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.instantaneousNoiseLevelFactor"]},{"name":"open override var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","open override var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.instantaneousNoiseLevelFactor"]},{"name":"open override var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","open override var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.instantaneousNoiseLevelFactor"]},{"name":"open override var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","open override var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.instantaneousNoiseLevelFactor"]},{"name":"open override var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","open override var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.instantaneousNoiseLevelFactor"]},{"name":"open override var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/interpolation-value.html","searchKeys":["interpolationValue","open override var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.interpolationValue"]},{"name":"open override var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/interpolation-value.html","searchKeys":["interpolationValue","open override var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.interpolationValue"]},{"name":"open override var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/location.html","searchKeys":["location","open override var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.location"]},{"name":"open override var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/location.html","searchKeys":["location","open override var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.location"]},{"name":"open override var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/location.html","searchKeys":["location","open override var location: Location?","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.location"]},{"name":"open override var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/location.html","searchKeys":["location","open override var location: Location?","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.location"]},{"name":"open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.magnetometerMeasurementListener"]},{"name":"open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.magnetometerMeasurementListener"]},{"name":"open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.magnetometerMeasurementListener"]},{"name":"open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","open override var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.magnetometerMeasurementListener"]},{"name":"open override var maxDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.maxDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/max-dynamic-samples.html","searchKeys":["maxDynamicSamples","open override var maxDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.maxDynamicSamples"]},{"name":"open override var maxDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.maxDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/max-dynamic-samples.html","searchKeys":["maxDynamicSamples","open override var maxDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.maxDynamicSamples"]},{"name":"open override var maxDynamicSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.maxDynamicSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/max-dynamic-samples.html","searchKeys":["maxDynamicSamples","open override var maxDynamicSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.maxDynamicSamples"]},{"name":"open override var minStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.minStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/min-static-samples.html","searchKeys":["minStaticSamples","open override var minStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.minStaticSamples"]},{"name":"open override var minStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.minStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/min-static-samples.html","searchKeys":["minStaticSamples","open override var minStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.minStaticSamples"]},{"name":"open override var minStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.minStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/min-static-samples.html","searchKeys":["minStaticSamples","open override var minStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.minStaticSamples"]},{"name":"open override var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","open override var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.outlierPanicThreshold"]},{"name":"open override var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","open override var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.outlierPanicThreshold"]},{"name":"open override var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/outlier-threshold.html","searchKeys":["outlierThreshold","open override var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.outlierThreshold"]},{"name":"open override var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/outlier-threshold.html","searchKeys":["outlierThreshold","open override var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.outlierThreshold"]},{"name":"open override var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","open override var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.panicCounterThreshold"]},{"name":"open override var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","open override var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.panicCounterThreshold"]},{"name":"open override var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.readyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/ready-to-solve-calibration-listener.html","searchKeys":["readyToSolveCalibrationListener","open override var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.readyToSolveCalibrationListener"]},{"name":"open override var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.readyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/ready-to-solve-calibration-listener.html","searchKeys":["readyToSolveCalibrationListener","open override var readyToSolveCalibrationListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnReadyToSolveCalibrationListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.readyToSolveCalibrationListener"]},{"name":"open override var requiredMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.requiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/required-measurements.html","searchKeys":["requiredMeasurements","open override var requiredMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.requiredMeasurements"]},{"name":"open override var requiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.requiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/required-measurements.html","searchKeys":["requiredMeasurements","open override var requiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.requiredMeasurements"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.running"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.running"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.running"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.running"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.running"]},{"name":"open override var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/running.html","searchKeys":["running","open override var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.running"]},{"name":"open override var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","open override var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalDetectedListener"]},{"name":"open override var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","open override var staticIntervalDetectedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalDetectedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.staticIntervalDetectedListener"]},{"name":"open override var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","open override var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.staticIntervalSkippedListener"]},{"name":"open override var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","open override var staticIntervalSkippedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStaticIntervalSkippedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.staticIntervalSkippedListener"]},{"name":"open override var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.stoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/stopped-listener.html","searchKeys":["stoppedListener","open override var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<C>?","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.stoppedListener"]},{"name":"open override var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.stoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/stopped-listener.html","searchKeys":["stoppedListener","open override var stoppedListener: StaticIntervalWithMeasurementGeneratorCalibrator.OnStoppedListener<StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2>?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.stoppedListener"]},{"name":"open override var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/threshold-factor.html","searchKeys":["thresholdFactor","open override var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.thresholdFactor"]},{"name":"open override var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/threshold-factor.html","searchKeys":["thresholdFactor","open override var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.thresholdFactor"]},{"name":"open override var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/threshold-factor.html","searchKeys":["thresholdFactor","open override var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.thresholdFactor"]},{"name":"open override var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/threshold-factor.html","searchKeys":["thresholdFactor","open override var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.thresholdFactor"]},{"name":"open override var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/threshold-factor.html","searchKeys":["thresholdFactor","open override var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.thresholdFactor"]},{"name":"open override var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/timestamp.html","searchKeys":["timestamp","open override var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.timestamp"]},{"name":"open override var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/timestamp.html","searchKeys":["timestamp","open override var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.timestamp"]},{"name":"open override var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/timestamp.html","searchKeys":["timestamp","open override var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.timestamp"]},{"name":"open override var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/timestamp.html","searchKeys":["timestamp","open override var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.timestamp"]},{"name":"open override var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","open override var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccurateLevelingEstimator"]},{"name":"open override var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","open override var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccurateLevelingEstimator"]},{"name":"open override var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","open override var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateLevelingEstimator"]},{"name":"open override var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","open override var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateLevelingEstimator"]},{"name":"open override var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","open override var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccurateLevelingEstimator"]},{"name":"open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","open override var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"open override var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","open override var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useIndirectAttitudeInterpolation"]},{"name":"open override var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","open override var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useIndirectAttitudeInterpolation"]},{"name":"open override var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","open override var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useIndirectAttitudeInterpolation"]},{"name":"open override var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","open override var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useIndirectInterpolation"]},{"name":"open override var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","open override var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useIndirectInterpolation"]},{"name":"open override var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","open override var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useLeveledRelativeAttitudeRespectStart"]},{"name":"open override var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","open override var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useLeveledRelativeAttitudeRespectStart"]},{"name":"open override var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","open override var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.useWorldMagneticModel"]},{"name":"open override var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","open override var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.useWorldMagneticModel"]},{"name":"open override var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","open override var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useWorldMagneticModel"]},{"name":"open override var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","open override var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useWorldMagneticModel"]},{"name":"open override var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-base-static-interval-with-measurement-generator-calibrator/window-size.html","searchKeys":["windowSize","open override var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.BaseStaticIntervalWithMeasurementGeneratorCalibrator.windowSize"]},{"name":"open override var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/window-size.html","searchKeys":["windowSize","open override var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.windowSize"]},{"name":"open override var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/window-size.html","searchKeys":["windowSize","open override var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.windowSize"]},{"name":"open override var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/window-size.html","searchKeys":["windowSize","open override var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.windowSize"]},{"name":"open override var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/window-size.html","searchKeys":["windowSize","open override var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.windowSize"]},{"name":"open override var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","open override var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator.worldMagneticModel"]},{"name":"open override var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","open override var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator.worldMagneticModel"]},{"name":"open override var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","open override var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.worldMagneticModel"]},{"name":"open override var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","open override var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.worldMagneticModel"]},{"name":"open val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/sensor-available.html","searchKeys":["sensorAvailable","open val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensorAvailable"]},{"name":"open val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/sensor-available.html","searchKeys":["sensorAvailable","open val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensorAvailable"]},{"name":"open val sensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/sensor-available.html","searchKeys":["sensorAvailable","open val sensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensorAvailable"]},{"name":"open var controlMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.controlMatrix","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/control-matrix.html","searchKeys":["controlMatrix","open var controlMatrix: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.controlMatrix"]},{"name":"open var errorCovPost: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.errorCovPost","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/error-cov-post.html","searchKeys":["errorCovPost","open var errorCovPost: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.errorCovPost"]},{"name":"open var errorCovPre: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.errorCovPre","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/error-cov-pre.html","searchKeys":["errorCovPre","open var errorCovPre: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.errorCovPre"]},{"name":"open var gain: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.gain","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/gain.html","searchKeys":["gain","open var gain: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.gain"]},{"name":"open var measurementMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.measurementMatrix","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/measurement-matrix.html","searchKeys":["measurementMatrix","open var measurementMatrix: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.measurementMatrix"]},{"name":"open var measurementNoiseCov: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.measurementNoiseCov","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/measurement-noise-cov.html","searchKeys":["measurementNoiseCov","open var measurementNoiseCov: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.measurementNoiseCov"]},{"name":"open var processNoiseCov: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.processNoiseCov","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/process-noise-cov.html","searchKeys":["processNoiseCov","open var processNoiseCov: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.processNoiseCov"]},{"name":"open var statePost: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.statePost","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/state-post.html","searchKeys":["statePost","open var statePost: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.statePost"]},{"name":"open var statePre: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.statePre","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/state-pre.html","searchKeys":["statePre","open var statePre: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.statePre"]},{"name":"open var transitionMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.KalmanFilter.transitionMatrix","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/transition-matrix.html","searchKeys":["transitionMatrix","open var transitionMatrix: Matrix","com.irurueta.android.navigation.inertial.KalmanFilter.transitionMatrix"]},{"name":"protected open lateinit override var gravityEstimator: GravityEstimator","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.gravityEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/gravity-estimator.html","searchKeys":["gravityEstimator","protected open lateinit override var gravityEstimator: GravityEstimator","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.gravityEstimator"]},{"name":"protected open lateinit override var gravityEstimator: GravityEstimator","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.gravityEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator/gravity-estimator.html","searchKeys":["gravityEstimator","protected open lateinit override var gravityEstimator: GravityEstimator","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator.gravityEstimator"]},{"name":"val DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD: ExternalAccelerationCovarianceMatrixEstimationMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/-companion/-d-e-f-a-u-l-t_-e-x-t-e-r-n-a-l_-a-c-c-e-l-e-r-a-t-i-o-n_-c-o-v-a-r-i-a-n-c-e_-m-a-t-r-i-x_-e-s-t-i-m-a-t-i-o-n_-m-e-t-h-o-d.html","searchKeys":["DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD","val DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD: ExternalAccelerationCovarianceMatrixEstimationMethod","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.Companion.DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD"]},{"name":"val DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD: ExternalAccelerationCovarianceMatrixEstimationMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/-companion/-d-e-f-a-u-l-t_-e-x-t-e-r-n-a-l_-a-c-c-e-l-e-r-a-t-i-o-n_-c-o-v-a-r-i-a-n-c-e_-m-a-t-r-i-x_-e-s-t-i-m-a-t-i-o-n_-m-e-t-h-o-d.html","searchKeys":["DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD","val DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD: ExternalAccelerationCovarianceMatrixEstimationMethod","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.Companion.DEFAULT_EXTERNAL_ACCELERATION_COVARIANCE_MATRIX_ESTIMATION_METHOD"]},{"name":"val DEFAULT_MEASUREMENT_NOISE_VARIANCE: Double = 0.1","description":"com.irurueta.android.navigation.inertial.KalmanFilter.DEFAULT_MEASUREMENT_NOISE_VARIANCE","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/-d-e-f-a-u-l-t_-m-e-a-s-u-r-e-m-e-n-t_-n-o-i-s-e_-v-a-r-i-a-n-c-e.html","searchKeys":["DEFAULT_MEASUREMENT_NOISE_VARIANCE","val DEFAULT_MEASUREMENT_NOISE_VARIANCE: Double = 0.1","com.irurueta.android.navigation.inertial.KalmanFilter.DEFAULT_MEASUREMENT_NOISE_VARIANCE"]},{"name":"val DEFAULT_METHOD: PhiMatrixMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.DEFAULT_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/-companion/-d-e-f-a-u-l-t_-m-e-t-h-o-d.html","searchKeys":["DEFAULT_METHOD","val DEFAULT_METHOD: PhiMatrixMethod","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.Companion.DEFAULT_METHOD"]},{"name":"val DEFAULT_METHOD: ProcessNoiseCovarianceMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.DEFAULT_METHOD","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/-companion/-d-e-f-a-u-l-t_-m-e-t-h-o-d.html","searchKeys":["DEFAULT_METHOD","val DEFAULT_METHOD: ProcessNoiseCovarianceMethod","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.Companion.DEFAULT_METHOD"]},{"name":"val DEFAULT_PROCESS_NOISE_VARIANCE: Double = 1.0E-6","description":"com.irurueta.android.navigation.inertial.KalmanFilter.DEFAULT_PROCESS_NOISE_VARIANCE","location":"lib/com.irurueta.android.navigation.inertial/-kalman-filter/-d-e-f-a-u-l-t_-p-r-o-c-e-s-s_-n-o-i-s-e_-v-a-r-i-a-n-c-e.html","searchKeys":["DEFAULT_PROCESS_NOISE_VARIANCE","val DEFAULT_PROCESS_NOISE_VARIANCE: Double = 1.0E-6","com.irurueta.android.navigation.inertial.KalmanFilter.DEFAULT_PROCESS_NOISE_VARIANCE"]},{"name":"val DEFAULT_UNIT: SpeedUnit","description":"com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.Companion.DEFAULT_UNIT","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-speed-triad/-companion/-d-e-f-a-u-l-t_-u-n-i-t.html","searchKeys":["DEFAULT_UNIT","val DEFAULT_UNIT: SpeedUnit","com.irurueta.android.navigation.inertial.estimators.pose.SpeedTriad.Companion.DEFAULT_UNIT"]},{"name":"val TYPE_ACCELEROMETER_UNCALIBRATED: Int","description":"com.irurueta.android.navigation.inertial.collectors.Constants.TYPE_ACCELEROMETER_UNCALIBRATED","location":"lib/com.irurueta.android.navigation.inertial.collectors/-constants/-t-y-p-e_-a-c-c-e-l-e-r-o-m-e-t-e-r_-u-n-c-a-l-i-b-r-a-t-e-d.html","searchKeys":["TYPE_ACCELEROMETER_UNCALIBRATED","val TYPE_ACCELEROMETER_UNCALIBRATED: Int","com.irurueta.android.navigation.inertial.collectors.Constants.TYPE_ACCELEROMETER_UNCALIBRATED"]},{"name":"val absoluteAttitudeAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.absoluteAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/absolute-attitude-available.html","searchKeys":["absoluteAttitudeAvailable","val absoluteAttitudeAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.absoluteAttitudeAvailable"]},{"name":"val acceleration: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.acceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/acceleration.html","searchKeys":["acceleration","val acceleration: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.acceleration"]},{"name":"val acceleration: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.acceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/acceleration.html","searchKeys":["acceleration","val acceleration: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.acceleration"]},{"name":"val accelerationState: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerationState","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/acceleration-state.html","searchKeys":["accelerationState","val accelerationState: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerationState"]},{"name":"val accelerationState: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerationState","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/acceleration-state.html","searchKeys":["accelerationState","val accelerationState: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerationState"]},{"name":"val accelerometerAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.accelerometerAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/accelerometer-available.html","searchKeys":["accelerometerAvailable","val accelerometerAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.accelerometerAvailable"]},{"name":"val accelerometerAverageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-average-time-interval.html","searchKeys":["accelerometerAverageTimeInterval","val accelerometerAverageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerAverageTimeInterval"]},{"name":"val accelerometerAverageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-average-time-interval-as-time.html","searchKeys":["accelerometerAverageTimeIntervalAsTime","val accelerometerAverageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerAverageTimeIntervalAsTime"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerAveragingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accelerometerAveragingFilter","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/accelerometer-averaging-filter.html","searchKeys":["accelerometerAveragingFilter","val accelerometerAveragingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accelerometerAveragingFilter"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-capacity.html","searchKeys":["accelerometerCapacity","val accelerometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerCapacity"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-collector-usage.html","searchKeys":["accelerometerCollectorUsage","val accelerometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerCollectorUsage"]},{"name":"val accelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/accelerometer-covariance.html","searchKeys":["accelerometerCovariance","val accelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerometerCovariance"]},{"name":"val accelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.accelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/accelerometer-covariance.html","searchKeys":["accelerometerCovariance","val accelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.accelerometerCovariance"]},{"name":"val accelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/accelerometer-covariance.html","searchKeys":["accelerometerCovariance","val accelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerometerCovariance"]},{"name":"val accelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.accelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/accelerometer-covariance.html","searchKeys":["accelerometerCovariance","val accelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.accelerometerCovariance"]},{"name":"val accelerometerInitialBiasAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-as-triad.html","searchKeys":["accelerometerInitialBiasAsTriad","val accelerometerInitialBiasAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasAsTriad"]},{"name":"val accelerometerInitialBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-as-triad.html","searchKeys":["accelerometerInitialBiasAsTriad","val accelerometerInitialBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasAsTriad"]},{"name":"val accelerometerInitialBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-as-triad.html","searchKeys":["accelerometerInitialBiasAsTriad","val accelerometerInitialBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasAsTriad"]},{"name":"val accelerometerInitialBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-as-triad.html","searchKeys":["accelerometerInitialBiasAsTriad","val accelerometerInitialBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasAsTriad"]},{"name":"val accelerometerInitialBiasX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-x.html","searchKeys":["accelerometerInitialBiasX","val accelerometerInitialBiasX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasX"]},{"name":"val accelerometerInitialBiasXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-x-as-measurement.html","searchKeys":["accelerometerInitialBiasXAsMeasurement","val accelerometerInitialBiasXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasXAsMeasurement"]},{"name":"val accelerometerInitialBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-x-as-measurement.html","searchKeys":["accelerometerInitialBiasXAsMeasurement","val accelerometerInitialBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasXAsMeasurement"]},{"name":"val accelerometerInitialBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-x-as-measurement.html","searchKeys":["accelerometerInitialBiasXAsMeasurement","val accelerometerInitialBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasXAsMeasurement"]},{"name":"val accelerometerInitialBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-x-as-measurement.html","searchKeys":["accelerometerInitialBiasXAsMeasurement","val accelerometerInitialBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasXAsMeasurement"]},{"name":"val accelerometerInitialBiasY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-y.html","searchKeys":["accelerometerInitialBiasY","val accelerometerInitialBiasY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasY"]},{"name":"val accelerometerInitialBiasYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-y-as-measurement.html","searchKeys":["accelerometerInitialBiasYAsMeasurement","val accelerometerInitialBiasYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasYAsMeasurement"]},{"name":"val accelerometerInitialBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-y-as-measurement.html","searchKeys":["accelerometerInitialBiasYAsMeasurement","val accelerometerInitialBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasYAsMeasurement"]},{"name":"val accelerometerInitialBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-y-as-measurement.html","searchKeys":["accelerometerInitialBiasYAsMeasurement","val accelerometerInitialBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasYAsMeasurement"]},{"name":"val accelerometerInitialBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-y-as-measurement.html","searchKeys":["accelerometerInitialBiasYAsMeasurement","val accelerometerInitialBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasYAsMeasurement"]},{"name":"val accelerometerInitialBiasZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-z.html","searchKeys":["accelerometerInitialBiasZ","val accelerometerInitialBiasZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasZ"]},{"name":"val accelerometerInitialBiasZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-bias-z-as-measurement.html","searchKeys":["accelerometerInitialBiasZAsMeasurement","val accelerometerInitialBiasZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialBiasZAsMeasurement"]},{"name":"val accelerometerInitialBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-z-as-measurement.html","searchKeys":["accelerometerInitialBiasZAsMeasurement","val accelerometerInitialBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasZAsMeasurement"]},{"name":"val accelerometerInitialBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-z-as-measurement.html","searchKeys":["accelerometerInitialBiasZAsMeasurement","val accelerometerInitialBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasZAsMeasurement"]},{"name":"val accelerometerInitialBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-z-as-measurement.html","searchKeys":["accelerometerInitialBiasZAsMeasurement","val accelerometerInitialBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasZAsMeasurement"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-interpolator.html","searchKeys":["accelerometerInterpolator","val accelerometerInterpolator: AccelerometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerInterpolator"]},{"name":"val accelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-measurements.html","searchKeys":["accelerometerMeasurements","val accelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerMeasurements"]},{"name":"val accelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-measurements.html","searchKeys":["accelerometerMeasurements","val accelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerMeasurements"]},{"name":"val accelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-measurements.html","searchKeys":["accelerometerMeasurements","val accelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerMeasurements"]},{"name":"val accelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-measurements.html","searchKeys":["accelerometerMeasurements","val accelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerMeasurements"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","val accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.accelerometerNoiseStandardDeviation"]},{"name":"val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-quality-score-mapper.html","searchKeys":["accelerometerQualityScoreMapper","val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerQualityScoreMapper"]},{"name":"val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-quality-score-mapper.html","searchKeys":["accelerometerQualityScoreMapper","val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerQualityScoreMapper"]},{"name":"val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-quality-score-mapper.html","searchKeys":["accelerometerQualityScoreMapper","val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerQualityScoreMapper"]},{"name":"val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-quality-score-mapper.html","searchKeys":["accelerometerQualityScoreMapper","val accelerometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerQualityScoreMapper"]},{"name":"val accelerometerResultUnreliable: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerResultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-result-unreliable.html","searchKeys":["accelerometerResultUnreliable","val accelerometerResultUnreliable: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerResultUnreliable"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-sensor.html","searchKeys":["accelerometerSensor","val accelerometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensor"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-sensor-available.html","searchKeys":["accelerometerSensorAvailable","val accelerometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorAvailable"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-sensor-delay.html","searchKeys":["accelerometerSensorDelay","val accelerometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorDelay"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accelerometerSensorType"]},{"name":"val accelerometerSensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accelerometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/accelerometer-sensor-type.html","searchKeys":["accelerometerSensorType","val accelerometerSensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accelerometerSensorType"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-start-offset.html","searchKeys":["accelerometerStartOffset","val accelerometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerStartOffset"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-start-offset-enabled.html","searchKeys":["accelerometerStartOffsetEnabled","val accelerometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerStartOffsetEnabled"]},{"name":"val accelerometerTimeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-time-interval-standard-deviation.html","searchKeys":["accelerometerTimeIntervalStandardDeviation","val accelerometerTimeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalStandardDeviation"]},{"name":"val accelerometerTimeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-time-interval-standard-deviation-as-time.html","searchKeys":["accelerometerTimeIntervalStandardDeviationAsTime","val accelerometerTimeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalStandardDeviationAsTime"]},{"name":"val accelerometerTimeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accelerometer-time-interval-variance.html","searchKeys":["accelerometerTimeIntervalVariance","val accelerometerTimeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accelerometerTimeIntervalVariance"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accelerometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/accelerometer-usage.html","searchKeys":["accelerometerUsage","val accelerometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.accelerometerUsage"]},{"name":"val accumulatedAvgTriad: T","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-triad.html","searchKeys":["accumulatedAvgTriad","val accumulatedAvgTriad: T","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgTriad"]},{"name":"val accumulatedAvgX: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgX","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-x.html","searchKeys":["accumulatedAvgX","val accumulatedAvgX: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgX"]},{"name":"val accumulatedAvgXAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-x-as-measurement.html","searchKeys":["accumulatedAvgXAsMeasurement","val accumulatedAvgXAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgXAsMeasurement"]},{"name":"val accumulatedAvgY: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgY","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-y.html","searchKeys":["accumulatedAvgY","val accumulatedAvgY: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgY"]},{"name":"val accumulatedAvgYAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-y-as-measurement.html","searchKeys":["accumulatedAvgYAsMeasurement","val accumulatedAvgYAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgYAsMeasurement"]},{"name":"val accumulatedAvgZ: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-z.html","searchKeys":["accumulatedAvgZ","val accumulatedAvgZ: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgZ"]},{"name":"val accumulatedAvgZAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-avg-z-as-measurement.html","searchKeys":["accumulatedAvgZAsMeasurement","val accumulatedAvgZAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedAvgZAsMeasurement"]},{"name":"val accumulatedStdTriad: T","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-triad.html","searchKeys":["accumulatedStdTriad","val accumulatedStdTriad: T","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdTriad"]},{"name":"val accumulatedStdX: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdX","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-x.html","searchKeys":["accumulatedStdX","val accumulatedStdX: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdX"]},{"name":"val accumulatedStdXAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-x-as-measurement.html","searchKeys":["accumulatedStdXAsMeasurement","val accumulatedStdXAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdXAsMeasurement"]},{"name":"val accumulatedStdY: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdY","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-y.html","searchKeys":["accumulatedStdY","val accumulatedStdY: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdY"]},{"name":"val accumulatedStdYAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-y-as-measurement.html","searchKeys":["accumulatedStdYAsMeasurement","val accumulatedStdYAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdYAsMeasurement"]},{"name":"val accumulatedStdZ: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-z.html","searchKeys":["accumulatedStdZ","val accumulatedStdZ: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdZ"]},{"name":"val accumulatedStdZAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accumulated-std-z-as-measurement.html","searchKeys":["accumulatedStdZAsMeasurement","val accumulatedStdZAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accumulatedStdZAsMeasurement"]},{"name":"val activity: AppCompatActivity? = null","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.activity","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/activity.html","searchKeys":["activity","val activity: AppCompatActivity? = null","com.irurueta.android.navigation.inertial.LocationPermissionService.activity"]},{"name":"val attitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.attitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/attitude.html","searchKeys":["attitude","val attitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.attitude"]},{"name":"val attitudeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-capacity.html","searchKeys":["attitudeCapacity","val attitudeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeCapacity"]},{"name":"val attitudeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-capacity.html","searchKeys":["attitudeCapacity","val attitudeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeCapacity"]},{"name":"val attitudeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-capacity.html","searchKeys":["attitudeCapacity","val attitudeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeCapacity"]},{"name":"val attitudeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-collector-usage.html","searchKeys":["attitudeCollectorUsage","val attitudeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeCollectorUsage"]},{"name":"val attitudeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-collector-usage.html","searchKeys":["attitudeCollectorUsage","val attitudeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeCollectorUsage"]},{"name":"val attitudeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-collector-usage.html","searchKeys":["attitudeCollectorUsage","val attitudeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeCollectorUsage"]},{"name":"val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-interpolator.html","searchKeys":["attitudeInterpolator","val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeInterpolator"]},{"name":"val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-interpolator.html","searchKeys":["attitudeInterpolator","val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeInterpolator"]},{"name":"val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-interpolator.html","searchKeys":["attitudeInterpolator","val attitudeInterpolator: AttitudeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeInterpolator"]},{"name":"val attitudeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-sensor.html","searchKeys":["attitudeSensor","val attitudeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensor"]},{"name":"val attitudeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-sensor.html","searchKeys":["attitudeSensor","val attitudeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensor"]},{"name":"val attitudeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-sensor.html","searchKeys":["attitudeSensor","val attitudeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensor"]},{"name":"val attitudeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-sensor-available.html","searchKeys":["attitudeSensorAvailable","val attitudeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorAvailable"]},{"name":"val attitudeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-sensor-available.html","searchKeys":["attitudeSensorAvailable","val attitudeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorAvailable"]},{"name":"val attitudeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-sensor-available.html","searchKeys":["attitudeSensorAvailable","val attitudeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorAvailable"]},{"name":"val attitudeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-sensor-delay.html","searchKeys":["attitudeSensorDelay","val attitudeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorDelay"]},{"name":"val attitudeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-sensor-delay.html","searchKeys":["attitudeSensorDelay","val attitudeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorDelay"]},{"name":"val attitudeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-sensor-delay.html","searchKeys":["attitudeSensorDelay","val attitudeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorDelay"]},{"name":"val attitudeSensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-sensor-type.html","searchKeys":["attitudeSensorType","val attitudeSensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeSensorType"]},{"name":"val attitudeSensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-sensor-type.html","searchKeys":["attitudeSensorType","val attitudeSensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeSensorType"]},{"name":"val attitudeSensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-sensor-type.html","searchKeys":["attitudeSensorType","val attitudeSensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeSensorType"]},{"name":"val attitudeSensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.attitudeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/attitude-sensor-type.html","searchKeys":["attitudeSensorType","val attitudeSensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.attitudeSensorType"]},{"name":"val attitudeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-start-offset.html","searchKeys":["attitudeStartOffset","val attitudeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeStartOffset"]},{"name":"val attitudeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-start-offset.html","searchKeys":["attitudeStartOffset","val attitudeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeStartOffset"]},{"name":"val attitudeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-start-offset.html","searchKeys":["attitudeStartOffset","val attitudeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeStartOffset"]},{"name":"val attitudeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-start-offset-enabled.html","searchKeys":["attitudeStartOffsetEnabled","val attitudeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeStartOffsetEnabled"]},{"name":"val attitudeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-start-offset-enabled.html","searchKeys":["attitudeStartOffsetEnabled","val attitudeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeStartOffsetEnabled"]},{"name":"val attitudeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-start-offset-enabled.html","searchKeys":["attitudeStartOffsetEnabled","val attitudeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeStartOffsetEnabled"]},{"name":"val attitudeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/attitude-usage.html","searchKeys":["attitudeUsage","val attitudeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.attitudeUsage"]},{"name":"val attitudeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/attitude-usage.html","searchKeys":["attitudeUsage","val attitudeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.attitudeUsage"]},{"name":"val attitudeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-sensor-measurement-syncer/attitude-usage.html","searchKeys":["attitudeUsage","val attitudeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSensorMeasurementSyncer.attitudeUsage"]},{"name":"val averageGravityNorm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.averageGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/average-gravity-norm.html","searchKeys":["averageGravityNorm","val averageGravityNorm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.averageGravityNorm"]},{"name":"val averageGravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.averageGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/average-gravity-norm.html","searchKeys":["averageGravityNorm","val averageGravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.averageGravityNorm"]},{"name":"val averageGravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.averageGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/average-gravity-norm.html","searchKeys":["averageGravityNorm","val averageGravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.averageGravityNorm"]},{"name":"val averageGravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.averageGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/average-gravity-norm.html","searchKeys":["averageGravityNorm","val averageGravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.averageGravityNorm"]},{"name":"val averageGravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.averageGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/average-gravity-norm.html","searchKeys":["averageGravityNorm","val averageGravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.averageGravityNorm"]},{"name":"val averageGravityNormAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.averageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/average-gravity-norm-as-measurement.html","searchKeys":["averageGravityNormAsMeasurement","val averageGravityNormAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.averageGravityNormAsMeasurement"]},{"name":"val averageGravityNormAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.averageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/average-gravity-norm-as-measurement.html","searchKeys":["averageGravityNormAsMeasurement","val averageGravityNormAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.averageGravityNormAsMeasurement"]},{"name":"val averageGravityNormAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.averageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/average-gravity-norm-as-measurement.html","searchKeys":["averageGravityNormAsMeasurement","val averageGravityNormAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.averageGravityNormAsMeasurement"]},{"name":"val averageGravityNormAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.averageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/average-gravity-norm-as-measurement.html","searchKeys":["averageGravityNormAsMeasurement","val averageGravityNormAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.averageGravityNormAsMeasurement"]},{"name":"val averageGravityNormAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.averageGravityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/average-gravity-norm-as-measurement.html","searchKeys":["averageGravityNormAsMeasurement","val averageGravityNormAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.averageGravityNormAsMeasurement"]},{"name":"val averageNoisePsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-noise-psd.html","searchKeys":["averageNoisePsd","val averageNoisePsd: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNoisePsd"]},{"name":"val averageNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.averageNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/average-norm.html","searchKeys":["averageNorm","val averageNorm: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.averageNorm"]},{"name":"val averageNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-norm.html","searchKeys":["averageNorm","val averageNorm: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNorm"]},{"name":"val averageNormAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.averageNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/average-norm-as-measurement.html","searchKeys":["averageNormAsMeasurement","val averageNormAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.averageNormAsMeasurement"]},{"name":"val averageNormAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-norm-as-measurement.html","searchKeys":["averageNormAsMeasurement","val averageNormAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageNormAsMeasurement"]},{"name":"val averageStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-standard-deviation.html","searchKeys":["averageStandardDeviation","val averageStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageStandardDeviation"]},{"name":"val averageStandardDeviationAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-standard-deviation-as-measurement.html","searchKeys":["averageStandardDeviationAsMeasurement","val averageStandardDeviationAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageStandardDeviationAsMeasurement"]},{"name":"val averageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","val averageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.averageTimeInterval"]},{"name":"val averageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/average-time-interval.html","searchKeys":["averageTimeInterval","val averageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.averageTimeInterval"]},{"name":"val averageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/average-time-interval.html","searchKeys":["averageTimeInterval","val averageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.averageTimeInterval"]},{"name":"val averageTimeInterval: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.averageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/average-time-interval.html","searchKeys":["averageTimeInterval","val averageTimeInterval: Double?","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.averageTimeInterval"]},{"name":"val averageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.averageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/average-time-interval-as-time.html","searchKeys":["averageTimeIntervalAsTime","val averageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.averageTimeIntervalAsTime"]},{"name":"val averageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.averageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/average-time-interval-as-time.html","searchKeys":["averageTimeIntervalAsTime","val averageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.averageTimeIntervalAsTime"]},{"name":"val averageTimeIntervalAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.averageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/average-time-interval-as-time.html","searchKeys":["averageTimeIntervalAsTime","val averageTimeIntervalAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.averageTimeIntervalAsTime"]},{"name":"val averageTriad: T?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-triad.html","searchKeys":["averageTriad","val averageTriad: T?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageTriad"]},{"name":"val averageX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageX","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-x.html","searchKeys":["averageX","val averageX: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageX"]},{"name":"val averageXAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-x-as-measurement.html","searchKeys":["averageXAsMeasurement","val averageXAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageXAsMeasurement"]},{"name":"val averageY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-y.html","searchKeys":["averageY","val averageY: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageY"]},{"name":"val averageYAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-y-as-measurement.html","searchKeys":["averageYAsMeasurement","val averageYAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageYAsMeasurement"]},{"name":"val averageZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-z.html","searchKeys":["averageZ","val averageZ: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageZ"]},{"name":"val averageZAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/average-z-as-measurement.html","searchKeys":["averageZAsMeasurement","val averageZAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.averageZAsMeasurement"]},{"name":"val averagingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.averagingFilter","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accelerometer-gravity-processor/averaging-filter.html","searchKeys":["averagingFilter","val averagingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.processors.attitude.AccelerometerGravityProcessor.averagingFilter"]},{"name":"val averagingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.averagingFilter","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/averaging-filter.html","searchKeys":["averagingFilter","val averagingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.averagingFilter"]},{"name":"val averagingFilter: AveragingFilter","description":"com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.averagingFilter","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-attitude-relative-pose-processor/averaging-filter.html","searchKeys":["averagingFilter","val averagingFilter: AveragingFilter","com.irurueta.android.navigation.inertial.processors.pose.AttitudeRelativePoseProcessor.averagingFilter"]},{"name":"val ba: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ba","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ba.html","searchKeys":["ba","val ba: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ba"]},{"name":"val ba: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ba","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ba.html","searchKeys":["ba","val ba: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ba"]},{"name":"val ba: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.ba","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/ba.html","searchKeys":["ba","val ba: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.ba"]},{"name":"val backgroundPermissionGranted: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.backgroundPermissionGranted","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/background-permission-granted.html","searchKeys":["backgroundPermissionGranted","val backgroundPermissionGranted: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.backgroundPermissionGranted"]},{"name":"val backgroundPermissionRequested: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.backgroundPermissionRequested","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/background-permission-requested.html","searchKeys":["backgroundPermissionRequested","val backgroundPermissionRequested: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.backgroundPermissionRequested"]},{"name":"val baseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level.html","searchKeys":["baseNoiseLevel","val baseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevel"]},{"name":"val baseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level.html","searchKeys":["baseNoiseLevel","val baseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevel"]},{"name":"val baseNoiseLevelAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level-as-measurement.html","searchKeys":["baseNoiseLevelAsMeasurement","val baseNoiseLevelAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAsMeasurement"]},{"name":"val baseNoiseLevelAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level-as-measurement.html","searchKeys":["baseNoiseLevelAsMeasurement","val baseNoiseLevelAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAsMeasurement"]},{"name":"val baseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level-psd.html","searchKeys":["baseNoiseLevelPsd","val baseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelPsd"]},{"name":"val baseNoiseLevelPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level-psd.html","searchKeys":["baseNoiseLevelPsd","val baseNoiseLevelPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelPsd"]},{"name":"val baseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level-root-psd.html","searchKeys":["baseNoiseLevelRootPsd","val baseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelRootPsd"]},{"name":"val baseNoiseLevelRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level-root-psd.html","searchKeys":["baseNoiseLevelRootPsd","val baseNoiseLevelRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelRootPsd"]},{"name":"val bg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.bg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/bg.html","searchKeys":["bg","val bg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.bg"]},{"name":"val bg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/bg.html","searchKeys":["bg","val bg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bg"]},{"name":"val bg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.bg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/bg.html","searchKeys":["bg","val bg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.bg"]},{"name":"val bodyAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bodyAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/body-attitude.html","searchKeys":["bodyAttitude","val bodyAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bodyAttitude"]},{"name":"val bodyExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.bodyExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/body-external-acceleration.html","searchKeys":["bodyExternalAcceleration","val bodyExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.bodyExternalAcceleration"]},{"name":"val bodyExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bodyExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/body-external-acceleration.html","searchKeys":["bodyExternalAcceleration","val bodyExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.bodyExternalAcceleration"]},{"name":"val bodyQ: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.bodyQ","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/body-q.html","searchKeys":["bodyQ","val bodyQ: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.bodyQ"]},{"name":"val bufferedMeasurements: List<M>","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.bufferedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/buffered-measurements.html","searchKeys":["bufferedMeasurements","val bufferedMeasurements: List<M>","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.bufferedMeasurements"]},{"name":"val cancelled: Boolean = true","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.cancelled","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/cancelled.html","searchKeys":["cancelled","val cancelled: Boolean = true","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.cancelled"]},{"name":"val capacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.capacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/capacity.html","searchKeys":["capacity","val capacity: Int","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.capacity"]},{"name":"val coarsePermissionGranted: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.coarsePermissionGranted","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/coarse-permission-granted.html","searchKeys":["coarsePermissionGranted","val coarsePermissionGranted: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.coarsePermissionGranted"]},{"name":"val coarsePermissionRequested: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.coarsePermissionRequested","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/coarse-permission-requested.html","searchKeys":["coarsePermissionRequested","val coarsePermissionRequested: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.coarsePermissionRequested"]},{"name":"val computeAccelerometerCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-accelerometer-covariance.html","searchKeys":["computeAccelerometerCovariance","val computeAccelerometerCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeAccelerometerCovariance"]},{"name":"val computeAccelerometerCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-accelerometer-covariance.html","searchKeys":["computeAccelerometerCovariance","val computeAccelerometerCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeAccelerometerCovariance"]},{"name":"val computeAccelerometerCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-accelerometer-covariance.html","searchKeys":["computeAccelerometerCovariance","val computeAccelerometerCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeAccelerometerCovariance"]},{"name":"val computeAccelerometerCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-accelerometer-covariance.html","searchKeys":["computeAccelerometerCovariance","val computeAccelerometerCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeAccelerometerCovariance"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeCovariances"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeCovariances"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeCovariances"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeCovariances"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeCovariances"]},{"name":"val computeCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-covariances.html","searchKeys":["computeCovariances","val computeCovariances: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeCovariances"]},{"name":"val computeEcefAccelerationCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEcefAccelerationCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-ecef-acceleration-covariance.html","searchKeys":["computeEcefAccelerationCovariance","val computeEcefAccelerationCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEcefAccelerationCovariance"]},{"name":"val computeEcefAttitudeCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEcefAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-ecef-attitude-covariance.html","searchKeys":["computeEcefAttitudeCovariance","val computeEcefAttitudeCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEcefAttitudeCovariance"]},{"name":"val computeEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-euler-angles.html","searchKeys":["computeEulerAngles","val computeEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeEulerAngles"]},{"name":"val computeEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-euler-angles.html","searchKeys":["computeEulerAngles","val computeEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeEulerAngles"]},{"name":"val computeEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-euler-angles.html","searchKeys":["computeEulerAngles","val computeEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEulerAngles"]},{"name":"val computeEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-euler-angles.html","searchKeys":["computeEulerAngles","val computeEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeEulerAngles"]},{"name":"val computeEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-euler-angles.html","searchKeys":["computeEulerAngles","val computeEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeEulerAngles"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeEulerAnglesCovariance"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeEulerAnglesCovariance"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeEulerAnglesCovariance"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeEulerAnglesCovariance"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeEulerAnglesCovariance"]},{"name":"val computeEulerAnglesCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","val computeEulerAnglesCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeEulerAnglesCovariance"]},{"name":"val computeNedRotationAxisCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeNedRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/compute-ned-rotation-axis-covariance.html","searchKeys":["computeNedRotationAxisCovariance","val computeNedRotationAxisCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.computeNedRotationAxisCovariance"]},{"name":"val computeQuaternionCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-quaternion-covariance.html","searchKeys":["computeQuaternionCovariance","val computeQuaternionCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeQuaternionCovariance"]},{"name":"val computeQuaternionCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-quaternion-covariance.html","searchKeys":["computeQuaternionCovariance","val computeQuaternionCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeQuaternionCovariance"]},{"name":"val computeQuaternionCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-quaternion-covariance.html","searchKeys":["computeQuaternionCovariance","val computeQuaternionCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeQuaternionCovariance"]},{"name":"val computeQuaternionCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-quaternion-covariance.html","searchKeys":["computeQuaternionCovariance","val computeQuaternionCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeQuaternionCovariance"]},{"name":"val computeRotationAxisCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/compute-rotation-axis-covariance.html","searchKeys":["computeRotationAxisCovariance","val computeRotationAxisCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.computeRotationAxisCovariance"]},{"name":"val computeRotationAxisCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/compute-rotation-axis-covariance.html","searchKeys":["computeRotationAxisCovariance","val computeRotationAxisCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.computeRotationAxisCovariance"]},{"name":"val computeRotationAxisCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/compute-rotation-axis-covariance.html","searchKeys":["computeRotationAxisCovariance","val computeRotationAxisCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.computeRotationAxisCovariance"]},{"name":"val computeRotationAxisCovariance: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/compute-rotation-axis-covariance.html","searchKeys":["computeRotationAxisCovariance","val computeRotationAxisCovariance: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.computeRotationAxisCovariance"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.context","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.BatteryTemperatureService.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.context","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.LocationPermissionService.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.LocationService.context","location":"lib/com.irurueta.android.navigation.inertial/-location-service/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.LocationService.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.context","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.SensorAvailabilityService.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.context","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.context","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.context","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.collectors.SensorCollector.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.context","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.context","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.context"]},{"name":"val context: Context","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.context","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/context.html","searchKeys":["context","val context: Context","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.context"]},{"name":"val conversionRotation: Quaternion","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotation","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/conversion-rotation.html","searchKeys":["conversionRotation","val conversionRotation: Quaternion","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotation"]},{"name":"val conversionRotationMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotationMatrix","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/conversion-rotation-matrix.html","searchKeys":["conversionRotationMatrix","val conversionRotationMatrix: Matrix","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.conversionRotationMatrix"]},{"name":"val copyIfNotInitialized: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.copyIfNotInitialized","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-linear-sensor-measurement-interpolator/copy-if-not-initialized.html","searchKeys":["copyIfNotInitialized","val copyIfNotInitialized: Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.LinearSensorMeasurementInterpolator.copyIfNotInitialized"]},{"name":"val copyIfNotInitialized: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.copyIfNotInitialized","location":"lib/com.irurueta.android.navigation.inertial.collectors.interpolators/-quadratic-sensor-measurement-interpolator/copy-if-not-initialized.html","searchKeys":["copyIfNotInitialized","val copyIfNotInitialized: Boolean","com.irurueta.android.navigation.inertial.collectors.interpolators.QuadraticSensorMeasurementInterpolator.copyIfNotInitialized"]},{"name":"val currentBatteryTemperature: Temperature?","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.currentBatteryTemperature","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/current-battery-temperature.html","searchKeys":["currentBatteryTemperature","val currentBatteryTemperature: Temperature?","com.irurueta.android.navigation.inertial.BatteryTemperatureService.currentBatteryTemperature"]},{"name":"val currentBatteryTemperatureCelsius: Float?","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.currentBatteryTemperatureCelsius","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/current-battery-temperature-celsius.html","searchKeys":["currentBatteryTemperatureCelsius","val currentBatteryTemperatureCelsius: Float?","com.irurueta.android.navigation.inertial.BatteryTemperatureService.currentBatteryTemperatureCelsius"]},{"name":"val currentEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.currentEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/current-ecef-frame.html","searchKeys":["currentEcefFrame","val currentEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.currentEcefFrame"]},{"name":"val currentEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.currentEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/current-ecef-frame.html","searchKeys":["currentEcefFrame","val currentEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.currentEcefFrame"]},{"name":"val currentNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.currentNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/current-ned-frame.html","searchKeys":["currentNedFrame","val currentNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.currentNedFrame"]},{"name":"val currentNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.currentNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/current-ned-frame.html","searchKeys":["currentNedFrame","val currentNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.currentNedFrame"]},{"name":"val ecefAcceleration: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ecef-acceleration.html","searchKeys":["ecefAcceleration","val ecefAcceleration: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAcceleration"]},{"name":"val ecefAccelerationCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAccelerationCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ecef-acceleration-covariance.html","searchKeys":["ecefAccelerationCovariance","val ecefAccelerationCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAccelerationCovariance"]},{"name":"val ecefAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ecef-attitude.html","searchKeys":["ecefAttitude","val ecefAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAttitude"]},{"name":"val ecefAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ecefAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ecef-attitude.html","searchKeys":["ecefAttitude","val ecefAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ecefAttitude"]},{"name":"val ecefAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ecefAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ecef-attitude.html","searchKeys":["ecefAttitude","val ecefAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ecefAttitude"]},{"name":"val ecefAttitudeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ecef-attitude-covariance.html","searchKeys":["ecefAttitudeCovariance","val ecefAttitudeCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.ecefAttitudeCovariance"]},{"name":"val ecefExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ecefExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ecef-external-acceleration.html","searchKeys":["ecefExternalAcceleration","val ecefExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.ecefExternalAcceleration"]},{"name":"val ecefExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ecefExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ecef-external-acceleration.html","searchKeys":["ecefExternalAcceleration","val ecefExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.ecefExternalAcceleration"]},{"name":"val elapsedTime: Time","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.elapsedTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/elapsed-time.html","searchKeys":["elapsedTime","val elapsedTime: Time","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.elapsedTime"]},{"name":"val elapsedTimeNanos: Long","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.elapsedTimeNanos","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/elapsed-time-nanos.html","searchKeys":["elapsedTimeNanos","val elapsedTimeNanos: Long","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.elapsedTimeNanos"]},{"name":"val entries: EnumEntries<AccelerometerSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AccelerometerSensorType>","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.entries"]},{"name":"val entries: EnumEntries<AttitudeSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AttitudeSensorType>","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.entries"]},{"name":"val entries: EnumEntries<CalibratorErrorReason>","description":"com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.entries","location":"lib/com.irurueta.android.navigation.inertial.calibration/-calibrator-error-reason/entries.html","searchKeys":["entries","val entries: EnumEntries<CalibratorErrorReason>","com.irurueta.android.navigation.inertial.calibration.CalibratorErrorReason.entries"]},{"name":"val entries: EnumEntries<ErrorReason>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.entries","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-error-reason/entries.html","searchKeys":["entries","val entries: EnumEntries<ErrorReason>","com.irurueta.android.navigation.inertial.calibration.intervals.ErrorReason.entries"]},{"name":"val entries: EnumEntries<ExternalAccelerationCovarianceMatrixEstimationMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.entries","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimation-method/entries.html","searchKeys":["entries","val entries: EnumEntries<ExternalAccelerationCovarianceMatrixEstimationMethod>","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimationMethod.entries"]},{"name":"val entries: EnumEntries<GyroscopeSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<GyroscopeSensorType>","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.entries"]},{"name":"val entries: EnumEntries<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType>","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.entries","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/-quaternion-step-integrator-type/entries.html","searchKeys":["entries","val entries: EnumEntries<KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType>","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.QuaternionStepIntegratorType.entries"]},{"name":"val entries: EnumEntries<LocationService.GooglePlayStatus>","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.entries","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/entries.html","searchKeys":["entries","val entries: EnumEntries<LocationService.GooglePlayStatus>","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.entries"]},{"name":"val entries: EnumEntries<MagnetometerSensorType>","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<MagnetometerSensorType>","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.entries"]},{"name":"val entries: EnumEntries<PhiMatrixMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.entries","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-method/entries.html","searchKeys":["entries","val entries: EnumEntries<PhiMatrixMethod>","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixMethod.entries"]},{"name":"val entries: EnumEntries<ProcessNoiseCovarianceMethod>","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.entries","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-method/entries.html","searchKeys":["entries","val entries: EnumEntries<ProcessNoiseCovarianceMethod>","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceMethod.entries"]},{"name":"val entries: EnumEntries<QuaternionStepIntegratorType>","description":"com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.entries","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-quaternion-step-integrator-type/entries.html","searchKeys":["entries","val entries: EnumEntries<QuaternionStepIntegratorType>","com.irurueta.android.navigation.inertial.processors.attitude.QuaternionStepIntegratorType.entries"]},{"name":"val entries: EnumEntries<SensorAccuracy>","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/entries.html","searchKeys":["entries","val entries: EnumEntries<SensorAccuracy>","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.entries"]},{"name":"val entries: EnumEntries<SensorDelay>","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/entries.html","searchKeys":["entries","val entries: EnumEntries<SensorDelay>","com.irurueta.android.navigation.inertial.collectors.SensorDelay.entries"]},{"name":"val entries: EnumEntries<SensorType>","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.entries","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<SensorType>","com.irurueta.android.navigation.inertial.collectors.SensorType.entries"]},{"name":"val entries: EnumEntries<Status>","description":"com.irurueta.android.navigation.inertial.calibration.intervals.Status.entries","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-status/entries.html","searchKeys":["entries","val entries: EnumEntries<Status>","com.irurueta.android.navigation.inertial.calibration.intervals.Status.entries"]},{"name":"val entries: EnumEntries<StopMode>","description":"com.irurueta.android.navigation.inertial.calibration.noise.StopMode.entries","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-stop-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<StopMode>","com.irurueta.android.navigation.inertial.calibration.noise.StopMode.entries"]},{"name":"val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateCoordinateTransformation"]},{"name":"val estimateCoordinateTransformation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.estimateCoordinateTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/estimate-coordinate-transformation.html","searchKeys":["estimateCoordinateTransformation","val estimateCoordinateTransformation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.estimateCoordinateTransformation"]},{"name":"val estimateCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateCovariances","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/estimate-covariances.html","searchKeys":["estimateCovariances","val estimateCovariances: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateCovariances"]},{"name":"val estimateCovariances: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateCovariances","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/estimate-covariances.html","searchKeys":["estimateCovariances","val estimateCovariances: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateCovariances"]},{"name":"val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.estimateEulerAngles"]},{"name":"val estimateEulerAngles: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.estimateEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/estimate-euler-angles.html","searchKeys":["estimateEulerAngles","val estimateEulerAngles: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.estimateEulerAngles"]},{"name":"val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.estimatePoseTransformation"]},{"name":"val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.estimatePoseTransformation"]},{"name":"val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.estimatePoseTransformation"]},{"name":"val estimatePoseTransformation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.estimatePoseTransformation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/estimate-pose-transformation.html","searchKeys":["estimatePoseTransformation","val estimatePoseTransformation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.estimatePoseTransformation"]},{"name":"val estimatedAccelerometerBiasAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-as-triad.html","searchKeys":["estimatedAccelerometerBiasAsTriad","val estimatedAccelerometerBiasAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasAsTriad"]},{"name":"val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-as-triad.html","searchKeys":["estimatedAccelerometerBiasAsTriad","val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasAsTriad"]},{"name":"val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-as-triad.html","searchKeys":["estimatedAccelerometerBiasAsTriad","val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasAsTriad"]},{"name":"val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-as-triad.html","searchKeys":["estimatedAccelerometerBiasAsTriad","val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasAsTriad"]},{"name":"val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-as-triad.html","searchKeys":["estimatedAccelerometerBiasAsTriad","val estimatedAccelerometerBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasAsTriad"]},{"name":"val estimatedAccelerometerBiasStandardDeviationNorm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-standard-deviation-norm.html","searchKeys":["estimatedAccelerometerBiasStandardDeviationNorm","val estimatedAccelerometerBiasStandardDeviationNorm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasStandardDeviationNorm"]},{"name":"val estimatedAccelerometerBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-standard-deviation-norm.html","searchKeys":["estimatedAccelerometerBiasStandardDeviationNorm","val estimatedAccelerometerBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasStandardDeviationNorm"]},{"name":"val estimatedAccelerometerBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-standard-deviation-norm.html","searchKeys":["estimatedAccelerometerBiasStandardDeviationNorm","val estimatedAccelerometerBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasStandardDeviationNorm"]},{"name":"val estimatedAccelerometerBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-standard-deviation-norm.html","searchKeys":["estimatedAccelerometerBiasStandardDeviationNorm","val estimatedAccelerometerBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasStandardDeviationNorm"]},{"name":"val estimatedAccelerometerBiasX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-x.html","searchKeys":["estimatedAccelerometerBiasX","val estimatedAccelerometerBiasX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasX"]},{"name":"val estimatedAccelerometerBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-x.html","searchKeys":["estimatedAccelerometerBiasX","val estimatedAccelerometerBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasX"]},{"name":"val estimatedAccelerometerBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-x.html","searchKeys":["estimatedAccelerometerBiasX","val estimatedAccelerometerBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasX"]},{"name":"val estimatedAccelerometerBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-x.html","searchKeys":["estimatedAccelerometerBiasX","val estimatedAccelerometerBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasX"]},{"name":"val estimatedAccelerometerBiasXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["estimatedAccelerometerBiasXAsMeasurement","val estimatedAccelerometerBiasXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasXAsMeasurement"]},{"name":"val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["estimatedAccelerometerBiasXAsMeasurement","val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasXAsMeasurement"]},{"name":"val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["estimatedAccelerometerBiasXAsMeasurement","val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasXAsMeasurement"]},{"name":"val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["estimatedAccelerometerBiasXAsMeasurement","val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasXAsMeasurement"]},{"name":"val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-x-as-measurement.html","searchKeys":["estimatedAccelerometerBiasXAsMeasurement","val estimatedAccelerometerBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasXAsMeasurement"]},{"name":"val estimatedAccelerometerBiasY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-y.html","searchKeys":["estimatedAccelerometerBiasY","val estimatedAccelerometerBiasY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasY"]},{"name":"val estimatedAccelerometerBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-y.html","searchKeys":["estimatedAccelerometerBiasY","val estimatedAccelerometerBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasY"]},{"name":"val estimatedAccelerometerBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-y.html","searchKeys":["estimatedAccelerometerBiasY","val estimatedAccelerometerBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasY"]},{"name":"val estimatedAccelerometerBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-y.html","searchKeys":["estimatedAccelerometerBiasY","val estimatedAccelerometerBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasY"]},{"name":"val estimatedAccelerometerBiasYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["estimatedAccelerometerBiasYAsMeasurement","val estimatedAccelerometerBiasYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasYAsMeasurement"]},{"name":"val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["estimatedAccelerometerBiasYAsMeasurement","val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasYAsMeasurement"]},{"name":"val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["estimatedAccelerometerBiasYAsMeasurement","val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasYAsMeasurement"]},{"name":"val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["estimatedAccelerometerBiasYAsMeasurement","val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasYAsMeasurement"]},{"name":"val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-y-as-measurement.html","searchKeys":["estimatedAccelerometerBiasYAsMeasurement","val estimatedAccelerometerBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasYAsMeasurement"]},{"name":"val estimatedAccelerometerBiasZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-z.html","searchKeys":["estimatedAccelerometerBiasZ","val estimatedAccelerometerBiasZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasZ"]},{"name":"val estimatedAccelerometerBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-z.html","searchKeys":["estimatedAccelerometerBiasZ","val estimatedAccelerometerBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasZ"]},{"name":"val estimatedAccelerometerBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-z.html","searchKeys":["estimatedAccelerometerBiasZ","val estimatedAccelerometerBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasZ"]},{"name":"val estimatedAccelerometerBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-z.html","searchKeys":["estimatedAccelerometerBiasZ","val estimatedAccelerometerBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasZ"]},{"name":"val estimatedAccelerometerBiasZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["estimatedAccelerometerBiasZAsMeasurement","val estimatedAccelerometerBiasZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerBiasZAsMeasurement"]},{"name":"val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["estimatedAccelerometerBiasZAsMeasurement","val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerBiasZAsMeasurement"]},{"name":"val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["estimatedAccelerometerBiasZAsMeasurement","val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerBiasZAsMeasurement"]},{"name":"val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["estimatedAccelerometerBiasZAsMeasurement","val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerBiasZAsMeasurement"]},{"name":"val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-z-as-measurement.html","searchKeys":["estimatedAccelerometerBiasZAsMeasurement","val estimatedAccelerometerBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasZAsMeasurement"]},{"name":"val estimatedAccelerometerChiSq: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-chi-sq.html","searchKeys":["estimatedAccelerometerChiSq","val estimatedAccelerometerChiSq: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerChiSq"]},{"name":"val estimatedAccelerometerChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-chi-sq.html","searchKeys":["estimatedAccelerometerChiSq","val estimatedAccelerometerChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerChiSq"]},{"name":"val estimatedAccelerometerChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-chi-sq.html","searchKeys":["estimatedAccelerometerChiSq","val estimatedAccelerometerChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerChiSq"]},{"name":"val estimatedAccelerometerChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-chi-sq.html","searchKeys":["estimatedAccelerometerChiSq","val estimatedAccelerometerChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerChiSq"]},{"name":"val estimatedAccelerometerCovariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-covariance.html","searchKeys":["estimatedAccelerometerCovariance","val estimatedAccelerometerCovariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerCovariance"]},{"name":"val estimatedAccelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-covariance.html","searchKeys":["estimatedAccelerometerCovariance","val estimatedAccelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerCovariance"]},{"name":"val estimatedAccelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-covariance.html","searchKeys":["estimatedAccelerometerCovariance","val estimatedAccelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerCovariance"]},{"name":"val estimatedAccelerometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-covariance.html","searchKeys":["estimatedAccelerometerCovariance","val estimatedAccelerometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerCovariance"]},{"name":"val estimatedAccelerometerMa: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-ma.html","searchKeys":["estimatedAccelerometerMa","val estimatedAccelerometerMa: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMa"]},{"name":"val estimatedAccelerometerMa: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-ma.html","searchKeys":["estimatedAccelerometerMa","val estimatedAccelerometerMa: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMa"]},{"name":"val estimatedAccelerometerMa: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-ma.html","searchKeys":["estimatedAccelerometerMa","val estimatedAccelerometerMa: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMa"]},{"name":"val estimatedAccelerometerMa: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-ma.html","searchKeys":["estimatedAccelerometerMa","val estimatedAccelerometerMa: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMa"]},{"name":"val estimatedAccelerometerMse: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-mse.html","searchKeys":["estimatedAccelerometerMse","val estimatedAccelerometerMse: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMse"]},{"name":"val estimatedAccelerometerMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-mse.html","searchKeys":["estimatedAccelerometerMse","val estimatedAccelerometerMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMse"]},{"name":"val estimatedAccelerometerMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-mse.html","searchKeys":["estimatedAccelerometerMse","val estimatedAccelerometerMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMse"]},{"name":"val estimatedAccelerometerMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-mse.html","searchKeys":["estimatedAccelerometerMse","val estimatedAccelerometerMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMse"]},{"name":"val estimatedAccelerometerMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-mxy.html","searchKeys":["estimatedAccelerometerMxy","val estimatedAccelerometerMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMxy"]},{"name":"val estimatedAccelerometerMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-mxy.html","searchKeys":["estimatedAccelerometerMxy","val estimatedAccelerometerMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMxy"]},{"name":"val estimatedAccelerometerMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-mxy.html","searchKeys":["estimatedAccelerometerMxy","val estimatedAccelerometerMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMxy"]},{"name":"val estimatedAccelerometerMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-mxy.html","searchKeys":["estimatedAccelerometerMxy","val estimatedAccelerometerMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMxy"]},{"name":"val estimatedAccelerometerMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-mxz.html","searchKeys":["estimatedAccelerometerMxz","val estimatedAccelerometerMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMxz"]},{"name":"val estimatedAccelerometerMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-mxz.html","searchKeys":["estimatedAccelerometerMxz","val estimatedAccelerometerMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMxz"]},{"name":"val estimatedAccelerometerMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-mxz.html","searchKeys":["estimatedAccelerometerMxz","val estimatedAccelerometerMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMxz"]},{"name":"val estimatedAccelerometerMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-mxz.html","searchKeys":["estimatedAccelerometerMxz","val estimatedAccelerometerMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMxz"]},{"name":"val estimatedAccelerometerMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-myx.html","searchKeys":["estimatedAccelerometerMyx","val estimatedAccelerometerMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMyx"]},{"name":"val estimatedAccelerometerMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-myx.html","searchKeys":["estimatedAccelerometerMyx","val estimatedAccelerometerMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMyx"]},{"name":"val estimatedAccelerometerMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-myx.html","searchKeys":["estimatedAccelerometerMyx","val estimatedAccelerometerMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMyx"]},{"name":"val estimatedAccelerometerMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-myx.html","searchKeys":["estimatedAccelerometerMyx","val estimatedAccelerometerMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMyx"]},{"name":"val estimatedAccelerometerMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-myz.html","searchKeys":["estimatedAccelerometerMyz","val estimatedAccelerometerMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMyz"]},{"name":"val estimatedAccelerometerMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-myz.html","searchKeys":["estimatedAccelerometerMyz","val estimatedAccelerometerMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMyz"]},{"name":"val estimatedAccelerometerMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-myz.html","searchKeys":["estimatedAccelerometerMyz","val estimatedAccelerometerMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMyz"]},{"name":"val estimatedAccelerometerMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-myz.html","searchKeys":["estimatedAccelerometerMyz","val estimatedAccelerometerMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMyz"]},{"name":"val estimatedAccelerometerMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-mzx.html","searchKeys":["estimatedAccelerometerMzx","val estimatedAccelerometerMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMzx"]},{"name":"val estimatedAccelerometerMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-mzx.html","searchKeys":["estimatedAccelerometerMzx","val estimatedAccelerometerMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMzx"]},{"name":"val estimatedAccelerometerMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-mzx.html","searchKeys":["estimatedAccelerometerMzx","val estimatedAccelerometerMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMzx"]},{"name":"val estimatedAccelerometerMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-mzx.html","searchKeys":["estimatedAccelerometerMzx","val estimatedAccelerometerMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMzx"]},{"name":"val estimatedAccelerometerMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-mzy.html","searchKeys":["estimatedAccelerometerMzy","val estimatedAccelerometerMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerMzy"]},{"name":"val estimatedAccelerometerMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-mzy.html","searchKeys":["estimatedAccelerometerMzy","val estimatedAccelerometerMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerMzy"]},{"name":"val estimatedAccelerometerMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-mzy.html","searchKeys":["estimatedAccelerometerMzy","val estimatedAccelerometerMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerMzy"]},{"name":"val estimatedAccelerometerMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-mzy.html","searchKeys":["estimatedAccelerometerMzy","val estimatedAccelerometerMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerMzy"]},{"name":"val estimatedAccelerometerSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-sx.html","searchKeys":["estimatedAccelerometerSx","val estimatedAccelerometerSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSx"]},{"name":"val estimatedAccelerometerSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-sx.html","searchKeys":["estimatedAccelerometerSx","val estimatedAccelerometerSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSx"]},{"name":"val estimatedAccelerometerSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-sx.html","searchKeys":["estimatedAccelerometerSx","val estimatedAccelerometerSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSx"]},{"name":"val estimatedAccelerometerSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-sx.html","searchKeys":["estimatedAccelerometerSx","val estimatedAccelerometerSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSx"]},{"name":"val estimatedAccelerometerSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-sy.html","searchKeys":["estimatedAccelerometerSy","val estimatedAccelerometerSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSy"]},{"name":"val estimatedAccelerometerSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-sy.html","searchKeys":["estimatedAccelerometerSy","val estimatedAccelerometerSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSy"]},{"name":"val estimatedAccelerometerSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-sy.html","searchKeys":["estimatedAccelerometerSy","val estimatedAccelerometerSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSy"]},{"name":"val estimatedAccelerometerSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-sy.html","searchKeys":["estimatedAccelerometerSy","val estimatedAccelerometerSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSy"]},{"name":"val estimatedAccelerometerSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-accelerometer-sz.html","searchKeys":["estimatedAccelerometerSz","val estimatedAccelerometerSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedAccelerometerSz"]},{"name":"val estimatedAccelerometerSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-accelerometer-sz.html","searchKeys":["estimatedAccelerometerSz","val estimatedAccelerometerSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedAccelerometerSz"]},{"name":"val estimatedAccelerometerSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/estimated-accelerometer-sz.html","searchKeys":["estimatedAccelerometerSz","val estimatedAccelerometerSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.estimatedAccelerometerSz"]},{"name":"val estimatedAccelerometerSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-accelerometer-sz.html","searchKeys":["estimatedAccelerometerSz","val estimatedAccelerometerSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedAccelerometerSz"]},{"name":"val estimatedBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-as-triad.html","searchKeys":["estimatedBiasAsTriad","val estimatedBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasAsTriad"]},{"name":"val estimatedBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-standard-deviation-norm.html","searchKeys":["estimatedBiasStandardDeviationNorm","val estimatedBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasStandardDeviationNorm"]},{"name":"val estimatedBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-x.html","searchKeys":["estimatedBiasX","val estimatedBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasX"]},{"name":"val estimatedBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-x-as-measurement.html","searchKeys":["estimatedBiasXAsMeasurement","val estimatedBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasXAsMeasurement"]},{"name":"val estimatedBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-y.html","searchKeys":["estimatedBiasY","val estimatedBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasY"]},{"name":"val estimatedBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-y-as-measurement.html","searchKeys":["estimatedBiasYAsMeasurement","val estimatedBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasYAsMeasurement"]},{"name":"val estimatedBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-z.html","searchKeys":["estimatedBiasZ","val estimatedBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasZ"]},{"name":"val estimatedBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-bias-z-as-measurement.html","searchKeys":["estimatedBiasZAsMeasurement","val estimatedBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedBiasZAsMeasurement"]},{"name":"val estimatedGyroscopeBiasAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-as-triad.html","searchKeys":["estimatedGyroscopeBiasAsTriad","val estimatedGyroscopeBiasAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasAsTriad"]},{"name":"val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-as-triad.html","searchKeys":["estimatedGyroscopeBiasAsTriad","val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasAsTriad"]},{"name":"val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-as-triad.html","searchKeys":["estimatedGyroscopeBiasAsTriad","val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasAsTriad"]},{"name":"val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-as-triad.html","searchKeys":["estimatedGyroscopeBiasAsTriad","val estimatedGyroscopeBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasAsTriad"]},{"name":"val estimatedGyroscopeBiasStandardDeviationNorm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-standard-deviation-norm.html","searchKeys":["estimatedGyroscopeBiasStandardDeviationNorm","val estimatedGyroscopeBiasStandardDeviationNorm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasStandardDeviationNorm"]},{"name":"val estimatedGyroscopeBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-standard-deviation-norm.html","searchKeys":["estimatedGyroscopeBiasStandardDeviationNorm","val estimatedGyroscopeBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasStandardDeviationNorm"]},{"name":"val estimatedGyroscopeBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-standard-deviation-norm.html","searchKeys":["estimatedGyroscopeBiasStandardDeviationNorm","val estimatedGyroscopeBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasStandardDeviationNorm"]},{"name":"val estimatedGyroscopeBiasStandardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasStandardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-standard-deviation-norm.html","searchKeys":["estimatedGyroscopeBiasStandardDeviationNorm","val estimatedGyroscopeBiasStandardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasStandardDeviationNorm"]},{"name":"val estimatedGyroscopeBiasX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-x.html","searchKeys":["estimatedGyroscopeBiasX","val estimatedGyroscopeBiasX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasX"]},{"name":"val estimatedGyroscopeBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-x.html","searchKeys":["estimatedGyroscopeBiasX","val estimatedGyroscopeBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasX"]},{"name":"val estimatedGyroscopeBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-x.html","searchKeys":["estimatedGyroscopeBiasX","val estimatedGyroscopeBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasX"]},{"name":"val estimatedGyroscopeBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-x.html","searchKeys":["estimatedGyroscopeBiasX","val estimatedGyroscopeBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasX"]},{"name":"val estimatedGyroscopeBiasXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["estimatedGyroscopeBiasXAsMeasurement","val estimatedGyroscopeBiasXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasXAsMeasurement"]},{"name":"val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["estimatedGyroscopeBiasXAsMeasurement","val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasXAsMeasurement"]},{"name":"val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["estimatedGyroscopeBiasXAsMeasurement","val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasXAsMeasurement"]},{"name":"val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-x-as-measurement.html","searchKeys":["estimatedGyroscopeBiasXAsMeasurement","val estimatedGyroscopeBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasXAsMeasurement"]},{"name":"val estimatedGyroscopeBiasY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-y.html","searchKeys":["estimatedGyroscopeBiasY","val estimatedGyroscopeBiasY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasY"]},{"name":"val estimatedGyroscopeBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-y.html","searchKeys":["estimatedGyroscopeBiasY","val estimatedGyroscopeBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasY"]},{"name":"val estimatedGyroscopeBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-y.html","searchKeys":["estimatedGyroscopeBiasY","val estimatedGyroscopeBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasY"]},{"name":"val estimatedGyroscopeBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-y.html","searchKeys":["estimatedGyroscopeBiasY","val estimatedGyroscopeBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasY"]},{"name":"val estimatedGyroscopeBiasYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["estimatedGyroscopeBiasYAsMeasurement","val estimatedGyroscopeBiasYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasYAsMeasurement"]},{"name":"val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["estimatedGyroscopeBiasYAsMeasurement","val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasYAsMeasurement"]},{"name":"val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["estimatedGyroscopeBiasYAsMeasurement","val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasYAsMeasurement"]},{"name":"val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-y-as-measurement.html","searchKeys":["estimatedGyroscopeBiasYAsMeasurement","val estimatedGyroscopeBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasYAsMeasurement"]},{"name":"val estimatedGyroscopeBiasZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-z.html","searchKeys":["estimatedGyroscopeBiasZ","val estimatedGyroscopeBiasZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasZ"]},{"name":"val estimatedGyroscopeBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-z.html","searchKeys":["estimatedGyroscopeBiasZ","val estimatedGyroscopeBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasZ"]},{"name":"val estimatedGyroscopeBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-z.html","searchKeys":["estimatedGyroscopeBiasZ","val estimatedGyroscopeBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasZ"]},{"name":"val estimatedGyroscopeBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-z.html","searchKeys":["estimatedGyroscopeBiasZ","val estimatedGyroscopeBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasZ"]},{"name":"val estimatedGyroscopeBiasZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["estimatedGyroscopeBiasZAsMeasurement","val estimatedGyroscopeBiasZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeBiasZAsMeasurement"]},{"name":"val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["estimatedGyroscopeBiasZAsMeasurement","val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeBiasZAsMeasurement"]},{"name":"val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["estimatedGyroscopeBiasZAsMeasurement","val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeBiasZAsMeasurement"]},{"name":"val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-bias-z-as-measurement.html","searchKeys":["estimatedGyroscopeBiasZAsMeasurement","val estimatedGyroscopeBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeBiasZAsMeasurement"]},{"name":"val estimatedGyroscopeChiSq: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-chi-sq.html","searchKeys":["estimatedGyroscopeChiSq","val estimatedGyroscopeChiSq: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeChiSq"]},{"name":"val estimatedGyroscopeChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-chi-sq.html","searchKeys":["estimatedGyroscopeChiSq","val estimatedGyroscopeChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeChiSq"]},{"name":"val estimatedGyroscopeChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-chi-sq.html","searchKeys":["estimatedGyroscopeChiSq","val estimatedGyroscopeChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeChiSq"]},{"name":"val estimatedGyroscopeChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-chi-sq.html","searchKeys":["estimatedGyroscopeChiSq","val estimatedGyroscopeChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeChiSq"]},{"name":"val estimatedGyroscopeCovariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-covariance.html","searchKeys":["estimatedGyroscopeCovariance","val estimatedGyroscopeCovariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeCovariance"]},{"name":"val estimatedGyroscopeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-covariance.html","searchKeys":["estimatedGyroscopeCovariance","val estimatedGyroscopeCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeCovariance"]},{"name":"val estimatedGyroscopeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-covariance.html","searchKeys":["estimatedGyroscopeCovariance","val estimatedGyroscopeCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeCovariance"]},{"name":"val estimatedGyroscopeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-covariance.html","searchKeys":["estimatedGyroscopeCovariance","val estimatedGyroscopeCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeCovariance"]},{"name":"val estimatedGyroscopeGg: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-gg.html","searchKeys":["estimatedGyroscopeGg","val estimatedGyroscopeGg: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeGg"]},{"name":"val estimatedGyroscopeGg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-gg.html","searchKeys":["estimatedGyroscopeGg","val estimatedGyroscopeGg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeGg"]},{"name":"val estimatedGyroscopeGg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-gg.html","searchKeys":["estimatedGyroscopeGg","val estimatedGyroscopeGg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeGg"]},{"name":"val estimatedGyroscopeGg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-gg.html","searchKeys":["estimatedGyroscopeGg","val estimatedGyroscopeGg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeGg"]},{"name":"val estimatedGyroscopeMg: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mg.html","searchKeys":["estimatedGyroscopeMg","val estimatedGyroscopeMg: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMg"]},{"name":"val estimatedGyroscopeMg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mg.html","searchKeys":["estimatedGyroscopeMg","val estimatedGyroscopeMg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMg"]},{"name":"val estimatedGyroscopeMg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mg.html","searchKeys":["estimatedGyroscopeMg","val estimatedGyroscopeMg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMg"]},{"name":"val estimatedGyroscopeMg: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mg.html","searchKeys":["estimatedGyroscopeMg","val estimatedGyroscopeMg: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMg"]},{"name":"val estimatedGyroscopeMse: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mse.html","searchKeys":["estimatedGyroscopeMse","val estimatedGyroscopeMse: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMse"]},{"name":"val estimatedGyroscopeMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mse.html","searchKeys":["estimatedGyroscopeMse","val estimatedGyroscopeMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMse"]},{"name":"val estimatedGyroscopeMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mse.html","searchKeys":["estimatedGyroscopeMse","val estimatedGyroscopeMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMse"]},{"name":"val estimatedGyroscopeMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mse.html","searchKeys":["estimatedGyroscopeMse","val estimatedGyroscopeMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMse"]},{"name":"val estimatedGyroscopeMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mxy.html","searchKeys":["estimatedGyroscopeMxy","val estimatedGyroscopeMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMxy"]},{"name":"val estimatedGyroscopeMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mxy.html","searchKeys":["estimatedGyroscopeMxy","val estimatedGyroscopeMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMxy"]},{"name":"val estimatedGyroscopeMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mxy.html","searchKeys":["estimatedGyroscopeMxy","val estimatedGyroscopeMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMxy"]},{"name":"val estimatedGyroscopeMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mxy.html","searchKeys":["estimatedGyroscopeMxy","val estimatedGyroscopeMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMxy"]},{"name":"val estimatedGyroscopeMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mxz.html","searchKeys":["estimatedGyroscopeMxz","val estimatedGyroscopeMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMxz"]},{"name":"val estimatedGyroscopeMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mxz.html","searchKeys":["estimatedGyroscopeMxz","val estimatedGyroscopeMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMxz"]},{"name":"val estimatedGyroscopeMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mxz.html","searchKeys":["estimatedGyroscopeMxz","val estimatedGyroscopeMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMxz"]},{"name":"val estimatedGyroscopeMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mxz.html","searchKeys":["estimatedGyroscopeMxz","val estimatedGyroscopeMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMxz"]},{"name":"val estimatedGyroscopeMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-myx.html","searchKeys":["estimatedGyroscopeMyx","val estimatedGyroscopeMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMyx"]},{"name":"val estimatedGyroscopeMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-myx.html","searchKeys":["estimatedGyroscopeMyx","val estimatedGyroscopeMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMyx"]},{"name":"val estimatedGyroscopeMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-myx.html","searchKeys":["estimatedGyroscopeMyx","val estimatedGyroscopeMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMyx"]},{"name":"val estimatedGyroscopeMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-myx.html","searchKeys":["estimatedGyroscopeMyx","val estimatedGyroscopeMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMyx"]},{"name":"val estimatedGyroscopeMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-myz.html","searchKeys":["estimatedGyroscopeMyz","val estimatedGyroscopeMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMyz"]},{"name":"val estimatedGyroscopeMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-myz.html","searchKeys":["estimatedGyroscopeMyz","val estimatedGyroscopeMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMyz"]},{"name":"val estimatedGyroscopeMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-myz.html","searchKeys":["estimatedGyroscopeMyz","val estimatedGyroscopeMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMyz"]},{"name":"val estimatedGyroscopeMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-myz.html","searchKeys":["estimatedGyroscopeMyz","val estimatedGyroscopeMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMyz"]},{"name":"val estimatedGyroscopeMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mzx.html","searchKeys":["estimatedGyroscopeMzx","val estimatedGyroscopeMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMzx"]},{"name":"val estimatedGyroscopeMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mzx.html","searchKeys":["estimatedGyroscopeMzx","val estimatedGyroscopeMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMzx"]},{"name":"val estimatedGyroscopeMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mzx.html","searchKeys":["estimatedGyroscopeMzx","val estimatedGyroscopeMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMzx"]},{"name":"val estimatedGyroscopeMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mzx.html","searchKeys":["estimatedGyroscopeMzx","val estimatedGyroscopeMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMzx"]},{"name":"val estimatedGyroscopeMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-mzy.html","searchKeys":["estimatedGyroscopeMzy","val estimatedGyroscopeMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeMzy"]},{"name":"val estimatedGyroscopeMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-mzy.html","searchKeys":["estimatedGyroscopeMzy","val estimatedGyroscopeMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeMzy"]},{"name":"val estimatedGyroscopeMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-mzy.html","searchKeys":["estimatedGyroscopeMzy","val estimatedGyroscopeMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeMzy"]},{"name":"val estimatedGyroscopeMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-mzy.html","searchKeys":["estimatedGyroscopeMzy","val estimatedGyroscopeMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeMzy"]},{"name":"val estimatedGyroscopeSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-sx.html","searchKeys":["estimatedGyroscopeSx","val estimatedGyroscopeSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSx"]},{"name":"val estimatedGyroscopeSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-sx.html","searchKeys":["estimatedGyroscopeSx","val estimatedGyroscopeSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSx"]},{"name":"val estimatedGyroscopeSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-sx.html","searchKeys":["estimatedGyroscopeSx","val estimatedGyroscopeSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSx"]},{"name":"val estimatedGyroscopeSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-sx.html","searchKeys":["estimatedGyroscopeSx","val estimatedGyroscopeSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSx"]},{"name":"val estimatedGyroscopeSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-sy.html","searchKeys":["estimatedGyroscopeSy","val estimatedGyroscopeSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSy"]},{"name":"val estimatedGyroscopeSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-sy.html","searchKeys":["estimatedGyroscopeSy","val estimatedGyroscopeSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSy"]},{"name":"val estimatedGyroscopeSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-sy.html","searchKeys":["estimatedGyroscopeSy","val estimatedGyroscopeSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSy"]},{"name":"val estimatedGyroscopeSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-sy.html","searchKeys":["estimatedGyroscopeSy","val estimatedGyroscopeSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSy"]},{"name":"val estimatedGyroscopeSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-gyroscope-sz.html","searchKeys":["estimatedGyroscopeSz","val estimatedGyroscopeSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedGyroscopeSz"]},{"name":"val estimatedGyroscopeSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/estimated-gyroscope-sz.html","searchKeys":["estimatedGyroscopeSz","val estimatedGyroscopeSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.estimatedGyroscopeSz"]},{"name":"val estimatedGyroscopeSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-gyroscope-sz.html","searchKeys":["estimatedGyroscopeSz","val estimatedGyroscopeSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedGyroscopeSz"]},{"name":"val estimatedGyroscopeSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-gyroscope-sz.html","searchKeys":["estimatedGyroscopeSz","val estimatedGyroscopeSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedGyroscopeSz"]},{"name":"val estimatedHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-as-triad.html","searchKeys":["estimatedHardIronAsTriad","val estimatedHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronAsTriad"]},{"name":"val estimatedHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-x.html","searchKeys":["estimatedHardIronX","val estimatedHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronX"]},{"name":"val estimatedHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-x-as-measurement.html","searchKeys":["estimatedHardIronXAsMeasurement","val estimatedHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronXAsMeasurement"]},{"name":"val estimatedHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-y.html","searchKeys":["estimatedHardIronY","val estimatedHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronY"]},{"name":"val estimatedHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-y-as-measurement.html","searchKeys":["estimatedHardIronYAsMeasurement","val estimatedHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronYAsMeasurement"]},{"name":"val estimatedHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-z.html","searchKeys":["estimatedHardIronZ","val estimatedHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronZ"]},{"name":"val estimatedHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-hard-iron-z-as-measurement.html","searchKeys":["estimatedHardIronZAsMeasurement","val estimatedHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedHardIronZAsMeasurement"]},{"name":"val estimatedMa: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/estimated-ma.html","searchKeys":["estimatedMa","val estimatedMa: Matrix?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.estimatedMa"]},{"name":"val estimatedMagnetometerChiSq: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-chi-sq.html","searchKeys":["estimatedMagnetometerChiSq","val estimatedMagnetometerChiSq: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerChiSq"]},{"name":"val estimatedMagnetometerChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-chi-sq.html","searchKeys":["estimatedMagnetometerChiSq","val estimatedMagnetometerChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerChiSq"]},{"name":"val estimatedMagnetometerChiSq: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerChiSq","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-chi-sq.html","searchKeys":["estimatedMagnetometerChiSq","val estimatedMagnetometerChiSq: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerChiSq"]},{"name":"val estimatedMagnetometerCovariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-covariance.html","searchKeys":["estimatedMagnetometerCovariance","val estimatedMagnetometerCovariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerCovariance"]},{"name":"val estimatedMagnetometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-covariance.html","searchKeys":["estimatedMagnetometerCovariance","val estimatedMagnetometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerCovariance"]},{"name":"val estimatedMagnetometerCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerCovariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-covariance.html","searchKeys":["estimatedMagnetometerCovariance","val estimatedMagnetometerCovariance: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerCovariance"]},{"name":"val estimatedMagnetometerHardIronAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["estimatedMagnetometerHardIronAsTriad","val estimatedMagnetometerHardIronAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronAsTriad"]},{"name":"val estimatedMagnetometerHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["estimatedMagnetometerHardIronAsTriad","val estimatedMagnetometerHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronAsTriad"]},{"name":"val estimatedMagnetometerHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-as-triad.html","searchKeys":["estimatedMagnetometerHardIronAsTriad","val estimatedMagnetometerHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronAsTriad"]},{"name":"val estimatedMagnetometerHardIronX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-x.html","searchKeys":["estimatedMagnetometerHardIronX","val estimatedMagnetometerHardIronX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronX"]},{"name":"val estimatedMagnetometerHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-x.html","searchKeys":["estimatedMagnetometerHardIronX","val estimatedMagnetometerHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronX"]},{"name":"val estimatedMagnetometerHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-x.html","searchKeys":["estimatedMagnetometerHardIronX","val estimatedMagnetometerHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronX"]},{"name":"val estimatedMagnetometerHardIronXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronXAsMeasurement","val estimatedMagnetometerHardIronXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronXAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronXAsMeasurement","val estimatedMagnetometerHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronXAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-x-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronXAsMeasurement","val estimatedMagnetometerHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronXAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-y.html","searchKeys":["estimatedMagnetometerHardIronY","val estimatedMagnetometerHardIronY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronY"]},{"name":"val estimatedMagnetometerHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-y.html","searchKeys":["estimatedMagnetometerHardIronY","val estimatedMagnetometerHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronY"]},{"name":"val estimatedMagnetometerHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-y.html","searchKeys":["estimatedMagnetometerHardIronY","val estimatedMagnetometerHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronY"]},{"name":"val estimatedMagnetometerHardIronYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronYAsMeasurement","val estimatedMagnetometerHardIronYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronYAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronYAsMeasurement","val estimatedMagnetometerHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronYAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-y-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronYAsMeasurement","val estimatedMagnetometerHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronYAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-z.html","searchKeys":["estimatedMagnetometerHardIronZ","val estimatedMagnetometerHardIronZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronZ"]},{"name":"val estimatedMagnetometerHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-z.html","searchKeys":["estimatedMagnetometerHardIronZ","val estimatedMagnetometerHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronZ"]},{"name":"val estimatedMagnetometerHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-z.html","searchKeys":["estimatedMagnetometerHardIronZ","val estimatedMagnetometerHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronZ"]},{"name":"val estimatedMagnetometerHardIronZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronZAsMeasurement","val estimatedMagnetometerHardIronZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerHardIronZAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronZAsMeasurement","val estimatedMagnetometerHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerHardIronZAsMeasurement"]},{"name":"val estimatedMagnetometerHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-hard-iron-z-as-measurement.html","searchKeys":["estimatedMagnetometerHardIronZAsMeasurement","val estimatedMagnetometerHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerHardIronZAsMeasurement"]},{"name":"val estimatedMagnetometerMm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mm.html","searchKeys":["estimatedMagnetometerMm","val estimatedMagnetometerMm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMm"]},{"name":"val estimatedMagnetometerMm: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mm.html","searchKeys":["estimatedMagnetometerMm","val estimatedMagnetometerMm: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMm"]},{"name":"val estimatedMagnetometerMm: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mm.html","searchKeys":["estimatedMagnetometerMm","val estimatedMagnetometerMm: Matrix?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMm"]},{"name":"val estimatedMagnetometerMse: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mse.html","searchKeys":["estimatedMagnetometerMse","val estimatedMagnetometerMse: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMse"]},{"name":"val estimatedMagnetometerMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mse.html","searchKeys":["estimatedMagnetometerMse","val estimatedMagnetometerMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMse"]},{"name":"val estimatedMagnetometerMse: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMse","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mse.html","searchKeys":["estimatedMagnetometerMse","val estimatedMagnetometerMse: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMse"]},{"name":"val estimatedMagnetometerMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mxy.html","searchKeys":["estimatedMagnetometerMxy","val estimatedMagnetometerMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMxy"]},{"name":"val estimatedMagnetometerMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mxy.html","searchKeys":["estimatedMagnetometerMxy","val estimatedMagnetometerMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMxy"]},{"name":"val estimatedMagnetometerMxy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mxy.html","searchKeys":["estimatedMagnetometerMxy","val estimatedMagnetometerMxy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMxy"]},{"name":"val estimatedMagnetometerMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mxz.html","searchKeys":["estimatedMagnetometerMxz","val estimatedMagnetometerMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMxz"]},{"name":"val estimatedMagnetometerMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mxz.html","searchKeys":["estimatedMagnetometerMxz","val estimatedMagnetometerMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMxz"]},{"name":"val estimatedMagnetometerMxz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mxz.html","searchKeys":["estimatedMagnetometerMxz","val estimatedMagnetometerMxz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMxz"]},{"name":"val estimatedMagnetometerMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-myx.html","searchKeys":["estimatedMagnetometerMyx","val estimatedMagnetometerMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMyx"]},{"name":"val estimatedMagnetometerMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-myx.html","searchKeys":["estimatedMagnetometerMyx","val estimatedMagnetometerMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMyx"]},{"name":"val estimatedMagnetometerMyx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-myx.html","searchKeys":["estimatedMagnetometerMyx","val estimatedMagnetometerMyx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMyx"]},{"name":"val estimatedMagnetometerMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-myz.html","searchKeys":["estimatedMagnetometerMyz","val estimatedMagnetometerMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMyz"]},{"name":"val estimatedMagnetometerMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-myz.html","searchKeys":["estimatedMagnetometerMyz","val estimatedMagnetometerMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMyz"]},{"name":"val estimatedMagnetometerMyz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-myz.html","searchKeys":["estimatedMagnetometerMyz","val estimatedMagnetometerMyz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMyz"]},{"name":"val estimatedMagnetometerMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mzx.html","searchKeys":["estimatedMagnetometerMzx","val estimatedMagnetometerMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMzx"]},{"name":"val estimatedMagnetometerMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mzx.html","searchKeys":["estimatedMagnetometerMzx","val estimatedMagnetometerMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMzx"]},{"name":"val estimatedMagnetometerMzx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mzx.html","searchKeys":["estimatedMagnetometerMzx","val estimatedMagnetometerMzx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMzx"]},{"name":"val estimatedMagnetometerMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-mzy.html","searchKeys":["estimatedMagnetometerMzy","val estimatedMagnetometerMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerMzy"]},{"name":"val estimatedMagnetometerMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-mzy.html","searchKeys":["estimatedMagnetometerMzy","val estimatedMagnetometerMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerMzy"]},{"name":"val estimatedMagnetometerMzy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-mzy.html","searchKeys":["estimatedMagnetometerMzy","val estimatedMagnetometerMzy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerMzy"]},{"name":"val estimatedMagnetometerSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-sx.html","searchKeys":["estimatedMagnetometerSx","val estimatedMagnetometerSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSx"]},{"name":"val estimatedMagnetometerSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-sx.html","searchKeys":["estimatedMagnetometerSx","val estimatedMagnetometerSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSx"]},{"name":"val estimatedMagnetometerSx: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-sx.html","searchKeys":["estimatedMagnetometerSx","val estimatedMagnetometerSx: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSx"]},{"name":"val estimatedMagnetometerSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-sy.html","searchKeys":["estimatedMagnetometerSy","val estimatedMagnetometerSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSy"]},{"name":"val estimatedMagnetometerSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-sy.html","searchKeys":["estimatedMagnetometerSy","val estimatedMagnetometerSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSy"]},{"name":"val estimatedMagnetometerSy: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-sy.html","searchKeys":["estimatedMagnetometerSy","val estimatedMagnetometerSy: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSy"]},{"name":"val estimatedMagnetometerSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/estimated-magnetometer-sz.html","searchKeys":["estimatedMagnetometerSz","val estimatedMagnetometerSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.estimatedMagnetometerSz"]},{"name":"val estimatedMagnetometerSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/estimated-magnetometer-sz.html","searchKeys":["estimatedMagnetometerSz","val estimatedMagnetometerSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.estimatedMagnetometerSz"]},{"name":"val estimatedMagnetometerSz: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/estimated-magnetometer-sz.html","searchKeys":["estimatedMagnetometerSz","val estimatedMagnetometerSz: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.estimatedMagnetometerSz"]},{"name":"val estimatedMm: Matrix?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/estimated-mm.html","searchKeys":["estimatedMm","val estimatedMm: Matrix?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.estimatedMm"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.eulerAngles"]},{"name":"val eulerAngles: DoubleArray?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.eulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/euler-angles.html","searchKeys":["eulerAngles","val eulerAngles: DoubleArray?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.eulerAngles"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.eulerAnglesCovariance"]},{"name":"val eulerAnglesCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.eulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/euler-angles-covariance.html","searchKeys":["eulerAnglesCovariance","val eulerAnglesCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.eulerAnglesCovariance"]},{"name":"val expectedGravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.expectedGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/expected-gravity-norm.html","searchKeys":["expectedGravityNorm","val expectedGravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.expectedGravityNorm"]},{"name":"val externalAcceleration: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.externalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/external-acceleration.html","searchKeys":["externalAcceleration","val externalAcceleration: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.externalAcceleration"]},{"name":"val externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.externalAccelerationCovarianceMatrixEstimationMethod","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/external-acceleration-covariance-matrix-estimation-method.html","searchKeys":["externalAccelerationCovarianceMatrixEstimationMethod","val externalAccelerationCovarianceMatrixEstimationMethod: ExternalAccelerationCovarianceMatrixEstimationMethod","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.externalAccelerationCovarianceMatrixEstimationMethod"]},{"name":"val finePermissionGranted: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.finePermissionGranted","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/fine-permission-granted.html","searchKeys":["finePermissionGranted","val finePermissionGranted: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.finePermissionGranted"]},{"name":"val finePermissionRequested: Boolean = false","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.finePermissionRequested","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/-location-permission-result/fine-permission-requested.html","searchKeys":["finePermissionRequested","val finePermissionRequested: Boolean = false","com.irurueta.android.navigation.inertial.LocationPermissionService.LocationPermissionResult.finePermissionRequested"]},{"name":"val fixMagnetometerMeasurements: Boolean = true","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.fixMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/fix-magnetometer-measurements.html","searchKeys":["fixMagnetometerMeasurements","val fixMagnetometerMeasurements: Boolean = true","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.fixMagnetometerMeasurements"]},{"name":"val freeFallThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.freeFallThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/free-fall-threshold.html","searchKeys":["freeFallThreshold","val freeFallThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.freeFallThreshold"]},{"name":"val freeFallThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.freeFallThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/free-fall-threshold.html","searchKeys":["freeFallThreshold","val freeFallThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.freeFallThreshold"]},{"name":"val freeFallThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.freeFallThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/free-fall-threshold.html","searchKeys":["freeFallThreshold","val freeFallThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.freeFallThreshold"]},{"name":"val freeFallThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.freeFallThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/free-fall-threshold.html","searchKeys":["freeFallThreshold","val freeFallThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.freeFallThreshold"]},{"name":"val freeFallThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.freeFallThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/free-fall-threshold.html","searchKeys":["freeFallThreshold","val freeFallThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.freeFallThreshold"]},{"name":"val fusedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.fusedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/fused-attitude.html","searchKeys":["fusedAttitude","val fusedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.fusedAttitude"]},{"name":"val fusedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.fusedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/fused-attitude.html","searchKeys":["fusedAttitude","val fusedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.fusedAttitude"]},{"name":"val fusedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.fusedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/fused-attitude.html","searchKeys":["fusedAttitude","val fusedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.fusedAttitude"]},{"name":"val fusedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.fusedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/fused-attitude.html","searchKeys":["fusedAttitude","val fusedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.fusedAttitude"]},{"name":"val googlePlayServicesAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.LocationService.googlePlayServicesAvailable","location":"lib/com.irurueta.android.navigation.inertial/-location-service/google-play-services-available.html","searchKeys":["googlePlayServicesAvailable","val googlePlayServicesAvailable: Boolean","com.irurueta.android.navigation.inertial.LocationService.googlePlayServicesAvailable"]},{"name":"val googlePlayServicesStatus: LocationService.GooglePlayStatus?","description":"com.irurueta.android.navigation.inertial.LocationService.googlePlayServicesStatus","location":"lib/com.irurueta.android.navigation.inertial/-location-service/google-play-services-status.html","searchKeys":["googlePlayServicesStatus","val googlePlayServicesStatus: LocationService.GooglePlayStatus?","com.irurueta.android.navigation.inertial.LocationService.googlePlayServicesStatus"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gravity"]},{"name":"val gravity: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/gravity.html","searchKeys":["gravity","val gravity: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gravity"]},{"name":"val gravityAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.gravityAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/gravity-available.html","searchKeys":["gravityAvailable","val gravityAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.gravityAvailable"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-capacity.html","searchKeys":["gravityCapacity","val gravityCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCapacity"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-collector-usage.html","searchKeys":["gravityCollectorUsage","val gravityCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityCollectorUsage"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityInterpolator: GravitySensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-interpolator.html","searchKeys":["gravityInterpolator","val gravityInterpolator: GravitySensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityInterpolator"]},{"name":"val gravityNorm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-norm.html","searchKeys":["gravityNorm","val gravityNorm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNorm"]},{"name":"val gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/gravity-norm.html","searchKeys":["gravityNorm","val gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gravityNorm"]},{"name":"val gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/gravity-norm.html","searchKeys":["gravityNorm","val gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gravityNorm"]},{"name":"val gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/gravity-norm.html","searchKeys":["gravityNorm","val gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gravityNorm"]},{"name":"val gravityNormStandardDeviation: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-norm-standard-deviation.html","searchKeys":["gravityNormStandardDeviation","val gravityNormStandardDeviation: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormStandardDeviation"]},{"name":"val gravityNormStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-norm-standard-deviation.html","searchKeys":["gravityNormStandardDeviation","val gravityNormStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormStandardDeviation"]},{"name":"val gravityNormStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-norm-standard-deviation.html","searchKeys":["gravityNormStandardDeviation","val gravityNormStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormStandardDeviation"]},{"name":"val gravityNormStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-norm-standard-deviation.html","searchKeys":["gravityNormStandardDeviation","val gravityNormStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormStandardDeviation"]},{"name":"val gravityNormStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-norm-standard-deviation.html","searchKeys":["gravityNormStandardDeviation","val gravityNormStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormStandardDeviation"]},{"name":"val gravityNormStandardDeviationAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-norm-standard-deviation-as-measurement.html","searchKeys":["gravityNormStandardDeviationAsMeasurement","val gravityNormStandardDeviationAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormStandardDeviationAsMeasurement"]},{"name":"val gravityNormStandardDeviationAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-norm-standard-deviation-as-measurement.html","searchKeys":["gravityNormStandardDeviationAsMeasurement","val gravityNormStandardDeviationAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormStandardDeviationAsMeasurement"]},{"name":"val gravityNormStandardDeviationAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-norm-standard-deviation-as-measurement.html","searchKeys":["gravityNormStandardDeviationAsMeasurement","val gravityNormStandardDeviationAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormStandardDeviationAsMeasurement"]},{"name":"val gravityNormStandardDeviationAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-norm-standard-deviation-as-measurement.html","searchKeys":["gravityNormStandardDeviationAsMeasurement","val gravityNormStandardDeviationAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormStandardDeviationAsMeasurement"]},{"name":"val gravityNormStandardDeviationAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-norm-standard-deviation-as-measurement.html","searchKeys":["gravityNormStandardDeviationAsMeasurement","val gravityNormStandardDeviationAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormStandardDeviationAsMeasurement"]},{"name":"val gravityNormVariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-norm-variance.html","searchKeys":["gravityNormVariance","val gravityNormVariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityNormVariance"]},{"name":"val gravityNormVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-norm-variance.html","searchKeys":["gravityNormVariance","val gravityNormVariance: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNormVariance"]},{"name":"val gravityNormVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-norm-variance.html","searchKeys":["gravityNormVariance","val gravityNormVariance: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNormVariance"]},{"name":"val gravityNormVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-norm-variance.html","searchKeys":["gravityNormVariance","val gravityNormVariance: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNormVariance"]},{"name":"val gravityNormVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-norm-variance.html","searchKeys":["gravityNormVariance","val gravityNormVariance: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNormVariance"]},{"name":"val gravityPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-psd.html","searchKeys":["gravityPsd","val gravityPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityPsd"]},{"name":"val gravityPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-psd.html","searchKeys":["gravityPsd","val gravityPsd: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityPsd"]},{"name":"val gravityPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-psd.html","searchKeys":["gravityPsd","val gravityPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityPsd"]},{"name":"val gravityPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-psd.html","searchKeys":["gravityPsd","val gravityPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityPsd"]},{"name":"val gravityPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-psd.html","searchKeys":["gravityPsd","val gravityPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityPsd"]},{"name":"val gravityRootPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-root-psd.html","searchKeys":["gravityRootPsd","val gravityRootPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravityRootPsd"]},{"name":"val gravityRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-root-psd.html","searchKeys":["gravityRootPsd","val gravityRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityRootPsd"]},{"name":"val gravityRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-root-psd.html","searchKeys":["gravityRootPsd","val gravityRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityRootPsd"]},{"name":"val gravityRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-root-psd.html","searchKeys":["gravityRootPsd","val gravityRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityRootPsd"]},{"name":"val gravityRootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-root-psd.html","searchKeys":["gravityRootPsd","val gravityRootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityRootPsd"]},{"name":"val gravitySensor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor.html","searchKeys":["gravitySensor","val gravitySensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensor"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor-available.html","searchKeys":["gravitySensorAvailable","val gravitySensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorAvailable"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravitySensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-sensor-delay.html","searchKeys":["gravitySensorDelay","val gravitySensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravitySensorDelay"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-start-offset.html","searchKeys":["gravityStartOffset","val gravityStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffset"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-start-offset-enabled.html","searchKeys":["gravityStartOffsetEnabled","val gravityStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityStartOffsetEnabled"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.gravityUsage"]},{"name":"val gravityUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gravity-usage.html","searchKeys":["gravityUsage","val gravityUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gravityUsage"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gx"]},{"name":"val gx: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/gx.html","searchKeys":["gx","val gx: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gx"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gy"]},{"name":"val gy: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/gy.html","searchKeys":["gy","val gy: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gy"]},{"name":"val gyroscopeAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.gyroscopeAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/gyroscope-available.html","searchKeys":["gyroscopeAvailable","val gyroscopeAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.gyroscopeAvailable"]},{"name":"val gyroscopeAverageTimeInterval: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/gyroscope-average-time-interval.html","searchKeys":["gyroscopeAverageTimeInterval","val gyroscopeAverageTimeInterval: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeAverageTimeInterval"]},{"name":"val gyroscopeBaseNoiseLevel: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","val gyroscopeBaseNoiseLevel: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeBaseNoiseLevel"]},{"name":"val gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","val gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeBaseNoiseLevel"]},{"name":"val gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","val gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeBaseNoiseLevel"]},{"name":"val gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","val gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeBaseNoiseLevel"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-base-noise-level-as-measurement.html","searchKeys":["gyroscopeBaseNoiseLevelAsMeasurement","val gyroscopeBaseNoiseLevelAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevelAsMeasurement"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-capacity.html","searchKeys":["gyroscopeCapacity","val gyroscopeCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCapacity"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-collector-usage.html","searchKeys":["gyroscopeCollectorUsage","val gyroscopeCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeCollectorUsage"]},{"name":"val gyroscopeInitialBiasAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-as-triad.html","searchKeys":["gyroscopeInitialBiasAsTriad","val gyroscopeInitialBiasAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasAsTriad"]},{"name":"val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-as-triad.html","searchKeys":["gyroscopeInitialBiasAsTriad","val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasAsTriad"]},{"name":"val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-as-triad.html","searchKeys":["gyroscopeInitialBiasAsTriad","val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasAsTriad"]},{"name":"val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-as-triad.html","searchKeys":["gyroscopeInitialBiasAsTriad","val gyroscopeInitialBiasAsTriad: AngularSpeedTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasAsTriad"]},{"name":"val gyroscopeInitialBiasX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-x.html","searchKeys":["gyroscopeInitialBiasX","val gyroscopeInitialBiasX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasX"]},{"name":"val gyroscopeInitialBiasXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-x-as-measurement.html","searchKeys":["gyroscopeInitialBiasXAsMeasurement","val gyroscopeInitialBiasXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasXAsMeasurement"]},{"name":"val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-x-as-measurement.html","searchKeys":["gyroscopeInitialBiasXAsMeasurement","val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasXAsMeasurement"]},{"name":"val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-x-as-measurement.html","searchKeys":["gyroscopeInitialBiasXAsMeasurement","val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasXAsMeasurement"]},{"name":"val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-x-as-measurement.html","searchKeys":["gyroscopeInitialBiasXAsMeasurement","val gyroscopeInitialBiasXAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasXAsMeasurement"]},{"name":"val gyroscopeInitialBiasY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-y.html","searchKeys":["gyroscopeInitialBiasY","val gyroscopeInitialBiasY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasY"]},{"name":"val gyroscopeInitialBiasYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-y-as-measurement.html","searchKeys":["gyroscopeInitialBiasYAsMeasurement","val gyroscopeInitialBiasYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasYAsMeasurement"]},{"name":"val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-y-as-measurement.html","searchKeys":["gyroscopeInitialBiasYAsMeasurement","val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasYAsMeasurement"]},{"name":"val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-y-as-measurement.html","searchKeys":["gyroscopeInitialBiasYAsMeasurement","val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasYAsMeasurement"]},{"name":"val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-y-as-measurement.html","searchKeys":["gyroscopeInitialBiasYAsMeasurement","val gyroscopeInitialBiasYAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasYAsMeasurement"]},{"name":"val gyroscopeInitialBiasZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-z.html","searchKeys":["gyroscopeInitialBiasZ","val gyroscopeInitialBiasZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasZ"]},{"name":"val gyroscopeInitialBiasZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-bias-z-as-measurement.html","searchKeys":["gyroscopeInitialBiasZAsMeasurement","val gyroscopeInitialBiasZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialBiasZAsMeasurement"]},{"name":"val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-z-as-measurement.html","searchKeys":["gyroscopeInitialBiasZAsMeasurement","val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasZAsMeasurement"]},{"name":"val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-z-as-measurement.html","searchKeys":["gyroscopeInitialBiasZAsMeasurement","val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasZAsMeasurement"]},{"name":"val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-z-as-measurement.html","searchKeys":["gyroscopeInitialBiasZAsMeasurement","val gyroscopeInitialBiasZAsMeasurement: AngularSpeed?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasZAsMeasurement"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-interpolator.html","searchKeys":["gyroscopeInterpolator","val gyroscopeInterpolator: GyroscopeSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeInterpolator"]},{"name":"val gyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-measurements.html","searchKeys":["gyroscopeMeasurements","val gyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeMeasurements"]},{"name":"val gyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-measurements.html","searchKeys":["gyroscopeMeasurements","val gyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeMeasurements"]},{"name":"val gyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-measurements.html","searchKeys":["gyroscopeMeasurements","val gyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeMeasurements"]},{"name":"val gyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-measurements.html","searchKeys":["gyroscopeMeasurements","val gyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeMeasurements"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gyroscopeNoisePsd"]},{"name":"val gyroscopeNoisePsd: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.gyroscopeNoisePsd","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/gyroscope-noise-psd.html","searchKeys":["gyroscopeNoisePsd","val gyroscopeNoisePsd: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.gyroscopeNoisePsd"]},{"name":"val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-quality-score-mapper.html","searchKeys":["gyroscopeQualityScoreMapper","val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeQualityScoreMapper"]},{"name":"val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-quality-score-mapper.html","searchKeys":["gyroscopeQualityScoreMapper","val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeQualityScoreMapper"]},{"name":"val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-quality-score-mapper.html","searchKeys":["gyroscopeQualityScoreMapper","val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeQualityScoreMapper"]},{"name":"val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-quality-score-mapper.html","searchKeys":["gyroscopeQualityScoreMapper","val gyroscopeQualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeQualityScoreMapper"]},{"name":"val gyroscopeSensor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor.html","searchKeys":["gyroscopeSensor","val gyroscopeSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensor"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-available.html","searchKeys":["gyroscopeSensorAvailable","val gyroscopeSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorAvailable"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-delay.html","searchKeys":["gyroscopeSensorDelay","val gyroscopeSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorDelay"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeSensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.gyroscopeSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/gyroscope-sensor-type.html","searchKeys":["gyroscopeSensorType","val gyroscopeSensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.gyroscopeSensorType"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset.html","searchKeys":["gyroscopeStartOffset","val gyroscopeStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffset"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-start-offset-enabled.html","searchKeys":["gyroscopeStartOffsetEnabled","val gyroscopeStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeStartOffsetEnabled"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeTimeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gyroscopeTimeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/gyroscope-time-interval-seconds.html","searchKeys":["gyroscopeTimeIntervalSeconds","val gyroscopeTimeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gyroscopeTimeIntervalSeconds"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gyroscopeUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/gyroscope-usage.html","searchKeys":["gyroscopeUsage","val gyroscopeUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.gyroscopeUsage"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.gz"]},{"name":"val gz: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/gz.html","searchKeys":["gz","val gz: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.gz"]},{"name":"val haTransposed: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.haTransposed","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/ha-transposed.html","searchKeys":["haTransposed","val haTransposed: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.haTransposed"]},{"name":"val initialBiasAsTriad: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-as-triad.html","searchKeys":["initialBiasAsTriad","val initialBiasAsTriad: AccelerationTriad?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasAsTriad"]},{"name":"val initialBiasXAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-x-as-measurement.html","searchKeys":["initialBiasXAsMeasurement","val initialBiasXAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasXAsMeasurement"]},{"name":"val initialBiasYAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-y-as-measurement.html","searchKeys":["initialBiasYAsMeasurement","val initialBiasYAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasYAsMeasurement"]},{"name":"val initialBiasZAsMeasurement: Acceleration?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-z-as-measurement.html","searchKeys":["initialBiasZAsMeasurement","val initialBiasZAsMeasurement: Acceleration?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasZAsMeasurement"]},{"name":"val initialEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/initial-ecef-frame.html","searchKeys":["initialEcefFrame","val initialEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialEcefFrame"]},{"name":"val initialEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/initial-ecef-frame.html","searchKeys":["initialEcefFrame","val initialEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialEcefFrame"]},{"name":"val initialHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-as-triad.html","searchKeys":["initialHardIronAsTriad","val initialHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronAsTriad"]},{"name":"val initialHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-x-as-measurement.html","searchKeys":["initialHardIronXAsMeasurement","val initialHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronXAsMeasurement"]},{"name":"val initialHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-y-as-measurement.html","searchKeys":["initialHardIronYAsMeasurement","val initialHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronYAsMeasurement"]},{"name":"val initialHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-z-as-measurement.html","searchKeys":["initialHardIronZAsMeasurement","val initialHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronZAsMeasurement"]},{"name":"val initialLocation: Location","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/initial-location.html","searchKeys":["initialLocation","val initialLocation: Location","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.initialLocation"]},{"name":"val initialLocation: Location","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/initial-location.html","searchKeys":["initialLocation","val initialLocation: Location","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.initialLocation"]},{"name":"val initialLocation: Location","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/initial-location.html","searchKeys":["initialLocation","val initialLocation: Location","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialLocation"]},{"name":"val initialLocation: Location","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/initial-location.html","searchKeys":["initialLocation","val initialLocation: Location","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialLocation"]},{"name":"val initialMagneticFluxDensityNorm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","val initialMagneticFluxDensityNorm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialMagneticFluxDensityNorm"]},{"name":"val initialMagneticFluxDensityNormAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialMagneticFluxDensityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/initial-magnetic-flux-density-norm-as-measurement.html","searchKeys":["initialMagneticFluxDensityNormAsMeasurement","val initialMagneticFluxDensityNormAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialMagneticFluxDensityNormAsMeasurement"]},{"name":"val initialMagneticFluxDensityNormAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.initialMagneticFluxDensityNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/initial-magnetic-flux-density-norm-as-measurement.html","searchKeys":["initialMagneticFluxDensityNormAsMeasurement","val initialMagneticFluxDensityNormAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.initialMagneticFluxDensityNormAsMeasurement"]},{"name":"val initialNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/initial-ned-frame.html","searchKeys":["initialNedFrame","val initialNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialNedFrame"]},{"name":"val initialNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/initial-ned-frame.html","searchKeys":["initialNedFrame","val initialNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialNedFrame"]},{"name":"val initialSpeed: SpeedTriad","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.initialSpeed","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/initial-speed.html","searchKeys":["initialSpeed","val initialSpeed: SpeedTriad","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.initialSpeed"]},{"name":"val initialSpeed: SpeedTriad","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.initialSpeed","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/initial-speed.html","searchKeys":["initialSpeed","val initialSpeed: SpeedTriad","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.initialSpeed"]},{"name":"val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/initial-velocity.html","searchKeys":["initialVelocity","val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.initialVelocity"]},{"name":"val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/initial-velocity.html","searchKeys":["initialVelocity","val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.initialVelocity"]},{"name":"val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/initial-velocity.html","searchKeys":["initialVelocity","val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.initialVelocity"]},{"name":"val initialVelocity: NEDVelocity","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialVelocity","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/initial-velocity.html","searchKeys":["initialVelocity","val initialVelocity: NEDVelocity","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.initialVelocity"]},{"name":"val instantaneousAvgTriad: T","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-triad.html","searchKeys":["instantaneousAvgTriad","val instantaneousAvgTriad: T","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgTriad"]},{"name":"val instantaneousAvgX: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgX","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-x.html","searchKeys":["instantaneousAvgX","val instantaneousAvgX: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgX"]},{"name":"val instantaneousAvgXAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-x-as-measurement.html","searchKeys":["instantaneousAvgXAsMeasurement","val instantaneousAvgXAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgXAsMeasurement"]},{"name":"val instantaneousAvgY: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgY","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-y.html","searchKeys":["instantaneousAvgY","val instantaneousAvgY: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgY"]},{"name":"val instantaneousAvgYAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-y-as-measurement.html","searchKeys":["instantaneousAvgYAsMeasurement","val instantaneousAvgYAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgYAsMeasurement"]},{"name":"val instantaneousAvgZ: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-z.html","searchKeys":["instantaneousAvgZ","val instantaneousAvgZ: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgZ"]},{"name":"val instantaneousAvgZAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-avg-z-as-measurement.html","searchKeys":["instantaneousAvgZAsMeasurement","val instantaneousAvgZAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousAvgZAsMeasurement"]},{"name":"val instantaneousStdTriad: T","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-triad.html","searchKeys":["instantaneousStdTriad","val instantaneousStdTriad: T","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdTriad"]},{"name":"val instantaneousStdX: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdX","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-x.html","searchKeys":["instantaneousStdX","val instantaneousStdX: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdX"]},{"name":"val instantaneousStdXAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-x-as-measurement.html","searchKeys":["instantaneousStdXAsMeasurement","val instantaneousStdXAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdXAsMeasurement"]},{"name":"val instantaneousStdY: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdY","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-y.html","searchKeys":["instantaneousStdY","val instantaneousStdY: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdY"]},{"name":"val instantaneousStdYAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-y-as-measurement.html","searchKeys":["instantaneousStdYAsMeasurement","val instantaneousStdYAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdYAsMeasurement"]},{"name":"val instantaneousStdZ: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-z.html","searchKeys":["instantaneousStdZ","val instantaneousStdZ: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdZ"]},{"name":"val instantaneousStdZAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-std-z-as-measurement.html","searchKeys":["instantaneousStdZAsMeasurement","val instantaneousStdZAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousStdZAsMeasurement"]},{"name":"val integratorType: IntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.integratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/integrator-type.html","searchKeys":["integratorType","val integratorType: IntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.integratorType"]},{"name":"val isGravityNormEstimated: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGravityNormEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-gravity-norm-estimated.html","searchKeys":["isGravityNormEstimated","val isGravityNormEstimated: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGravityNormEstimated"]},{"name":"val isGravityNormEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.isGravityNormEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/is-gravity-norm-estimated.html","searchKeys":["isGravityNormEstimated","val isGravityNormEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.isGravityNormEstimated"]},{"name":"val isGravityNormEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGravityNormEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-gravity-norm-estimated.html","searchKeys":["isGravityNormEstimated","val isGravityNormEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGravityNormEstimated"]},{"name":"val isGravityNormEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isGravityNormEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/is-gravity-norm-estimated.html","searchKeys":["isGravityNormEstimated","val isGravityNormEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isGravityNormEstimated"]},{"name":"val isGravityNormEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGravityNormEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-gravity-norm-estimated.html","searchKeys":["isGravityNormEstimated","val isGravityNormEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGravityNormEstimated"]},{"name":"val isInitialMagneticFluxDensityNormMeasured: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isInitialMagneticFluxDensityNormMeasured","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-initial-magnetic-flux-density-norm-measured.html","searchKeys":["isInitialMagneticFluxDensityNormMeasured","val isInitialMagneticFluxDensityNormMeasured: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isInitialMagneticFluxDensityNormMeasured"]},{"name":"val isInitialMagneticFluxDensityNormMeasured: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/is-initial-magnetic-flux-density-norm-measured.html","searchKeys":["isInitialMagneticFluxDensityNormMeasured","val isInitialMagneticFluxDensityNormMeasured: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured"]},{"name":"val isInitialMagneticFluxDensityNormMeasured: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-initial-magnetic-flux-density-norm-measured.html","searchKeys":["isInitialMagneticFluxDensityNormMeasured","val isInitialMagneticFluxDensityNormMeasured: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured"]},{"name":"val isInitialMagneticFluxDensityNormMeasured: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/is-initial-magnetic-flux-density-norm-measured.html","searchKeys":["isInitialMagneticFluxDensityNormMeasured","val isInitialMagneticFluxDensityNormMeasured: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isInitialMagneticFluxDensityNormMeasured"]},{"name":"val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveAccelerometerCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-ready-to-solve-accelerometer-calibration.html","searchKeys":["isReadyToSolveAccelerometerCalibration","val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveAccelerometerCalibration"]},{"name":"val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveAccelerometerCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-ready-to-solve-accelerometer-calibration.html","searchKeys":["isReadyToSolveAccelerometerCalibration","val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveAccelerometerCalibration"]},{"name":"val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveAccelerometerCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-ready-to-solve-accelerometer-calibration.html","searchKeys":["isReadyToSolveAccelerometerCalibration","val isReadyToSolveAccelerometerCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveAccelerometerCalibration"]},{"name":"val isReadyToSolveCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.isReadyToSolveCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/is-ready-to-solve-calibration.html","searchKeys":["isReadyToSolveCalibration","val isReadyToSolveCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.isReadyToSolveCalibration"]},{"name":"val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveGyroscopeCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-ready-to-solve-gyroscope-calibration.html","searchKeys":["isReadyToSolveGyroscopeCalibration","val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isReadyToSolveGyroscopeCalibration"]},{"name":"val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveGyroscopeCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-ready-to-solve-gyroscope-calibration.html","searchKeys":["isReadyToSolveGyroscopeCalibration","val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveGyroscopeCalibration"]},{"name":"val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveGyroscopeCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-ready-to-solve-gyroscope-calibration.html","searchKeys":["isReadyToSolveGyroscopeCalibration","val isReadyToSolveGyroscopeCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveGyroscopeCalibration"]},{"name":"val isReadyToSolveMagnetometerCalibration: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveMagnetometerCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-ready-to-solve-magnetometer-calibration.html","searchKeys":["isReadyToSolveMagnetometerCalibration","val isReadyToSolveMagnetometerCalibration: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isReadyToSolveMagnetometerCalibration"]},{"name":"val isReadyToSolveMagnetometerCalibration: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveMagnetometerCalibration","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-ready-to-solve-magnetometer-calibration.html","searchKeys":["isReadyToSolveMagnetometerCalibration","val isReadyToSolveMagnetometerCalibration: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isReadyToSolveMagnetometerCalibration"]},{"name":"val kalmanErrorCovAccelerometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanErrorCovAccelerometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/kalman-error-cov-accelerometer-corrected.html","searchKeys":["kalmanErrorCovAccelerometerCorrected","val kalmanErrorCovAccelerometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanErrorCovAccelerometerCorrected"]},{"name":"val kalmanErrorCovMagnetometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanErrorCovMagnetometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/kalman-error-cov-magnetometer-corrected.html","searchKeys":["kalmanErrorCovMagnetometerCorrected","val kalmanErrorCovMagnetometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanErrorCovMagnetometerCorrected"]},{"name":"val kalmanErrorCovPostPredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanErrorCovPostPredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/kalman-error-cov-post-predicted.html","searchKeys":["kalmanErrorCovPostPredicted","val kalmanErrorCovPostPredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanErrorCovPostPredicted"]},{"name":"val kalmanStateAccelerometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanStateAccelerometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/kalman-state-accelerometer-corrected.html","searchKeys":["kalmanStateAccelerometerCorrected","val kalmanStateAccelerometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanStateAccelerometerCorrected"]},{"name":"val kalmanStateMagnetometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanStateMagnetometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/kalman-state-magnetometer-corrected.html","searchKeys":["kalmanStateMagnetometerCorrected","val kalmanStateMagnetometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanStateMagnetometerCorrected"]},{"name":"val kalmanStatePostPredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanStatePostPredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/kalman-state-post-predicted.html","searchKeys":["kalmanStatePostPredicted","val kalmanStatePostPredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanStatePostPredicted"]},{"name":"val linearAccelerometerAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.linearAccelerometerAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/linear-accelerometer-available.html","searchKeys":["linearAccelerometerAvailable","val linearAccelerometerAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.linearAccelerometerAvailable"]},{"name":"val locationEnabled: Boolean?","description":"com.irurueta.android.navigation.inertial.LocationService.locationEnabled","location":"lib/com.irurueta.android.navigation.inertial/-location-service/location-enabled.html","searchKeys":["locationEnabled","val locationEnabled: Boolean?","com.irurueta.android.navigation.inertial.LocationService.locationEnabled"]},{"name":"val magnetometerAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.magnetometerAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/magnetometer-available.html","searchKeys":["magnetometerAvailable","val magnetometerAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.magnetometerAvailable"]},{"name":"val magnetometerAverageTimeInterval: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerAverageTimeInterval","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-average-time-interval.html","searchKeys":["magnetometerAverageTimeInterval","val magnetometerAverageTimeInterval: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerAverageTimeInterval"]},{"name":"val magnetometerAverageTimeIntervalAsTime: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerAverageTimeIntervalAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-average-time-interval-as-time.html","searchKeys":["magnetometerAverageTimeIntervalAsTime","val magnetometerAverageTimeIntervalAsTime: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerAverageTimeIntervalAsTime"]},{"name":"val magnetometerBaseNoiseLevel: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level.html","searchKeys":["magnetometerBaseNoiseLevel","val magnetometerBaseNoiseLevel: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevel"]},{"name":"val magnetometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-base-noise-level.html","searchKeys":["magnetometerBaseNoiseLevel","val magnetometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerBaseNoiseLevel"]},{"name":"val magnetometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-base-noise-level.html","searchKeys":["magnetometerBaseNoiseLevel","val magnetometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerBaseNoiseLevel"]},{"name":"val magnetometerBaseNoiseLevelAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAsMeasurement","val magnetometerBaseNoiseLevelAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAsMeasurement"]},{"name":"val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-base-noise-level-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAsMeasurement","val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerBaseNoiseLevelAsMeasurement"]},{"name":"val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-base-noise-level-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAsMeasurement","val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerBaseNoiseLevelAsMeasurement"]},{"name":"val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-base-noise-level-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAsMeasurement","val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerBaseNoiseLevelAsMeasurement"]},{"name":"val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerBaseNoiseLevelAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-base-noise-level-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAsMeasurement","val magnetometerBaseNoiseLevelAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerBaseNoiseLevelAsMeasurement"]},{"name":"val magnetometerBaseNoiseLevelPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level-psd.html","searchKeys":["magnetometerBaseNoiseLevelPsd","val magnetometerBaseNoiseLevelPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelPsd"]},{"name":"val magnetometerBaseNoiseLevelRootPsd: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelRootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level-root-psd.html","searchKeys":["magnetometerBaseNoiseLevelRootPsd","val magnetometerBaseNoiseLevelRootPsd: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelRootPsd"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCapacity: Int","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-capacity.html","searchKeys":["magnetometerCapacity","val magnetometerCapacity: Int","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCapacity"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerCollectorUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-collector-usage.html","searchKeys":["magnetometerCollectorUsage","val magnetometerCollectorUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerCollectorUsage"]},{"name":"val magnetometerInitialHardIronAsTriad: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-as-triad.html","searchKeys":["magnetometerInitialHardIronAsTriad","val magnetometerInitialHardIronAsTriad: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronAsTriad"]},{"name":"val magnetometerInitialHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-as-triad.html","searchKeys":["magnetometerInitialHardIronAsTriad","val magnetometerInitialHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronAsTriad"]},{"name":"val magnetometerInitialHardIronAsTriad: MagneticFluxDensityTriad?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-as-triad.html","searchKeys":["magnetometerInitialHardIronAsTriad","val magnetometerInitialHardIronAsTriad: MagneticFluxDensityTriad?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronAsTriad"]},{"name":"val magnetometerInitialHardIronX: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-x.html","searchKeys":["magnetometerInitialHardIronX","val magnetometerInitialHardIronX: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronX"]},{"name":"val magnetometerInitialHardIronXAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["magnetometerInitialHardIronXAsMeasurement","val magnetometerInitialHardIronXAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronXAsMeasurement"]},{"name":"val magnetometerInitialHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["magnetometerInitialHardIronXAsMeasurement","val magnetometerInitialHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronXAsMeasurement"]},{"name":"val magnetometerInitialHardIronXAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-x-as-measurement.html","searchKeys":["magnetometerInitialHardIronXAsMeasurement","val magnetometerInitialHardIronXAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronXAsMeasurement"]},{"name":"val magnetometerInitialHardIronY: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-y.html","searchKeys":["magnetometerInitialHardIronY","val magnetometerInitialHardIronY: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronY"]},{"name":"val magnetometerInitialHardIronYAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["magnetometerInitialHardIronYAsMeasurement","val magnetometerInitialHardIronYAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronYAsMeasurement"]},{"name":"val magnetometerInitialHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["magnetometerInitialHardIronYAsMeasurement","val magnetometerInitialHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronYAsMeasurement"]},{"name":"val magnetometerInitialHardIronYAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-y-as-measurement.html","searchKeys":["magnetometerInitialHardIronYAsMeasurement","val magnetometerInitialHardIronYAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronYAsMeasurement"]},{"name":"val magnetometerInitialHardIronZ: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-z.html","searchKeys":["magnetometerInitialHardIronZ","val magnetometerInitialHardIronZ: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronZ"]},{"name":"val magnetometerInitialHardIronZAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["magnetometerInitialHardIronZAsMeasurement","val magnetometerInitialHardIronZAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialHardIronZAsMeasurement"]},{"name":"val magnetometerInitialHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["magnetometerInitialHardIronZAsMeasurement","val magnetometerInitialHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronZAsMeasurement"]},{"name":"val magnetometerInitialHardIronZAsMeasurement: MagneticFluxDensity?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-z-as-measurement.html","searchKeys":["magnetometerInitialHardIronZAsMeasurement","val magnetometerInitialHardIronZAsMeasurement: MagneticFluxDensity?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronZAsMeasurement"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-interpolator.html","searchKeys":["magnetometerInterpolator","val magnetometerInterpolator: MagnetometerSensorMeasurementInterpolator","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerInterpolator"]},{"name":"val magnetometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-measurements.html","searchKeys":["magnetometerMeasurements","val magnetometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerMeasurements"]},{"name":"val magnetometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-measurements.html","searchKeys":["magnetometerMeasurements","val magnetometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerMeasurements"]},{"name":"val magnetometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-measurements.html","searchKeys":["magnetometerMeasurements","val magnetometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerMeasurements"]},{"name":"val magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","val magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.magnetometerNoiseStandardDeviation"]},{"name":"val magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","val magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.magnetometerNoiseStandardDeviation"]},{"name":"val magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","val magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.magnetometerNoiseStandardDeviation"]},{"name":"val magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","val magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magnetometerNoiseStandardDeviation"]},{"name":"val magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","val magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magnetometerNoiseStandardDeviation"]},{"name":"val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-quality-score-mapper.html","searchKeys":["magnetometerQualityScoreMapper","val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerQualityScoreMapper"]},{"name":"val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-quality-score-mapper.html","searchKeys":["magnetometerQualityScoreMapper","val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerQualityScoreMapper"]},{"name":"val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerQualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-quality-score-mapper.html","searchKeys":["magnetometerQualityScoreMapper","val magnetometerQualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerQualityScoreMapper"]},{"name":"val magnetometerSensor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensor: Sensor?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor.html","searchKeys":["magnetometerSensor","val magnetometerSensor: Sensor?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensor"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-available.html","searchKeys":["magnetometerSensorAvailable","val magnetometerSensorAvailable: Boolean","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorAvailable"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-delay.html","searchKeys":["magnetometerSensorDelay","val magnetometerSensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorDelay"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.magnetometerSensorType"]},{"name":"val magnetometerSensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.magnetometerSensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/magnetometer-sensor-type.html","searchKeys":["magnetometerSensorType","val magnetometerSensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.magnetometerSensorType"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset.html","searchKeys":["magnetometerStartOffset","val magnetometerStartOffset: Long?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffset"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerStartOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-start-offset-enabled.html","searchKeys":["magnetometerStartOffsetEnabled","val magnetometerStartOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerStartOffsetEnabled"]},{"name":"val magnetometerThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-threshold.html","searchKeys":["magnetometerThreshold","val magnetometerThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerThreshold"]},{"name":"val magnetometerThresholdAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-threshold-as-measurement.html","searchKeys":["magnetometerThresholdAsMeasurement","val magnetometerThresholdAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerThresholdAsMeasurement"]},{"name":"val magnetometerTimeIntervalStandardDeviation: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-time-interval-standard-deviation.html","searchKeys":["magnetometerTimeIntervalStandardDeviation","val magnetometerTimeIntervalStandardDeviation: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalStandardDeviation"]},{"name":"val magnetometerTimeIntervalStandardDeviationAsTime: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-time-interval-standard-deviation-as-time.html","searchKeys":["magnetometerTimeIntervalStandardDeviationAsTime","val magnetometerTimeIntervalStandardDeviationAsTime: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalStandardDeviationAsTime"]},{"name":"val magnetometerTimeIntervalVariance: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-time-interval-variance.html","searchKeys":["magnetometerTimeIntervalVariance","val magnetometerTimeIntervalVariance: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerTimeIntervalVariance"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val magnetometerUsage: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-sensor-measurement-syncer/magnetometer-usage.html","searchKeys":["magnetometerUsage","val magnetometerUsage: Float","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSensorMeasurementSyncer.magnetometerUsage"]},{"name":"val minimumRequiredAccelerometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/minimum-required-accelerometer-measurements.html","searchKeys":["minimumRequiredAccelerometerMeasurements","val minimumRequiredAccelerometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredAccelerometerMeasurements"]},{"name":"val minimumRequiredAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/minimum-required-accelerometer-measurements.html","searchKeys":["minimumRequiredAccelerometerMeasurements","val minimumRequiredAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredAccelerometerMeasurements"]},{"name":"val minimumRequiredAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.minimumRequiredAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/minimum-required-accelerometer-measurements.html","searchKeys":["minimumRequiredAccelerometerMeasurements","val minimumRequiredAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.minimumRequiredAccelerometerMeasurements"]},{"name":"val minimumRequiredAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/minimum-required-accelerometer-measurements.html","searchKeys":["minimumRequiredAccelerometerMeasurements","val minimumRequiredAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredAccelerometerMeasurements"]},{"name":"val minimumRequiredGyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/minimum-required-gyroscope-measurements.html","searchKeys":["minimumRequiredGyroscopeMeasurements","val minimumRequiredGyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredGyroscopeMeasurements"]},{"name":"val minimumRequiredGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/minimum-required-gyroscope-measurements.html","searchKeys":["minimumRequiredGyroscopeMeasurements","val minimumRequiredGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.minimumRequiredGyroscopeMeasurements"]},{"name":"val minimumRequiredGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/minimum-required-gyroscope-measurements.html","searchKeys":["minimumRequiredGyroscopeMeasurements","val minimumRequiredGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredGyroscopeMeasurements"]},{"name":"val minimumRequiredGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.minimumRequiredGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/minimum-required-gyroscope-measurements.html","searchKeys":["minimumRequiredGyroscopeMeasurements","val minimumRequiredGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.minimumRequiredGyroscopeMeasurements"]},{"name":"val minimumRequiredMagnetometerMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/minimum-required-magnetometer-measurements.html","searchKeys":["minimumRequiredMagnetometerMeasurements","val minimumRequiredMagnetometerMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.minimumRequiredMagnetometerMeasurements"]},{"name":"val minimumRequiredMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/minimum-required-magnetometer-measurements.html","searchKeys":["minimumRequiredMagnetometerMeasurements","val minimumRequiredMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.minimumRequiredMagnetometerMeasurements"]},{"name":"val minimumRequiredMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.minimumRequiredMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/minimum-required-magnetometer-measurements.html","searchKeys":["minimumRequiredMagnetometerMeasurements","val minimumRequiredMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.minimumRequiredMagnetometerMeasurements"]},{"name":"val minimumUnreliableDurationSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.minimumUnreliableDurationSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/minimum-unreliable-duration-seconds.html","searchKeys":["minimumUnreliableDurationSeconds","val minimumUnreliableDurationSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.minimumUnreliableDurationSeconds"]},{"name":"val minimumUnreliableDurationSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.minimumUnreliableDurationSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/minimum-unreliable-duration-seconds.html","searchKeys":["minimumUnreliableDurationSeconds","val minimumUnreliableDurationSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.minimumUnreliableDurationSeconds"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.nedAttitude"]},{"name":"val nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/ned-attitude.html","searchKeys":["nedAttitude","val nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.nedAttitude"]},{"name":"val nedAttitudeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.nedAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/ned-attitude-covariance.html","searchKeys":["nedAttitudeCovariance","val nedAttitudeCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.nedAttitudeCovariance"]},{"name":"val nedAttitudeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ned-attitude-covariance.html","searchKeys":["nedAttitudeCovariance","val nedAttitudeCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedAttitudeCovariance"]},{"name":"val nedAttitudeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ned-attitude-covariance.html","searchKeys":["nedAttitudeCovariance","val nedAttitudeCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedAttitudeCovariance"]},{"name":"val nedAttitudeCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.nedAttitudeCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/ned-attitude-covariance.html","searchKeys":["nedAttitudeCovariance","val nedAttitudeCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.nedAttitudeCovariance"]},{"name":"val nedExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/ned-external-acceleration.html","searchKeys":["nedExternalAcceleration","val nedExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.nedExternalAcceleration"]},{"name":"val nedExternalAcceleration: AccelerationTriad?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/ned-external-acceleration.html","searchKeys":["nedExternalAcceleration","val nedExternalAcceleration: AccelerationTriad?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.nedExternalAcceleration"]},{"name":"val nedQuaternionCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.nedQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/ned-quaternion-covariance.html","searchKeys":["nedQuaternionCovariance","val nedQuaternionCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.nedQuaternionCovariance"]},{"name":"val nedQuaternionCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.nedQuaternionCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/ned-quaternion-covariance.html","searchKeys":["nedQuaternionCovariance","val nedQuaternionCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.nedQuaternionCovariance"]},{"name":"val nedRotationAxisCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.nedRotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/ned-rotation-axis-covariance.html","searchKeys":["nedRotationAxisCovariance","val nedRotationAxisCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.nedRotationAxisCovariance"]},{"name":"val noiseRootPsdNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.noiseRootPsdNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/noise-root-psd-norm.html","searchKeys":["noiseRootPsdNorm","val noiseRootPsdNorm: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.noiseRootPsdNorm"]},{"name":"val normStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/norm-standard-deviation.html","searchKeys":["normStandardDeviation","val normStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normStandardDeviation"]},{"name":"val normStandardDeviationAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normStandardDeviationAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/norm-standard-deviation-as-measurement.html","searchKeys":["normStandardDeviationAsMeasurement","val normStandardDeviationAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normStandardDeviationAsMeasurement"]},{"name":"val normVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/norm-variance.html","searchKeys":["normVariance","val normVariance: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.normVariance"]},{"name":"val numberOfProcessedGyroscopeMeasurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","val numberOfProcessedGyroscopeMeasurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.numberOfProcessedGyroscopeMeasurements"]},{"name":"val numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","val numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.numberOfProcessedGyroscopeMeasurements"]},{"name":"val numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","val numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.numberOfProcessedGyroscopeMeasurements"]},{"name":"val numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","val numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.numberOfProcessedGyroscopeMeasurements"]},{"name":"val numberOfProcessedMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.numberOfProcessedMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/number-of-processed-magnetometer-measurements.html","searchKeys":["numberOfProcessedMagnetometerMeasurements","val numberOfProcessedMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.numberOfProcessedMagnetometerMeasurements"]},{"name":"val numberOfProcessedMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.numberOfProcessedMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/number-of-processed-magnetometer-measurements.html","searchKeys":["numberOfProcessedMagnetometerMeasurements","val numberOfProcessedMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.numberOfProcessedMagnetometerMeasurements"]},{"name":"val numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.numericalInstabilitiesListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/numerical-instabilities-listener.html","searchKeys":["numericalInstabilitiesListener","val numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor3.OnNumericalInstabilitiesDetectedListener? = null","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.numericalInstabilitiesListener"]},{"name":"val oldestTimestampInBuffer: Long?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.oldestTimestampInBuffer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/oldest-timestamp-in-buffer.html","searchKeys":["oldestTimestampInBuffer","val oldestTimestampInBuffer: Long?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.oldestTimestampInBuffer"]},{"name":"val partialAccelerometerResidualCovarianceMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.partialAccelerometerResidualCovarianceMatrix","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/partial-accelerometer-residual-covariance-matrix.html","searchKeys":["partialAccelerometerResidualCovarianceMatrix","val partialAccelerometerResidualCovarianceMatrix: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.partialAccelerometerResidualCovarianceMatrix"]},{"name":"val poseTransformation: EuclideanTransformation3D","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.poseTransformation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/pose-transformation.html","searchKeys":["poseTransformation","val poseTransformation: EuclideanTransformation3D","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.poseTransformation"]},{"name":"val poseTransformation: EuclideanTransformation3D","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.poseTransformation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/pose-transformation.html","searchKeys":["poseTransformation","val poseTransformation: EuclideanTransformation3D","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.poseTransformation"]},{"name":"val poseTransformation: EuclideanTransformation3D","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.poseTransformation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/pose-transformation.html","searchKeys":["poseTransformation","val poseTransformation: EuclideanTransformation3D","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.poseTransformation"]},{"name":"val predictedBodyQ: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.predictedBodyQ","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/predicted-body-q.html","searchKeys":["predictedBodyQ","val predictedBodyQ: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.predictedBodyQ"]},{"name":"val predictedNedQJacobian: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.predictedNedQJacobian","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/predicted-ned-q-jacobian.html","searchKeys":["predictedNedQJacobian","val predictedNedQJacobian: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.predictedNedQJacobian"]},{"name":"val previousEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.previousEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/previous-ecef-frame.html","searchKeys":["previousEcefFrame","val previousEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.previousEcefFrame"]},{"name":"val previousEcefFrame: ECEFFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.previousEcefFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/previous-ecef-frame.html","searchKeys":["previousEcefFrame","val previousEcefFrame: ECEFFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.previousEcefFrame"]},{"name":"val previousNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.previousNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/previous-ned-frame.html","searchKeys":["previousNedFrame","val previousNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.previousNedFrame"]},{"name":"val previousNedFrame: NEDFrame","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.previousNedFrame","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/previous-ned-frame.html","searchKeys":["previousNedFrame","val previousNedFrame: NEDFrame","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.previousNedFrame"]},{"name":"val processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/processor-listener.html","searchKeys":["processorListener","val processorListener: KalmanAbsoluteAttitudeProcessor3.OnProcessedListener? = null","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.processorListener"]},{"name":"val processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/processor-listener.html","searchKeys":["processorListener","val processorListener: KalmanAbsoluteAttitudeProcessor4.OnProcessedListener? = null","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.processorListener"]},{"name":"val processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/processor-listener.html","searchKeys":["processorListener","val processorListener: KalmanAbsoluteAttitudeProcessor5.OnProcessedListener? = null","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.processorListener"]},{"name":"val psd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.psd","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/psd.html","searchKeys":["psd","val psd: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.psd"]},{"name":"val psdX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdX","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/psd-x.html","searchKeys":["psdX","val psdX: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdX"]},{"name":"val psdY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/psd-y.html","searchKeys":["psdY","val psdY: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdY"]},{"name":"val psdZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/psd-z.html","searchKeys":["psdZ","val psdZ: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.psdZ"]},{"name":"val q: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.q","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/q.html","searchKeys":["q","val q: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.q"]},{"name":"val qab: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.qab","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/qab.html","searchKeys":["qab","val qab: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.qab"]},{"name":"val qba: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.qba","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/qba.html","searchKeys":["qba","val qba: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.qba"]},{"name":"val qba: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.qba","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/qba.html","searchKeys":["qba","val qba: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.qba"]},{"name":"val qbg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.qbg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/qbg.html","searchKeys":["qbg","val qbg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.qbg"]},{"name":"val qbg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.qbg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/qbg.html","searchKeys":["qbg","val qbg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.qbg"]},{"name":"val quadratureType: QuadratureType","description":"com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.quadratureType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-precise-process-noise-covariance-integrator/quadrature-type.html","searchKeys":["quadratureType","val quadratureType: QuadratureType","com.irurueta.android.navigation.inertial.processors.attitude.PreciseProcessNoiseCovarianceIntegrator.quadratureType"]},{"name":"val qualityScoreMapper: QualityScoreMapper<R>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.qualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/quality-score-mapper.html","searchKeys":["qualityScoreMapper","val qualityScoreMapper: QualityScoreMapper<R>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.qualityScoreMapper"]},{"name":"val quaternionConversionJacobian: Matrix","description":"com.irurueta.android.navigation.inertial.ENUtoNEDConverter.quaternionConversionJacobian","location":"lib/com.irurueta.android.navigation.inertial/-e-n-uto-n-e-d-converter/quaternion-conversion-jacobian.html","searchKeys":["quaternionConversionJacobian","val quaternionConversionJacobian: Matrix","com.irurueta.android.navigation.inertial.ENUtoNEDConverter.quaternionConversionJacobian"]},{"name":"val quaternionStepIntegratorType: QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.quaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/quaternion-step-integrator-type.html","searchKeys":["quaternionStepIntegratorType","val quaternionStepIntegratorType: QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.quaternionStepIntegratorType"]},{"name":"val quaternionStepIntegratorType: QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.quaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/quaternion-step-integrator-type.html","searchKeys":["quaternionStepIntegratorType","val quaternionStepIntegratorType: QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.quaternionStepIntegratorType"]},{"name":"val quaternionStepIntegratorType: QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.quaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/quaternion-step-integrator-type.html","searchKeys":["quaternionStepIntegratorType","val quaternionStepIntegratorType: QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.quaternionStepIntegratorType"]},{"name":"val quaternionStepIntegratorType: QuaternionStepIntegratorType","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.quaternionStepIntegratorType","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/quaternion-step-integrator-type.html","searchKeys":["quaternionStepIntegratorType","val quaternionStepIntegratorType: QuaternionStepIntegratorType","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.quaternionStepIntegratorType"]},{"name":"val relativeAttitudeAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.relativeAttitudeAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/relative-attitude-available.html","searchKeys":["relativeAttitudeAvailable","val relativeAttitudeAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.relativeAttitudeAvailable"]},{"name":"val rg: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.rg","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/rg.html","searchKeys":["rg","val rg: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.rg"]},{"name":"val rootPsd: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.rootPsd","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/root-psd.html","searchKeys":["rootPsd","val rootPsd: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.rootPsd"]},{"name":"val rootPsdX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdX","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/root-psd-x.html","searchKeys":["rootPsdX","val rootPsdX: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdX"]},{"name":"val rootPsdY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/root-psd-y.html","searchKeys":["rootPsdY","val rootPsdY: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdY"]},{"name":"val rootPsdZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/root-psd-z.html","searchKeys":["rootPsdZ","val rootPsdZ: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.rootPsdZ"]},{"name":"val rotationAxis: DoubleArray","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.rotationAxis","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/rotation-axis.html","searchKeys":["rotationAxis","val rotationAxis: DoubleArray","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.rotationAxis"]},{"name":"val rotationAxis: DoubleArray","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.rotationAxis","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/rotation-axis.html","searchKeys":["rotationAxis","val rotationAxis: DoubleArray","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.rotationAxis"]},{"name":"val rotationAxisCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.rotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/rotation-axis-covariance.html","searchKeys":["rotationAxisCovariance","val rotationAxisCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.rotationAxisCovariance"]},{"name":"val rotationAxisCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.rotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/rotation-axis-covariance.html","searchKeys":["rotationAxisCovariance","val rotationAxisCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.rotationAxisCovariance"]},{"name":"val rotationAxisCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.rotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/rotation-axis-covariance.html","searchKeys":["rotationAxisCovariance","val rotationAxisCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.rotationAxisCovariance"]},{"name":"val rotationAxisCovariance: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.rotationAxisCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/rotation-axis-covariance.html","searchKeys":["rotationAxisCovariance","val rotationAxisCovariance: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.rotationAxisCovariance"]},{"name":"val rotationAxisState: DoubleArray","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.rotationAxisState","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/rotation-axis-state.html","searchKeys":["rotationAxisState","val rotationAxisState: DoubleArray","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.rotationAxisState"]},{"name":"val rotationAxisState: DoubleArray","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.rotationAxisState","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/rotation-axis-state.html","searchKeys":["rotationAxisState","val rotationAxisState: DoubleArray","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.rotationAxisState"]},{"name":"val running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/running.html","searchKeys":["running","val running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.running"]},{"name":"val running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/running.html","searchKeys":["running","val running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.running"]},{"name":"val running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/running.html","searchKeys":["running","val running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.running"]},{"name":"val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.sensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/sensor.html","searchKeys":["sensor","val sensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.sensor"]},{"name":"val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.sensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/sensor.html","searchKeys":["sensor","val sensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.sensor"]},{"name":"val sensor: Sensor?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.sensor","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/sensor.html","searchKeys":["sensor","val sensor: Sensor?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.sensor"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.SensorCollector.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.sensorDelay"]},{"name":"val sensorDelay: SensorDelay","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.sensorDelay","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/sensor-delay.html","searchKeys":["sensorDelay","val sensorDelay: SensorDelay","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.sensorDelay"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-accelerometer-interval-detector/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-noise-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-norm-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector2/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector2.sensorType"]},{"name":"val sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-accelerometer-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.BufferedAccelerometerSensorCollector.sensorType"]},{"name":"val sensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-collector2/sensor-type.html","searchKeys":["sensorType","val sensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorCollector2.sensorType"]},{"name":"val sensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-attitude-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.BufferedAttitudeSensorCollector.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-gyroscope-interval-detector/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-noise-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-norm-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-gyroscope-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.BufferedGyroscopeSensorCollector.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector2/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector2.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.sensorType"]},{"name":"val sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.sensorType","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/sensor-type.html","searchKeys":["sensorType","val sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-magnetometer-interval-detector/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-noise-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.sensorType","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-norm-estimator/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-magnetometer-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.BufferedMagnetometerSensorCollector.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.sensorType"]},{"name":"val sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector2/sensor-type.html","searchKeys":["sensorType","val sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector2.sensorType"]},{"name":"val skipWhenProcessing: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.skipWhenProcessing","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/skip-when-processing.html","searchKeys":["skipWhenProcessing","val skipWhenProcessing: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.skipWhenProcessing"]},{"name":"val skipWhenProcessing: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.skipWhenProcessing","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/skip-when-processing.html","searchKeys":["skipWhenProcessing","val skipWhenProcessing: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.skipWhenProcessing"]},{"name":"val solveCalibrationWhenEnoughMeasurements: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.solveCalibrationWhenEnoughMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/solve-calibration-when-enough-measurements.html","searchKeys":["solveCalibrationWhenEnoughMeasurements","val solveCalibrationWhenEnoughMeasurements: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.solveCalibrationWhenEnoughMeasurements"]},{"name":"val staleDetectionEnabled: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleDetectionEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/stale-detection-enabled.html","searchKeys":["staleDetectionEnabled","val staleDetectionEnabled: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleDetectionEnabled"]},{"name":"val staleOffsetNanos: Long","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleOffsetNanos","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/stale-offset-nanos.html","searchKeys":["staleOffsetNanos","val staleOffsetNanos: Long","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleOffsetNanos"]},{"name":"val standardDeviationNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-norm.html","searchKeys":["standardDeviationNorm","val standardDeviationNorm: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationNorm"]},{"name":"val standardDeviationNormAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationNormAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-norm-as-measurement.html","searchKeys":["standardDeviationNormAsMeasurement","val standardDeviationNormAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationNormAsMeasurement"]},{"name":"val standardDeviationTriad: T?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-triad.html","searchKeys":["standardDeviationTriad","val standardDeviationTriad: T?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationTriad"]},{"name":"val standardDeviationX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationX","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-x.html","searchKeys":["standardDeviationX","val standardDeviationX: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationX"]},{"name":"val standardDeviationXAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-x-as-measurement.html","searchKeys":["standardDeviationXAsMeasurement","val standardDeviationXAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationXAsMeasurement"]},{"name":"val standardDeviationY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-y.html","searchKeys":["standardDeviationY","val standardDeviationY: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationY"]},{"name":"val standardDeviationYAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-y-as-measurement.html","searchKeys":["standardDeviationYAsMeasurement","val standardDeviationYAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationYAsMeasurement"]},{"name":"val standardDeviationZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-z.html","searchKeys":["standardDeviationZ","val standardDeviationZ: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationZ"]},{"name":"val standardDeviationZAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/standard-deviation-z-as-measurement.html","searchKeys":["standardDeviationZAsMeasurement","val standardDeviationZAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.standardDeviationZAsMeasurement"]},{"name":"val startOffset: Long?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.startOffset","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/start-offset.html","searchKeys":["startOffset","val startOffset: Long?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.startOffset"]},{"name":"val startOffset: Long?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.startOffset","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/start-offset.html","searchKeys":["startOffset","val startOffset: Long?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.startOffset"]},{"name":"val startOffsetEnabled: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.startOffsetEnabled"]},{"name":"val startOffsetEnabled: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.startOffsetEnabled","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/start-offset-enabled.html","searchKeys":["startOffsetEnabled","val startOffsetEnabled: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.startOffsetEnabled"]},{"name":"val status: Status","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.status","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/status.html","searchKeys":["status","val status: Status","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.status"]},{"name":"val stopMode: StopMode","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.stopMode","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/stop-mode.html","searchKeys":["stopMode","val stopMode: StopMode","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.stopMode"]},{"name":"val stopWhenFilledBuffer: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.stopWhenFilledBuffer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/stop-when-filled-buffer.html","searchKeys":["stopWhenFilledBuffer","val stopWhenFilledBuffer: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.stopWhenFilledBuffer"]},{"name":"val stopWhenFilledBuffer: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.stopWhenFilledBuffer","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/stop-when-filled-buffer.html","searchKeys":["stopWhenFilledBuffer","val stopWhenFilledBuffer: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.stopWhenFilledBuffer"]},{"name":"val symmetricThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.symmetricThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/symmetric-threshold.html","searchKeys":["symmetricThreshold","val symmetricThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.symmetricThreshold"]},{"name":"val symmetricThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.symmetricThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/symmetric-threshold.html","searchKeys":["symmetricThreshold","val symmetricThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.symmetricThreshold"]},{"name":"val symmetricThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.symmetricThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/symmetric-threshold.html","searchKeys":["symmetricThreshold","val symmetricThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.symmetricThreshold"]},{"name":"val symmetricThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.symmetricThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/symmetric-threshold.html","searchKeys":["symmetricThreshold","val symmetricThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.symmetricThreshold"]},{"name":"val symmetricThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.symmetricThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/symmetric-threshold.html","searchKeys":["symmetricThreshold","val symmetricThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.symmetricThreshold"]},{"name":"val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/threshold.html","searchKeys":["threshold","val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.threshold"]},{"name":"val threshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.threshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/threshold.html","searchKeys":["threshold","val threshold: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.threshold"]},{"name":"val thresholdAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","val thresholdAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.thresholdAsMeasurement"]},{"name":"val thresholdAsMeasurement: M?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.thresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/threshold-as-measurement.html","searchKeys":["thresholdAsMeasurement","val thresholdAsMeasurement: M?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.thresholdAsMeasurement"]},{"name":"val timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","val timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.timeIntervalSeconds"]},{"name":"val timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","val timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.timeIntervalSeconds"]},{"name":"val timeIntervalSeconds: Double?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","val timeIntervalSeconds: Double?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.timeIntervalSeconds"]},{"name":"val timeIntervalSeconds: Double?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","val timeIntervalSeconds: Double?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.timeIntervalSeconds"]},{"name":"val timeIntervalSeconds: Double?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","val timeIntervalSeconds: Double?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.timeIntervalSeconds"]},{"name":"val timeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/time-interval-standard-deviation.html","searchKeys":["timeIntervalStandardDeviation","val timeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalStandardDeviation"]},{"name":"val timeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/time-interval-standard-deviation.html","searchKeys":["timeIntervalStandardDeviation","val timeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalStandardDeviation"]},{"name":"val timeIntervalStandardDeviation: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/time-interval-standard-deviation.html","searchKeys":["timeIntervalStandardDeviation","val timeIntervalStandardDeviation: Double?","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalStandardDeviation"]},{"name":"val timeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/time-interval-standard-deviation-as-time.html","searchKeys":["timeIntervalStandardDeviationAsTime","val timeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalStandardDeviationAsTime"]},{"name":"val timeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/time-interval-standard-deviation-as-time.html","searchKeys":["timeIntervalStandardDeviationAsTime","val timeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalStandardDeviationAsTime"]},{"name":"val timeIntervalStandardDeviationAsTime: Time?","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalStandardDeviationAsTime","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/time-interval-standard-deviation-as-time.html","searchKeys":["timeIntervalStandardDeviationAsTime","val timeIntervalStandardDeviationAsTime: Time?","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalStandardDeviationAsTime"]},{"name":"val timeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/time-interval-variance.html","searchKeys":["timeIntervalVariance","val timeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.timeIntervalVariance"]},{"name":"val timeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/time-interval-variance.html","searchKeys":["timeIntervalVariance","val timeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.timeIntervalVariance"]},{"name":"val timeIntervalVariance: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalVariance","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/time-interval-variance.html","searchKeys":["timeIntervalVariance","val timeIntervalVariance: Double?","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.timeIntervalVariance"]},{"name":"val uncalibratedAccelerometerAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedAccelerometerAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/uncalibrated-accelerometer-available.html","searchKeys":["uncalibratedAccelerometerAvailable","val uncalibratedAccelerometerAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedAccelerometerAvailable"]},{"name":"val uncalibratedGyroscopeAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedGyroscopeAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/uncalibrated-gyroscope-available.html","searchKeys":["uncalibratedGyroscopeAvailable","val uncalibratedGyroscopeAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedGyroscopeAvailable"]},{"name":"val uncalibratedMagnetometerAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedMagnetometerAvailable","location":"lib/com.irurueta.android.navigation.inertial/-sensor-availability-service/uncalibrated-magnetometer-available.html","searchKeys":["uncalibratedMagnetometerAvailable","val uncalibratedMagnetometerAvailable: Boolean","com.irurueta.android.navigation.inertial.SensorAvailabilityService.uncalibratedMagnetometerAvailable"]},{"name":"val usage: Float","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.usage","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/usage.html","searchKeys":["usage","val usage: Float","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.usage"]},{"name":"val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.useAccelerometer"]},{"name":"val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useAccelerometer"]},{"name":"val useAccelerometer: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = false","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useAccelerometer"]},{"name":"val useAccelerometer: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccelerometer","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/use-accelerometer.html","searchKeys":["useAccelerometer","val useAccelerometer: Boolean = true","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccelerometer"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccelerometerForAttitudeEstimation: Boolean = false","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAccelerometerForAttitudeEstimation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/use-accelerometer-for-attitude-estimation.html","searchKeys":["useAccelerometerForAttitudeEstimation","val useAccelerometerForAttitudeEstimation: Boolean = false","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAccelerometerForAttitudeEstimation"]},{"name":"val useAccurateAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/use-accurate-attitude-estimator.html","searchKeys":["useAccurateAttitudeEstimator","val useAccurateAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.useAccurateAttitudeEstimator"]},{"name":"val useAccurateAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/use-accurate-attitude-estimator.html","searchKeys":["useAccurateAttitudeEstimator","val useAccurateAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.useAccurateAttitudeEstimator"]},{"name":"val useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","val useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useAccurateLevelingProcessor"]},{"name":"val useAttitudeSensor: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAttitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-attitude-sensor.html","searchKeys":["useAttitudeSensor","val useAttitudeSensor: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAttitudeSensor"]},{"name":"val useAttitudeSensor: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAttitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-attitude-sensor.html","searchKeys":["useAttitudeSensor","val useAttitudeSensor: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAttitudeSensor"]},{"name":"val useAttitudeSensor: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAttitudeSensor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/use-attitude-sensor.html","searchKeys":["useAttitudeSensor","val useAttitudeSensor: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAttitudeSensor"]},{"name":"val useDoubleFusedAttitudeProcessor: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useDoubleFusedAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-double-fused-attitude-processor.html","searchKeys":["useDoubleFusedAttitudeProcessor","val useDoubleFusedAttitudeProcessor: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useDoubleFusedAttitudeProcessor"]},{"name":"val useDoubleFusedAttitudeProcessor: Boolean = true","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useDoubleFusedAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-double-fused-attitude-processor.html","searchKeys":["useDoubleFusedAttitudeProcessor","val useDoubleFusedAttitudeProcessor: Boolean = true","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useDoubleFusedAttitudeProcessor"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.value","location":"lib/com.irurueta.android.navigation.inertial/-location-service/-google-play-status/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.LocationService.GooglePlayStatus.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-type/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorType.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-type/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorType.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-type/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorType.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-type/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorType.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-accuracy/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.SensorAccuracy.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.SensorDelay.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-delay/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.SensorDelay.value"]},{"name":"val value: Int","description":"com.irurueta.android.navigation.inertial.collectors.SensorType.value","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-type/value.html","searchKeys":["value","val value: Int","com.irurueta.android.navigation.inertial.collectors.SensorType.value"]},{"name":"val varianceX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceX","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/variance-x.html","searchKeys":["varianceX","val varianceX: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceX"]},{"name":"val varianceY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceY","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/variance-y.html","searchKeys":["varianceY","val varianceY: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceY"]},{"name":"val varianceZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/variance-z.html","searchKeys":["varianceZ","val varianceZ: Double?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.varianceZ"]},{"name":"var a: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.a","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-phi-matrix-estimator/a.html","searchKeys":["a","var a: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.PhiMatrixEstimator.a"]},{"name":"var a: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.a","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/a.html","searchKeys":["a","var a: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.a"]},{"name":"var accelerometerBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-bias-x.html","searchKeys":["accelerometerBiasX","var accelerometerBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasX"]},{"name":"var accelerometerBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-bias-y.html","searchKeys":["accelerometerBiasY","var accelerometerBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasY"]},{"name":"var accelerometerBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-bias-z.html","searchKeys":["accelerometerBiasZ","var accelerometerBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerBiasZ"]},{"name":"var accelerometerInitialBiasAsTriad: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasAsTriad","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-as-triad.html","searchKeys":["accelerometerInitialBiasAsTriad","var accelerometerInitialBiasAsTriad: AccelerationTriad","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasAsTriad"]},{"name":"var accelerometerInitialBiasX: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-x.html","searchKeys":["accelerometerInitialBiasX","var accelerometerInitialBiasX: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasX"]},{"name":"var accelerometerInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-x.html","searchKeys":["accelerometerInitialBiasX","var accelerometerInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasX"]},{"name":"var accelerometerInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-x.html","searchKeys":["accelerometerInitialBiasX","var accelerometerInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasX"]},{"name":"var accelerometerInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-x.html","searchKeys":["accelerometerInitialBiasX","var accelerometerInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasX"]},{"name":"var accelerometerInitialBiasXAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasXAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-x-as-measurement.html","searchKeys":["accelerometerInitialBiasXAsMeasurement","var accelerometerInitialBiasXAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasXAsMeasurement"]},{"name":"var accelerometerInitialBiasY: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-y.html","searchKeys":["accelerometerInitialBiasY","var accelerometerInitialBiasY: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasY"]},{"name":"var accelerometerInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-y.html","searchKeys":["accelerometerInitialBiasY","var accelerometerInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasY"]},{"name":"var accelerometerInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-y.html","searchKeys":["accelerometerInitialBiasY","var accelerometerInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasY"]},{"name":"var accelerometerInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-y.html","searchKeys":["accelerometerInitialBiasY","var accelerometerInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasY"]},{"name":"var accelerometerInitialBiasYAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasYAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-y-as-measurement.html","searchKeys":["accelerometerInitialBiasYAsMeasurement","var accelerometerInitialBiasYAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasYAsMeasurement"]},{"name":"var accelerometerInitialBiasZ: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-z.html","searchKeys":["accelerometerInitialBiasZ","var accelerometerInitialBiasZ: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasZ"]},{"name":"var accelerometerInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-bias-z.html","searchKeys":["accelerometerInitialBiasZ","var accelerometerInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialBiasZ"]},{"name":"var accelerometerInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-bias-z.html","searchKeys":["accelerometerInitialBiasZ","var accelerometerInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialBiasZ"]},{"name":"var accelerometerInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-bias-z.html","searchKeys":["accelerometerInitialBiasZ","var accelerometerInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialBiasZ"]},{"name":"var accelerometerInitialBiasZAsMeasurement: Acceleration","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasZAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-initial-bias-z-as-measurement.html","searchKeys":["accelerometerInitialBiasZAsMeasurement","var accelerometerInitialBiasZAsMeasurement: Acceleration","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerInitialBiasZAsMeasurement"]},{"name":"var accelerometerInitialMa: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-ma.html","searchKeys":["accelerometerInitialMa","var accelerometerInitialMa: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMa"]},{"name":"var accelerometerInitialMa: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-ma.html","searchKeys":["accelerometerInitialMa","var accelerometerInitialMa: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMa"]},{"name":"var accelerometerInitialMa: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-ma.html","searchKeys":["accelerometerInitialMa","var accelerometerInitialMa: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMa"]},{"name":"var accelerometerInitialMa: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-ma.html","searchKeys":["accelerometerInitialMa","var accelerometerInitialMa: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMa"]},{"name":"var accelerometerInitialMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-mxy.html","searchKeys":["accelerometerInitialMxy","var accelerometerInitialMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMxy"]},{"name":"var accelerometerInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-mxy.html","searchKeys":["accelerometerInitialMxy","var accelerometerInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMxy"]},{"name":"var accelerometerInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-mxy.html","searchKeys":["accelerometerInitialMxy","var accelerometerInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMxy"]},{"name":"var accelerometerInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-mxy.html","searchKeys":["accelerometerInitialMxy","var accelerometerInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMxy"]},{"name":"var accelerometerInitialMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-mxz.html","searchKeys":["accelerometerInitialMxz","var accelerometerInitialMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMxz"]},{"name":"var accelerometerInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-mxz.html","searchKeys":["accelerometerInitialMxz","var accelerometerInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMxz"]},{"name":"var accelerometerInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-mxz.html","searchKeys":["accelerometerInitialMxz","var accelerometerInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMxz"]},{"name":"var accelerometerInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-mxz.html","searchKeys":["accelerometerInitialMxz","var accelerometerInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMxz"]},{"name":"var accelerometerInitialMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-myx.html","searchKeys":["accelerometerInitialMyx","var accelerometerInitialMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMyx"]},{"name":"var accelerometerInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-myx.html","searchKeys":["accelerometerInitialMyx","var accelerometerInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMyx"]},{"name":"var accelerometerInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-myx.html","searchKeys":["accelerometerInitialMyx","var accelerometerInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMyx"]},{"name":"var accelerometerInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-myx.html","searchKeys":["accelerometerInitialMyx","var accelerometerInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMyx"]},{"name":"var accelerometerInitialMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-myz.html","searchKeys":["accelerometerInitialMyz","var accelerometerInitialMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMyz"]},{"name":"var accelerometerInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-myz.html","searchKeys":["accelerometerInitialMyz","var accelerometerInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMyz"]},{"name":"var accelerometerInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-myz.html","searchKeys":["accelerometerInitialMyz","var accelerometerInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMyz"]},{"name":"var accelerometerInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-myz.html","searchKeys":["accelerometerInitialMyz","var accelerometerInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMyz"]},{"name":"var accelerometerInitialMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-mzx.html","searchKeys":["accelerometerInitialMzx","var accelerometerInitialMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMzx"]},{"name":"var accelerometerInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-mzx.html","searchKeys":["accelerometerInitialMzx","var accelerometerInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMzx"]},{"name":"var accelerometerInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-mzx.html","searchKeys":["accelerometerInitialMzx","var accelerometerInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMzx"]},{"name":"var accelerometerInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-mzx.html","searchKeys":["accelerometerInitialMzx","var accelerometerInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMzx"]},{"name":"var accelerometerInitialMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-mzy.html","searchKeys":["accelerometerInitialMzy","var accelerometerInitialMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialMzy"]},{"name":"var accelerometerInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-mzy.html","searchKeys":["accelerometerInitialMzy","var accelerometerInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialMzy"]},{"name":"var accelerometerInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-mzy.html","searchKeys":["accelerometerInitialMzy","var accelerometerInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialMzy"]},{"name":"var accelerometerInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-mzy.html","searchKeys":["accelerometerInitialMzy","var accelerometerInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialMzy"]},{"name":"var accelerometerInitialSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-sx.html","searchKeys":["accelerometerInitialSx","var accelerometerInitialSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSx"]},{"name":"var accelerometerInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-sx.html","searchKeys":["accelerometerInitialSx","var accelerometerInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSx"]},{"name":"var accelerometerInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-sx.html","searchKeys":["accelerometerInitialSx","var accelerometerInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSx"]},{"name":"var accelerometerInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-sx.html","searchKeys":["accelerometerInitialSx","var accelerometerInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSx"]},{"name":"var accelerometerInitialSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-sy.html","searchKeys":["accelerometerInitialSy","var accelerometerInitialSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSy"]},{"name":"var accelerometerInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-sy.html","searchKeys":["accelerometerInitialSy","var accelerometerInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSy"]},{"name":"var accelerometerInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-sy.html","searchKeys":["accelerometerInitialSy","var accelerometerInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSy"]},{"name":"var accelerometerInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-sy.html","searchKeys":["accelerometerInitialSy","var accelerometerInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSy"]},{"name":"var accelerometerInitialSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-initial-sz.html","searchKeys":["accelerometerInitialSz","var accelerometerInitialSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerInitialSz"]},{"name":"var accelerometerInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-initial-sz.html","searchKeys":["accelerometerInitialSz","var accelerometerInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerInitialSz"]},{"name":"var accelerometerInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-initial-sz.html","searchKeys":["accelerometerInitialSz","var accelerometerInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerInitialSz"]},{"name":"var accelerometerInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-initial-sz.html","searchKeys":["accelerometerInitialSz","var accelerometerInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerInitialSz"]},{"name":"var accelerometerMa: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-ma.html","searchKeys":["accelerometerMa","var accelerometerMa: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMa"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurement: AccelerometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.accelerometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-synced-sensor-measurement/accelerometer-measurement.html","searchKeys":["accelerometerMeasurement","var accelerometerMeasurement: AccelerometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.accelerometerMeasurement"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.accelerometerMeasurementListener"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.accelerometerMeasurementListener"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.accelerometerMeasurementListener"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.accelerometerMeasurementListener"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.accelerometerMeasurementListener"]},{"name":"var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/accelerometer-measurement-listener.html","searchKeys":["accelerometerMeasurementListener","var accelerometerMeasurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.accelerometerMeasurementListener"]},{"name":"var accelerometerMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-mxy.html","searchKeys":["accelerometerMxy","var accelerometerMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMxy"]},{"name":"var accelerometerMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-mxy.html","searchKeys":["accelerometerMxy","var accelerometerMxy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMxy"]},{"name":"var accelerometerMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-mxz.html","searchKeys":["accelerometerMxz","var accelerometerMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMxz"]},{"name":"var accelerometerMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-mxz.html","searchKeys":["accelerometerMxz","var accelerometerMxz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMxz"]},{"name":"var accelerometerMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-myx.html","searchKeys":["accelerometerMyx","var accelerometerMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMyx"]},{"name":"var accelerometerMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-myx.html","searchKeys":["accelerometerMyx","var accelerometerMyx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMyx"]},{"name":"var accelerometerMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-myz.html","searchKeys":["accelerometerMyz","var accelerometerMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMyz"]},{"name":"var accelerometerMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-myz.html","searchKeys":["accelerometerMyz","var accelerometerMyz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMyz"]},{"name":"var accelerometerMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-mzx.html","searchKeys":["accelerometerMzx","var accelerometerMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMzx"]},{"name":"var accelerometerMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-mzx.html","searchKeys":["accelerometerMzx","var accelerometerMzx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMzx"]},{"name":"var accelerometerMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-mzy.html","searchKeys":["accelerometerMzy","var accelerometerMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerMzy"]},{"name":"var accelerometerMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-mzy.html","searchKeys":["accelerometerMzy","var accelerometerMzy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerMzy"]},{"name":"var accelerometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.accelerometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/accelerometer-noise-standard-deviation.html","searchKeys":["accelerometerNoiseStandardDeviation","var accelerometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.accelerometerNoiseStandardDeviation"]},{"name":"var accelerometerResiduals: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.accelerometerResiduals","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-suh-external-acceleration-covariance-matrix-estimator/accelerometer-residuals.html","searchKeys":["accelerometerResiduals","var accelerometerResiduals: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.SuhExternalAccelerationCovarianceMatrixEstimator.accelerometerResiduals"]},{"name":"var accelerometerResultUnreliable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerResultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-result-unreliable.html","searchKeys":["accelerometerResultUnreliable","var accelerometerResultUnreliable: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerResultUnreliable"]},{"name":"var accelerometerResultUnreliable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerResultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-result-unreliable.html","searchKeys":["accelerometerResultUnreliable","var accelerometerResultUnreliable: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerResultUnreliable"]},{"name":"var accelerometerResultUnreliable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerResultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-result-unreliable.html","searchKeys":["accelerometerResultUnreliable","var accelerometerResultUnreliable: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerResultUnreliable"]},{"name":"var accelerometerRobustConfidence: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-confidence.html","searchKeys":["accelerometerRobustConfidence","var accelerometerRobustConfidence: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustConfidence"]},{"name":"var accelerometerRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-confidence.html","searchKeys":["accelerometerRobustConfidence","var accelerometerRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustConfidence"]},{"name":"var accelerometerRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-confidence.html","searchKeys":["accelerometerRobustConfidence","var accelerometerRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustConfidence"]},{"name":"var accelerometerRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-confidence.html","searchKeys":["accelerometerRobustConfidence","var accelerometerRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustConfidence"]},{"name":"var accelerometerRobustMaxIterations: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-max-iterations.html","searchKeys":["accelerometerRobustMaxIterations","var accelerometerRobustMaxIterations: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustMaxIterations"]},{"name":"var accelerometerRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-max-iterations.html","searchKeys":["accelerometerRobustMaxIterations","var accelerometerRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustMaxIterations"]},{"name":"var accelerometerRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-max-iterations.html","searchKeys":["accelerometerRobustMaxIterations","var accelerometerRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustMaxIterations"]},{"name":"var accelerometerRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-max-iterations.html","searchKeys":["accelerometerRobustMaxIterations","var accelerometerRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustMaxIterations"]},{"name":"var accelerometerRobustMethod: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-method.html","searchKeys":["accelerometerRobustMethod","var accelerometerRobustMethod: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustMethod"]},{"name":"var accelerometerRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-method.html","searchKeys":["accelerometerRobustMethod","var accelerometerRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustMethod"]},{"name":"var accelerometerRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-method.html","searchKeys":["accelerometerRobustMethod","var accelerometerRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustMethod"]},{"name":"var accelerometerRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-method.html","searchKeys":["accelerometerRobustMethod","var accelerometerRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustMethod"]},{"name":"var accelerometerRobustPreliminarySubsetSize: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-preliminary-subset-size.html","searchKeys":["accelerometerRobustPreliminarySubsetSize","var accelerometerRobustPreliminarySubsetSize: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustPreliminarySubsetSize"]},{"name":"var accelerometerRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-preliminary-subset-size.html","searchKeys":["accelerometerRobustPreliminarySubsetSize","var accelerometerRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustPreliminarySubsetSize"]},{"name":"var accelerometerRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-preliminary-subset-size.html","searchKeys":["accelerometerRobustPreliminarySubsetSize","var accelerometerRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustPreliminarySubsetSize"]},{"name":"var accelerometerRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-preliminary-subset-size.html","searchKeys":["accelerometerRobustPreliminarySubsetSize","var accelerometerRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustPreliminarySubsetSize"]},{"name":"var accelerometerRobustStopThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-stop-threshold-factor.html","searchKeys":["accelerometerRobustStopThresholdFactor","var accelerometerRobustStopThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustStopThresholdFactor"]},{"name":"var accelerometerRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-stop-threshold-factor.html","searchKeys":["accelerometerRobustStopThresholdFactor","var accelerometerRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustStopThresholdFactor"]},{"name":"var accelerometerRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-stop-threshold-factor.html","searchKeys":["accelerometerRobustStopThresholdFactor","var accelerometerRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustStopThresholdFactor"]},{"name":"var accelerometerRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-stop-threshold-factor.html","searchKeys":["accelerometerRobustStopThresholdFactor","var accelerometerRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustStopThresholdFactor"]},{"name":"var accelerometerRobustThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-threshold.html","searchKeys":["accelerometerRobustThreshold","var accelerometerRobustThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustThreshold"]},{"name":"var accelerometerRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-threshold.html","searchKeys":["accelerometerRobustThreshold","var accelerometerRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustThreshold"]},{"name":"var accelerometerRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-threshold.html","searchKeys":["accelerometerRobustThreshold","var accelerometerRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustThreshold"]},{"name":"var accelerometerRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-threshold.html","searchKeys":["accelerometerRobustThreshold","var accelerometerRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustThreshold"]},{"name":"var accelerometerRobustThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/accelerometer-robust-threshold-factor.html","searchKeys":["accelerometerRobustThresholdFactor","var accelerometerRobustThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.accelerometerRobustThresholdFactor"]},{"name":"var accelerometerRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/accelerometer-robust-threshold-factor.html","searchKeys":["accelerometerRobustThresholdFactor","var accelerometerRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.accelerometerRobustThresholdFactor"]},{"name":"var accelerometerRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/accelerometer-robust-threshold-factor.html","searchKeys":["accelerometerRobustThresholdFactor","var accelerometerRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.accelerometerRobustThresholdFactor"]},{"name":"var accelerometerRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/accelerometer-robust-threshold-factor.html","searchKeys":["accelerometerRobustThresholdFactor","var accelerometerRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.accelerometerRobustThresholdFactor"]},{"name":"var accelerometerSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-sx.html","searchKeys":["accelerometerSx","var accelerometerSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSx"]},{"name":"var accelerometerSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-sx.html","searchKeys":["accelerometerSx","var accelerometerSx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSx"]},{"name":"var accelerometerSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-sy.html","searchKeys":["accelerometerSy","var accelerometerSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSy"]},{"name":"var accelerometerSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-sy.html","searchKeys":["accelerometerSy","var accelerometerSy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSy"]},{"name":"var accelerometerSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/accelerometer-sz.html","searchKeys":["accelerometerSz","var accelerometerSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.accelerometerSz"]},{"name":"var accelerometerSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/accelerometer-sz.html","searchKeys":["accelerometerSz","var accelerometerSz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.accelerometerSz"]},{"name":"var accuracy: SensorAccuracy?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.accuracy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/accuracy.html","searchKeys":["accuracy","var accuracy: SensorAccuracy?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.accuracy"]},{"name":"var accuracy: SensorAccuracy?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.accuracy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/accuracy.html","searchKeys":["accuracy","var accuracy: SensorAccuracy?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.accuracy"]},{"name":"var accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: AttitudeEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: BufferedSensorCollector.OnAccuracyChangedListener<M, C>?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.accuracyChangedListener"]},{"name":"var accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: EcefAbsolutePoseEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: FusedGeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: GeomagneticAttitudeEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: KalmanAbsoluteAttitudeEstimator.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.accuracyChangedListener"]},{"name":"var accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: KalmanRelativeAttitudeEstimator.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.accuracyChangedListener"]},{"name":"var accuracyChangedListener: L2?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: L2?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: L2?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: L2?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: LeveledRelativeAttitudeEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: LocalPoseEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: RelativePoseEstimator2.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.accuracyChangedListener"]},{"name":"var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.accuracyChangedListener"]},{"name":"var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: SensorCollector.OnAccuracyChangedListener?","com.irurueta.android.navigation.inertial.collectors.SensorCollector.accuracyChangedListener"]},{"name":"var accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: SensorCollector2.OnAccuracyChangedListener<M, C>?","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.accuracyChangedListener"]},{"name":"var accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.accuracyChangedListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/accuracy-changed-listener.html","searchKeys":["accuracyChangedListener","var accuracyChangedListener: SensorMeasurementSyncer.OnAccuracyChangedListener<M, S>?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.accuracyChangedListener"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.adjustGravityNorm"]},{"name":"var adjustGravityNorm: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.adjustGravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/adjust-gravity-norm.html","searchKeys":["adjustGravityNorm","var adjustGravityNorm: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.adjustGravityNorm"]},{"name":"var attitude: Quaternion","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.attitude","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/attitude.html","searchKeys":["attitude","var attitude: Quaternion","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.attitude"]},{"name":"var attitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.attitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/attitude.html","searchKeys":["attitude","var attitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.attitude"]},{"name":"var attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: AttitudeEstimator2.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: DoubleFusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: FusedGeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: GeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: GeomagneticAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: GeomagneticAttitudeEstimator2.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: KalmanAbsoluteAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: KalmanRelativeAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: L1?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: L1?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: L?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: L?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: LeveledRelativeAttitudeEstimator.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.attitudeAvailableListener"]},{"name":"var attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.attitudeAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/attitude-available-listener.html","searchKeys":["attitudeAvailableListener","var attitudeAvailableListener: LeveledRelativeAttitudeEstimator2.OnAttitudeAvailableListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.attitudeAvailableListener"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeIndirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeIndirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/attitude-indirect-interpolation-weight.html","searchKeys":["attitudeIndirectInterpolationWeight","var attitudeIndirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeIndirectInterpolationWeight"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeInterpolationValue"]},{"name":"var attitudeInterpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeInterpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/attitude-interpolation-value.html","searchKeys":["attitudeInterpolationValue","var attitudeInterpolationValue: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeInterpolationValue"]},{"name":"var attitudeMeasurement: AttitudeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.attitudeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement/attitude-measurement.html","searchKeys":["attitudeMeasurement","var attitudeMeasurement: AttitudeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.attitudeMeasurement"]},{"name":"var attitudeMeasurement: AttitudeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.attitudeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/attitude-measurement.html","searchKeys":["attitudeMeasurement","var attitudeMeasurement: AttitudeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.attitudeMeasurement"]},{"name":"var attitudeMeasurement: AttitudeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.attitudeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-and-accelerometer-synced-sensor-measurement/attitude-measurement.html","searchKeys":["attitudeMeasurement","var attitudeMeasurement: AttitudeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAndAccelerometerSyncedSensorMeasurement.attitudeMeasurement"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeOutlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/attitude-outlier-panic-threshold.html","searchKeys":["attitudeOutlierPanicThreshold","var attitudeOutlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeOutlierPanicThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudeOutlierThreshold"]},{"name":"var attitudeOutlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeOutlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/attitude-outlier-threshold.html","searchKeys":["attitudeOutlierThreshold","var attitudeOutlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudeOutlierThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.attitudePanicCounterThreshold"]},{"name":"var attitudePanicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudePanicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/attitude-panic-counter-threshold.html","searchKeys":["attitudePanicCounterThreshold","var attitudePanicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.attitudePanicCounterThreshold"]},{"name":"var ax: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.ax","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/ax.html","searchKeys":["ax","var ax: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.ax"]},{"name":"var ay: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.ay","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/ay.html","searchKeys":["ay","var ay: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.ay"]},{"name":"var az: Float","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.az","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/az.html","searchKeys":["az","var az: Float","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.az"]},{"name":"var baseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.baseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/base-noise-level.html","searchKeys":["baseNoiseLevel","var baseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.baseNoiseLevel"]},{"name":"var baseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.baseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/base-noise-level.html","searchKeys":["baseNoiseLevel","var baseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.baseNoiseLevel"]},{"name":"var baseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.baseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/base-noise-level.html","searchKeys":["baseNoiseLevel","var baseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.baseNoiseLevel"]},{"name":"var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAbsoluteThreshold"]},{"name":"var baseNoiseLevelAbsoluteThreshold: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level-absolute-threshold.html","searchKeys":["baseNoiseLevelAbsoluteThreshold","var baseNoiseLevelAbsoluteThreshold: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAbsoluteThreshold"]},{"name":"var baseNoiseLevelAbsoluteThresholdAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","var baseNoiseLevelAbsoluteThresholdAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"var baseNoiseLevelAbsoluteThresholdAsMeasurement: M","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["baseNoiseLevelAbsoluteThresholdAsMeasurement","var baseNoiseLevelAbsoluteThresholdAsMeasurement: M","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.baseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"var batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener?","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.batteryTemperatureChangedListener","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/battery-temperature-changed-listener.html","searchKeys":["batteryTemperatureChangedListener","var batteryTemperatureChangedListener: BatteryTemperatureService.OnBatteryTemperatureChangedListener?","com.irurueta.android.navigation.inertial.BatteryTemperatureService.batteryTemperatureChangedListener"]},{"name":"var bodyAccelerationMatrix: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.bodyAccelerationMatrix","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/body-acceleration-matrix.html","searchKeys":["bodyAccelerationMatrix","var bodyAccelerationMatrix: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.bodyAccelerationMatrix"]},{"name":"var bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: BufferedSensorCollector.OnBufferFilledListener<M, C>?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.bufferFilledListener"]},{"name":"var bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: DoubleFusedGeomagneticAttitudeEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: EcefAbsolutePoseEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: FusedGeomagneticAttitudeEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: GeomagneticAttitudeEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: KalmanAbsoluteAttitudeEstimator.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.bufferFilledListener"]},{"name":"var bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: KalmanRelativeAttitudeEstimator.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.bufferFilledListener"]},{"name":"var bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: LeveledRelativeAttitudeEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: LocalPoseEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: RelativePoseEstimator2.OnBufferFilledListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.bufferFilledListener"]},{"name":"var bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.bufferFilledListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/buffer-filled-listener.html","searchKeys":["bufferFilledListener","var bufferFilledListener: SensorMeasurementSyncer.OnBufferFilledListener<M, S>?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.bufferFilledListener"]},{"name":"var bx: Float","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.bx","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/bx.html","searchKeys":["bx","var bx: Float","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.bx"]},{"name":"var bx: Float?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.bx","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/bx.html","searchKeys":["bx","var bx: Float?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.bx"]},{"name":"var bx: Float?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.bx","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/bx.html","searchKeys":["bx","var bx: Float?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.bx"]},{"name":"var by: Float","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.by","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/by.html","searchKeys":["by","var by: Float","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.by"]},{"name":"var by: Float?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.by","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/by.html","searchKeys":["by","var by: Float?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.by"]},{"name":"var by: Float?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.by","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/by.html","searchKeys":["by","var by: Float?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.by"]},{"name":"var bz: Float","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.bz","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/bz.html","searchKeys":["bz","var bz: Float","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.bz"]},{"name":"var bz: Float?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.bz","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/bz.html","searchKeys":["bz","var bz: Float?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.bz"]},{"name":"var bz: Float?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.bz","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/bz.html","searchKeys":["bz","var bz: Float?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.bz"]},{"name":"var calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/calibration-completed-listener.html","searchKeys":["calibrationCompletedListener","var calibrationCompletedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrationCompletedListener"]},{"name":"var calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrationSolvingStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/calibration-solving-started-listener.html","searchKeys":["calibrationSolvingStartedListener","var calibrationSolvingStartedListener: SingleSensorStaticIntervalCalibrator.OnCalibrationSolvingStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.calibrationSolvingStartedListener"]},{"name":"var completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.completedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/completed-listener.html","searchKeys":["completedListener","var completedListener: AccumulatedMeasurementEstimator.OnEstimationCompletedListener<A>?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.completedListener"]},{"name":"var completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.completedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/completed-listener.html","searchKeys":["completedListener","var completedListener: AccumulatedTriadEstimator.OnEstimationCompletedListener<A>?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.completedListener"]},{"name":"var computeCovariances: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeCovariances","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/compute-covariances.html","searchKeys":["computeCovariances","var computeCovariances: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeCovariances"]},{"name":"var computeEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/compute-euler-angles.html","searchKeys":["computeEulerAngles","var computeEulerAngles: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeEulerAngles"]},{"name":"var computeEulerAngles: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeEulerAngles","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/compute-euler-angles.html","searchKeys":["computeEulerAngles","var computeEulerAngles: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeEulerAngles"]},{"name":"var computeEulerAnglesCovariance: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeEulerAnglesCovariance","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/compute-euler-angles-covariance.html","searchKeys":["computeEulerAnglesCovariance","var computeEulerAnglesCovariance: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeEulerAnglesCovariance"]},{"name":"var computeExternalAcceleration: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/compute-external-acceleration.html","searchKeys":["computeExternalAcceleration","var computeExternalAcceleration: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.computeExternalAcceleration"]},{"name":"var computeExternalAcceleration: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeExternalAcceleration","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/compute-external-acceleration.html","searchKeys":["computeExternalAcceleration","var computeExternalAcceleration: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.computeExternalAcceleration"]},{"name":"var correctedBodyQ: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.correctedBodyQ","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/corrected-body-q.html","searchKeys":["correctedBodyQ","var correctedBodyQ: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.correctedBodyQ"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.currentDate"]},{"name":"var currentDate: Date?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.currentDate","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/current-date.html","searchKeys":["currentDate","var currentDate: Date?","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.currentDate"]},{"name":"var currentTemperature: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.currentTemperature","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/current-temperature.html","searchKeys":["currentTemperature","var currentTemperature: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.currentTemperature"]},{"name":"var dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","var dynamicIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalDetectedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.dynamicIntervalDetectedListener"]},{"name":"var dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","var dynamicIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalDetectedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.dynamicIntervalDetectedListener"]},{"name":"var dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","var dynamicIntervalDetectedListener: IntervalDetector.OnDynamicIntervalDetectedListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.dynamicIntervalDetectedListener"]},{"name":"var dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.dynamicIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/dynamic-interval-detected-listener.html","searchKeys":["dynamicIntervalDetectedListener","var dynamicIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.dynamicIntervalDetectedListener"]},{"name":"var dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","var dynamicIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnDynamicIntervalSkippedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.dynamicIntervalSkippedListener"]},{"name":"var dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","var dynamicIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnDynamicIntervalSkippedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.dynamicIntervalSkippedListener"]},{"name":"var dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.dynamicIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/dynamic-interval-skipped-listener.html","searchKeys":["dynamicIntervalSkippedListener","var dynamicIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnDynamicIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.dynamicIntervalSkippedListener"]},{"name":"var epsilon: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.epsilon","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/epsilon.html","searchKeys":["epsilon","var epsilon: Double","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.epsilon"]},{"name":"var errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/error-listener.html","searchKeys":["errorListener","var errorListener: AccelerometerAndGyroscopeMeasurementGenerator.OnErrorListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.errorListener"]},{"name":"var errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/error-listener.html","searchKeys":["errorListener","var errorListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnErrorListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.errorListener"]},{"name":"var errorListener: IntervalDetector.OnErrorListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/error-listener.html","searchKeys":["errorListener","var errorListener: IntervalDetector.OnErrorListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.errorListener"]},{"name":"var errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/error-listener.html","searchKeys":["errorListener","var errorListener: SingleSensorCalibrationMeasurementGenerator.OnErrorListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.errorListener"]},{"name":"var errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.errorListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/error-listener.html","searchKeys":["errorListener","var errorListener: SingleSensorStaticIntervalCalibrator.OnErrorListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.errorListener"]},{"name":"var estimatedAccelerometerBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-x.html","searchKeys":["estimatedAccelerometerBiasX","var estimatedAccelerometerBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasX"]},{"name":"var estimatedAccelerometerBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-y.html","searchKeys":["estimatedAccelerometerBiasY","var estimatedAccelerometerBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasY"]},{"name":"var estimatedAccelerometerBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/estimated-accelerometer-bias-z.html","searchKeys":["estimatedAccelerometerBiasZ","var estimatedAccelerometerBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.estimatedAccelerometerBiasZ"]},{"name":"var estimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.estimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/estimation-listener.html","searchKeys":["estimationListener","var estimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.estimationListener"]},{"name":"var generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.generatedAccelerometerMeasurementListener"]},{"name":"var generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedAccelerometerMeasurementListener"]},{"name":"var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.generatedAccelerometerMeasurementListener"]},{"name":"var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerCalibrator.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.generatedAccelerometerMeasurementListener"]},{"name":"var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedAccelerometerMeasurementListener"]},{"name":"var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedAccelerometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/generated-accelerometer-measurement-listener.html","searchKeys":["generatedAccelerometerMeasurementListener","var generatedAccelerometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedAccelerometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedAccelerometerMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: AccelerometerAndGyroscopeMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.generatedGyroscopeMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedGyroscopeMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.generatedGyroscopeMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedGyroscopeMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedGyroscopeMeasurementListener"]},{"name":"var generatedGyroscopeMeasurementListener: StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.generatedGyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/generated-gyroscope-measurement-listener.html","searchKeys":["generatedGyroscopeMeasurementListener","var generatedGyroscopeMeasurementListener: StaticIntervalGyroscopeCalibrator.OnGeneratedGyroscopeMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.generatedGyroscopeMeasurementListener"]},{"name":"var generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/generated-magnetometer-measurement-listener.html","searchKeys":["generatedMagnetometerMeasurementListener","var generatedMagnetometerMeasurementListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnGeneratedMagnetometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.generatedMagnetometerMeasurementListener"]},{"name":"var generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/generated-magnetometer-measurement-listener.html","searchKeys":["generatedMagnetometerMeasurementListener","var generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.generatedMagnetometerMeasurementListener"]},{"name":"var generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/generated-magnetometer-measurement-listener.html","searchKeys":["generatedMagnetometerMeasurementListener","var generatedMagnetometerMeasurementListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnGeneratedMagnetometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.generatedMagnetometerMeasurementListener"]},{"name":"var generatedMagnetometerMeasurementListener: StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.generatedMagnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/generated-magnetometer-measurement-listener.html","searchKeys":["generatedMagnetometerMeasurementListener","var generatedMagnetometerMeasurementListener: StaticIntervalMagnetometerCalibrator.OnGeneratedMagnetometerMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.generatedMagnetometerMeasurementListener"]},{"name":"var generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.generatedMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/generated-measurement-listener.html","searchKeys":["generatedMeasurementListener","var generatedMeasurementListener: SingleSensorCalibrationMeasurementGenerator.OnGeneratedMeasurementListener<C, T>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.generatedMeasurementListener"]},{"name":"var gravity: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.gravity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/gravity.html","searchKeys":["gravity","var gravity: Double","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.gravity"]},{"name":"var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.gravityEstimationListener"]},{"name":"var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.gravityEstimationListener"]},{"name":"var gravityEstimationListener: GravityEstimator.OnEstimationListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gravityEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/gravity-estimation-listener.html","searchKeys":["gravityEstimationListener","var gravityEstimationListener: GravityEstimator.OnEstimationListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gravityEstimationListener"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurement: GravitySensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gravityMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/gravity-measurement.html","searchKeys":["gravityMeasurement","var gravityMeasurement: GravitySensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gravityMeasurement"]},{"name":"var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.gravityMeasurementListener"]},{"name":"var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.gravityMeasurementListener"]},{"name":"var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gravityMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/gravity-measurement-listener.html","searchKeys":["gravityMeasurementListener","var gravityMeasurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gravityMeasurementListener"]},{"name":"var gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gravityNorm"]},{"name":"var gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.gravityNorm"]},{"name":"var gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.gravityNorm"]},{"name":"var gravityNorm: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.gravityNorm"]},{"name":"var gravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.gravityNorm"]},{"name":"var gravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gravityNorm"]},{"name":"var gravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.gravityNorm"]},{"name":"var gravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gravityNorm"]},{"name":"var gravityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.gravityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/gravity-norm.html","searchKeys":["gravityNorm","var gravityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.gravityNorm"]},{"name":"var groundTruthMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.groundTruthMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/ground-truth-magnetic-flux-density-norm.html","searchKeys":["groundTruthMagneticFluxDensityNorm","var groundTruthMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.groundTruthMagneticFluxDensityNorm"]},{"name":"var gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/gx.html","searchKeys":["gx","var gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gx"]},{"name":"var gx: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gx","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/gx.html","searchKeys":["gx","var gx: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gx"]},{"name":"var gx: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gx","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/gx.html","searchKeys":["gx","var gx: Float","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gx"]},{"name":"var gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/gy.html","searchKeys":["gy","var gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gy"]},{"name":"var gy: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gy","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/gy.html","searchKeys":["gy","var gy: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gy"]},{"name":"var gy: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/gy.html","searchKeys":["gy","var gy: Float","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gy"]},{"name":"var gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","var gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevel"]},{"name":"var gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","var gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeBaseNoiseLevel"]},{"name":"var gyroscopeBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-base-noise-level.html","searchKeys":["gyroscopeBaseNoiseLevel","var gyroscopeBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeBaseNoiseLevel"]},{"name":"var gyroscopeInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-x.html","searchKeys":["gyroscopeInitialBiasX","var gyroscopeInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasX"]},{"name":"var gyroscopeInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-x.html","searchKeys":["gyroscopeInitialBiasX","var gyroscopeInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasX"]},{"name":"var gyroscopeInitialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-x.html","searchKeys":["gyroscopeInitialBiasX","var gyroscopeInitialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasX"]},{"name":"var gyroscopeInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-y.html","searchKeys":["gyroscopeInitialBiasY","var gyroscopeInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasY"]},{"name":"var gyroscopeInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-y.html","searchKeys":["gyroscopeInitialBiasY","var gyroscopeInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasY"]},{"name":"var gyroscopeInitialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-y.html","searchKeys":["gyroscopeInitialBiasY","var gyroscopeInitialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasY"]},{"name":"var gyroscopeInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-bias-z.html","searchKeys":["gyroscopeInitialBiasZ","var gyroscopeInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialBiasZ"]},{"name":"var gyroscopeInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-bias-z.html","searchKeys":["gyroscopeInitialBiasZ","var gyroscopeInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialBiasZ"]},{"name":"var gyroscopeInitialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-bias-z.html","searchKeys":["gyroscopeInitialBiasZ","var gyroscopeInitialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialBiasZ"]},{"name":"var gyroscopeInitialGg: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-gg.html","searchKeys":["gyroscopeInitialGg","var gyroscopeInitialGg: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialGg"]},{"name":"var gyroscopeInitialGg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-gg.html","searchKeys":["gyroscopeInitialGg","var gyroscopeInitialGg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialGg"]},{"name":"var gyroscopeInitialGg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-gg.html","searchKeys":["gyroscopeInitialGg","var gyroscopeInitialGg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialGg"]},{"name":"var gyroscopeInitialGg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialGg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-gg.html","searchKeys":["gyroscopeInitialGg","var gyroscopeInitialGg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialGg"]},{"name":"var gyroscopeInitialGg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.gyroscopeInitialGg","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/gyroscope-initial-gg.html","searchKeys":["gyroscopeInitialGg","var gyroscopeInitialGg: Matrix","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.gyroscopeInitialGg"]},{"name":"var gyroscopeInitialMg: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-mg.html","searchKeys":["gyroscopeInitialMg","var gyroscopeInitialMg: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMg"]},{"name":"var gyroscopeInitialMg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-mg.html","searchKeys":["gyroscopeInitialMg","var gyroscopeInitialMg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMg"]},{"name":"var gyroscopeInitialMg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-mg.html","searchKeys":["gyroscopeInitialMg","var gyroscopeInitialMg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMg"]},{"name":"var gyroscopeInitialMg: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMg","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-mg.html","searchKeys":["gyroscopeInitialMg","var gyroscopeInitialMg: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMg"]},{"name":"var gyroscopeInitialMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-mxy.html","searchKeys":["gyroscopeInitialMxy","var gyroscopeInitialMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMxy"]},{"name":"var gyroscopeInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-mxy.html","searchKeys":["gyroscopeInitialMxy","var gyroscopeInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMxy"]},{"name":"var gyroscopeInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-mxy.html","searchKeys":["gyroscopeInitialMxy","var gyroscopeInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMxy"]},{"name":"var gyroscopeInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-mxy.html","searchKeys":["gyroscopeInitialMxy","var gyroscopeInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMxy"]},{"name":"var gyroscopeInitialMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-mxz.html","searchKeys":["gyroscopeInitialMxz","var gyroscopeInitialMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMxz"]},{"name":"var gyroscopeInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-mxz.html","searchKeys":["gyroscopeInitialMxz","var gyroscopeInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMxz"]},{"name":"var gyroscopeInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-mxz.html","searchKeys":["gyroscopeInitialMxz","var gyroscopeInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMxz"]},{"name":"var gyroscopeInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-mxz.html","searchKeys":["gyroscopeInitialMxz","var gyroscopeInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMxz"]},{"name":"var gyroscopeInitialMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-myx.html","searchKeys":["gyroscopeInitialMyx","var gyroscopeInitialMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMyx"]},{"name":"var gyroscopeInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-myx.html","searchKeys":["gyroscopeInitialMyx","var gyroscopeInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMyx"]},{"name":"var gyroscopeInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-myx.html","searchKeys":["gyroscopeInitialMyx","var gyroscopeInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMyx"]},{"name":"var gyroscopeInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-myx.html","searchKeys":["gyroscopeInitialMyx","var gyroscopeInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMyx"]},{"name":"var gyroscopeInitialMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-myz.html","searchKeys":["gyroscopeInitialMyz","var gyroscopeInitialMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMyz"]},{"name":"var gyroscopeInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-myz.html","searchKeys":["gyroscopeInitialMyz","var gyroscopeInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMyz"]},{"name":"var gyroscopeInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-myz.html","searchKeys":["gyroscopeInitialMyz","var gyroscopeInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMyz"]},{"name":"var gyroscopeInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-myz.html","searchKeys":["gyroscopeInitialMyz","var gyroscopeInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMyz"]},{"name":"var gyroscopeInitialMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-mzx.html","searchKeys":["gyroscopeInitialMzx","var gyroscopeInitialMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMzx"]},{"name":"var gyroscopeInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-mzx.html","searchKeys":["gyroscopeInitialMzx","var gyroscopeInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMzx"]},{"name":"var gyroscopeInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-mzx.html","searchKeys":["gyroscopeInitialMzx","var gyroscopeInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMzx"]},{"name":"var gyroscopeInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-mzx.html","searchKeys":["gyroscopeInitialMzx","var gyroscopeInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMzx"]},{"name":"var gyroscopeInitialMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-mzy.html","searchKeys":["gyroscopeInitialMzy","var gyroscopeInitialMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialMzy"]},{"name":"var gyroscopeInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-mzy.html","searchKeys":["gyroscopeInitialMzy","var gyroscopeInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialMzy"]},{"name":"var gyroscopeInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-mzy.html","searchKeys":["gyroscopeInitialMzy","var gyroscopeInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialMzy"]},{"name":"var gyroscopeInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-mzy.html","searchKeys":["gyroscopeInitialMzy","var gyroscopeInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialMzy"]},{"name":"var gyroscopeInitialSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-sx.html","searchKeys":["gyroscopeInitialSx","var gyroscopeInitialSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSx"]},{"name":"var gyroscopeInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-sx.html","searchKeys":["gyroscopeInitialSx","var gyroscopeInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSx"]},{"name":"var gyroscopeInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-sx.html","searchKeys":["gyroscopeInitialSx","var gyroscopeInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSx"]},{"name":"var gyroscopeInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-sx.html","searchKeys":["gyroscopeInitialSx","var gyroscopeInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSx"]},{"name":"var gyroscopeInitialSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-sy.html","searchKeys":["gyroscopeInitialSy","var gyroscopeInitialSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSy"]},{"name":"var gyroscopeInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-sy.html","searchKeys":["gyroscopeInitialSy","var gyroscopeInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSy"]},{"name":"var gyroscopeInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-sy.html","searchKeys":["gyroscopeInitialSy","var gyroscopeInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSy"]},{"name":"var gyroscopeInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-sy.html","searchKeys":["gyroscopeInitialSy","var gyroscopeInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSy"]},{"name":"var gyroscopeInitialSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-initial-sz.html","searchKeys":["gyroscopeInitialSz","var gyroscopeInitialSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeInitialSz"]},{"name":"var gyroscopeInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-initial-sz.html","searchKeys":["gyroscopeInitialSz","var gyroscopeInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeInitialSz"]},{"name":"var gyroscopeInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-initial-sz.html","searchKeys":["gyroscopeInitialSz","var gyroscopeInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeInitialSz"]},{"name":"var gyroscopeInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-initial-sz.html","searchKeys":["gyroscopeInitialSz","var gyroscopeInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeInitialSz"]},{"name":"var gyroscopeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gyroscopeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/gyroscope-interval-seconds.html","searchKeys":["gyroscopeIntervalSeconds","var gyroscopeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.gyroscopeIntervalSeconds"]},{"name":"var gyroscopeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.gyroscopeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/gyroscope-interval-seconds.html","searchKeys":["gyroscopeIntervalSeconds","var gyroscopeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.gyroscopeIntervalSeconds"]},{"name":"var gyroscopeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gyroscopeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/gyroscope-interval-seconds.html","searchKeys":["gyroscopeIntervalSeconds","var gyroscopeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.gyroscopeIntervalSeconds"]},{"name":"var gyroscopeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gyroscopeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/gyroscope-interval-seconds.html","searchKeys":["gyroscopeIntervalSeconds","var gyroscopeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.gyroscopeIntervalSeconds"]},{"name":"var gyroscopeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.gyroscopeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/gyroscope-interval-seconds.html","searchKeys":["gyroscopeIntervalSeconds","var gyroscopeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.gyroscopeIntervalSeconds"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-gyroscope-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-and-gyroscope-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-accelerometer-gravity-and-gyroscope-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AttitudeAccelerometerGravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-gyroscope-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityAndGyroscopeSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurement: GyroscopeSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/gyroscope-measurement.html","searchKeys":["gyroscopeMeasurement","var gyroscopeMeasurement: GyroscopeSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.gyroscopeMeasurement"]},{"name":"var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.gyroscopeMeasurementListener"]},{"name":"var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.gyroscopeMeasurementListener"]},{"name":"var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.gyroscopeMeasurementListener"]},{"name":"var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.gyroscopeMeasurementListener"]},{"name":"var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/gyroscope-measurement-listener.html","searchKeys":["gyroscopeMeasurementListener","var gyroscopeMeasurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.gyroscopeMeasurementListener"]},{"name":"var gyroscopeRobustConfidence: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-confidence.html","searchKeys":["gyroscopeRobustConfidence","var gyroscopeRobustConfidence: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustConfidence"]},{"name":"var gyroscopeRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-confidence.html","searchKeys":["gyroscopeRobustConfidence","var gyroscopeRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustConfidence"]},{"name":"var gyroscopeRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-confidence.html","searchKeys":["gyroscopeRobustConfidence","var gyroscopeRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustConfidence"]},{"name":"var gyroscopeRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-confidence.html","searchKeys":["gyroscopeRobustConfidence","var gyroscopeRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustConfidence"]},{"name":"var gyroscopeRobustMaxIterations: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-max-iterations.html","searchKeys":["gyroscopeRobustMaxIterations","var gyroscopeRobustMaxIterations: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustMaxIterations"]},{"name":"var gyroscopeRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-max-iterations.html","searchKeys":["gyroscopeRobustMaxIterations","var gyroscopeRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustMaxIterations"]},{"name":"var gyroscopeRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-max-iterations.html","searchKeys":["gyroscopeRobustMaxIterations","var gyroscopeRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustMaxIterations"]},{"name":"var gyroscopeRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-max-iterations.html","searchKeys":["gyroscopeRobustMaxIterations","var gyroscopeRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustMaxIterations"]},{"name":"var gyroscopeRobustMethod: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-method.html","searchKeys":["gyroscopeRobustMethod","var gyroscopeRobustMethod: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustMethod"]},{"name":"var gyroscopeRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-method.html","searchKeys":["gyroscopeRobustMethod","var gyroscopeRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustMethod"]},{"name":"var gyroscopeRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-method.html","searchKeys":["gyroscopeRobustMethod","var gyroscopeRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustMethod"]},{"name":"var gyroscopeRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-method.html","searchKeys":["gyroscopeRobustMethod","var gyroscopeRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustMethod"]},{"name":"var gyroscopeRobustPreliminarySubsetSize: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-preliminary-subset-size.html","searchKeys":["gyroscopeRobustPreliminarySubsetSize","var gyroscopeRobustPreliminarySubsetSize: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustPreliminarySubsetSize"]},{"name":"var gyroscopeRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-preliminary-subset-size.html","searchKeys":["gyroscopeRobustPreliminarySubsetSize","var gyroscopeRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustPreliminarySubsetSize"]},{"name":"var gyroscopeRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-preliminary-subset-size.html","searchKeys":["gyroscopeRobustPreliminarySubsetSize","var gyroscopeRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustPreliminarySubsetSize"]},{"name":"var gyroscopeRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-preliminary-subset-size.html","searchKeys":["gyroscopeRobustPreliminarySubsetSize","var gyroscopeRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustPreliminarySubsetSize"]},{"name":"var gyroscopeRobustStopThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-stop-threshold-factor.html","searchKeys":["gyroscopeRobustStopThresholdFactor","var gyroscopeRobustStopThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustStopThresholdFactor"]},{"name":"var gyroscopeRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-stop-threshold-factor.html","searchKeys":["gyroscopeRobustStopThresholdFactor","var gyroscopeRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustStopThresholdFactor"]},{"name":"var gyroscopeRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-stop-threshold-factor.html","searchKeys":["gyroscopeRobustStopThresholdFactor","var gyroscopeRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustStopThresholdFactor"]},{"name":"var gyroscopeRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-stop-threshold-factor.html","searchKeys":["gyroscopeRobustStopThresholdFactor","var gyroscopeRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustStopThresholdFactor"]},{"name":"var gyroscopeRobustThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-threshold.html","searchKeys":["gyroscopeRobustThreshold","var gyroscopeRobustThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustThreshold"]},{"name":"var gyroscopeRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-threshold.html","searchKeys":["gyroscopeRobustThreshold","var gyroscopeRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustThreshold"]},{"name":"var gyroscopeRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-threshold.html","searchKeys":["gyroscopeRobustThreshold","var gyroscopeRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustThreshold"]},{"name":"var gyroscopeRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-threshold.html","searchKeys":["gyroscopeRobustThreshold","var gyroscopeRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustThreshold"]},{"name":"var gyroscopeRobustThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/gyroscope-robust-threshold-factor.html","searchKeys":["gyroscopeRobustThresholdFactor","var gyroscopeRobustThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.gyroscopeRobustThresholdFactor"]},{"name":"var gyroscopeRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/gyroscope-robust-threshold-factor.html","searchKeys":["gyroscopeRobustThresholdFactor","var gyroscopeRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.gyroscopeRobustThresholdFactor"]},{"name":"var gyroscopeRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/gyroscope-robust-threshold-factor.html","searchKeys":["gyroscopeRobustThresholdFactor","var gyroscopeRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.gyroscopeRobustThresholdFactor"]},{"name":"var gyroscopeRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/gyroscope-robust-threshold-factor.html","searchKeys":["gyroscopeRobustThresholdFactor","var gyroscopeRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.gyroscopeRobustThresholdFactor"]},{"name":"var gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/gz.html","searchKeys":["gz","var gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.gz"]},{"name":"var gz: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gz","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/gz.html","searchKeys":["gz","var gz: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.gz"]},{"name":"var gz: Float","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gz","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-measurement/gz.html","searchKeys":["gz","var gz: Float","com.irurueta.android.navigation.inertial.collectors.GravitySensorMeasurement.gz"]},{"name":"var ha: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.ha","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/ha.html","searchKeys":["ha","var ha: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.ha"]},{"name":"var hardIronX: Float?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronX","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/hard-iron-x.html","searchKeys":["hardIronX","var hardIronX: Float?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronX"]},{"name":"var hardIronY: Float?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronY","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/hard-iron-y.html","searchKeys":["hardIronY","var hardIronY: Float?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronY"]},{"name":"var hardIronZ: Float?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronZ","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/hard-iron-z.html","searchKeys":["hardIronZ","var hardIronZ: Float?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.hardIronZ"]},{"name":"var headingAccuracy: Float?","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.headingAccuracy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/heading-accuracy.html","searchKeys":["headingAccuracy","var headingAccuracy: Float?","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.headingAccuracy"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.indirectInterpolationWeight"]},{"name":"var indirectInterpolationWeight: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.indirectInterpolationWeight","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/indirect-interpolation-weight.html","searchKeys":["indirectInterpolationWeight","var indirectInterpolationWeight: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.indirectInterpolationWeight"]},{"name":"var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.initialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/initial-accelerometer-bias-available-listener.html","searchKeys":["initialAccelerometerBiasAvailableListener","var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialAccelerometerBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.initialAccelerometerBiasAvailableListener"]},{"name":"var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.initialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/initial-accelerometer-bias-available-listener.html","searchKeys":["initialAccelerometerBiasAvailableListener","var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerCalibrator.OnInitialAccelerometerBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.initialAccelerometerBiasAvailableListener"]},{"name":"var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/initial-accelerometer-bias-available-listener.html","searchKeys":["initialAccelerometerBiasAvailableListener","var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialAccelerometerBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialAccelerometerBiasAvailableListener"]},{"name":"var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialAccelerometerBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initial-accelerometer-bias-available-listener.html","searchKeys":["initialAccelerometerBiasAvailableListener","var initialAccelerometerBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialAccelerometerBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialAccelerometerBiasAvailableListener"]},{"name":"var initialBiasAvailableListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-available-listener.html","searchKeys":["initialBiasAvailableListener","var initialBiasAvailableListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnInitialBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasAvailableListener"]},{"name":"var initialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-x.html","searchKeys":["initialBiasX","var initialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasX"]},{"name":"var initialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-bias-x.html","searchKeys":["initialBiasX","var initialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasX"]},{"name":"var initialBiasX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasX","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-bias-x.html","searchKeys":["initialBiasX","var initialBiasX: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasX"]},{"name":"var initialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-y.html","searchKeys":["initialBiasY","var initialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasY"]},{"name":"var initialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-bias-y.html","searchKeys":["initialBiasY","var initialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasY"]},{"name":"var initialBiasY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasY","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-bias-y.html","searchKeys":["initialBiasY","var initialBiasY: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasY"]},{"name":"var initialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-bias-z.html","searchKeys":["initialBiasZ","var initialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialBiasZ"]},{"name":"var initialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-bias-z.html","searchKeys":["initialBiasZ","var initialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialBiasZ"]},{"name":"var initialBiasZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-bias-z.html","searchKeys":["initialBiasZ","var initialBiasZ: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialBiasZ"]},{"name":"var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.initialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/initial-gyroscope-bias-available-listener.html","searchKeys":["initialGyroscopeBiasAvailableListener","var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.initialGyroscopeBiasAvailableListener"]},{"name":"var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/initial-gyroscope-bias-available-listener.html","searchKeys":["initialGyroscopeBiasAvailableListener","var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialGyroscopeBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialGyroscopeBiasAvailableListener"]},{"name":"var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initial-gyroscope-bias-available-listener.html","searchKeys":["initialGyroscopeBiasAvailableListener","var initialGyroscopeBiasAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialGyroscopeBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialGyroscopeBiasAvailableListener"]},{"name":"var initialGyroscopeBiasAvailableListener: StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.initialGyroscopeBiasAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/initial-gyroscope-bias-available-listener.html","searchKeys":["initialGyroscopeBiasAvailableListener","var initialGyroscopeBiasAvailableListener: StaticIntervalGyroscopeCalibrator.OnInitialGyroscopeBiasAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.initialGyroscopeBiasAvailableListener"]},{"name":"var initialHardIronAvailableListener: SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-available-listener.html","searchKeys":["initialHardIronAvailableListener","var initialHardIronAvailableListener: SingleSensorStaticIntervalMagnetometerCalibrator.OnInitialHardIronAvailableListener?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronAvailableListener"]},{"name":"var initialHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-x.html","searchKeys":["initialHardIronX","var initialHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronX"]},{"name":"var initialHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-hard-iron-x.html","searchKeys":["initialHardIronX","var initialHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronX"]},{"name":"var initialHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-y.html","searchKeys":["initialHardIronY","var initialHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronY"]},{"name":"var initialHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-hard-iron-y.html","searchKeys":["initialHardIronY","var initialHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronY"]},{"name":"var initialHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-hard-iron-z.html","searchKeys":["initialHardIronZ","var initialHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialHardIronZ"]},{"name":"var initialHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-hard-iron-z.html","searchKeys":["initialHardIronZ","var initialHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialHardIronZ"]},{"name":"var initialLocation: Location?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.initialLocation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/initial-location.html","searchKeys":["initialLocation","var initialLocation: Location?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.initialLocation"]},{"name":"var initialMa: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialMa","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/initial-ma.html","searchKeys":["initialMa","var initialMa: Matrix","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.initialMa"]},{"name":"var initialMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","var initialMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialMagneticFluxDensityNorm"]},{"name":"var initialMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","var initialMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialMagneticFluxDensityNorm"]},{"name":"var initialMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","var initialMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.initialMagneticFluxDensityNorm"]},{"name":"var initialMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","var initialMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initialMagneticFluxDensityNorm"]},{"name":"var initialMagneticFluxDensityNorm: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.initialMagneticFluxDensityNorm","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/initial-magnetic-flux-density-norm.html","searchKeys":["initialMagneticFluxDensityNorm","var initialMagneticFluxDensityNorm: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.initialMagneticFluxDensityNorm"]},{"name":"var initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/initial-magnetometer-hard-iron-available-listener.html","searchKeys":["initialMagnetometerHardIronAvailableListener","var initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.initialMagnetometerHardIronAvailableListener"]},{"name":"var initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/initial-magnetometer-hard-iron-available-listener.html","searchKeys":["initialMagnetometerHardIronAvailableListener","var initialMagnetometerHardIronAvailableListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnInitialMagnetometerHardIronAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.initialMagnetometerHardIronAvailableListener"]},{"name":"var initialMagnetometerHardIronAvailableListener: StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.initialMagnetometerHardIronAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/initial-magnetometer-hard-iron-available-listener.html","searchKeys":["initialMagnetometerHardIronAvailableListener","var initialMagnetometerHardIronAvailableListener: StaticIntervalMagnetometerCalibrator.OnInitialMagnetometerHardIronAvailableListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.initialMagnetometerHardIronAvailableListener"]},{"name":"var initialMm: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/initial-mm.html","searchKeys":["initialMm","var initialMm: Matrix","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.initialMm"]},{"name":"var initialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-mxy.html","searchKeys":["initialMxy","var initialMxy: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMxy"]},{"name":"var initialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-mxy.html","searchKeys":["initialMxy","var initialMxy: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMxy"]},{"name":"var initialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-mxy.html","searchKeys":["initialMxy","var initialMxy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMxy"]},{"name":"var initialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-mxy.html","searchKeys":["initialMxy","var initialMxy: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMxy"]},{"name":"var initialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-mxz.html","searchKeys":["initialMxz","var initialMxz: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMxz"]},{"name":"var initialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-mxz.html","searchKeys":["initialMxz","var initialMxz: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMxz"]},{"name":"var initialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-mxz.html","searchKeys":["initialMxz","var initialMxz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMxz"]},{"name":"var initialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-mxz.html","searchKeys":["initialMxz","var initialMxz: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMxz"]},{"name":"var initialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-myx.html","searchKeys":["initialMyx","var initialMyx: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMyx"]},{"name":"var initialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-myx.html","searchKeys":["initialMyx","var initialMyx: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMyx"]},{"name":"var initialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-myx.html","searchKeys":["initialMyx","var initialMyx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMyx"]},{"name":"var initialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-myx.html","searchKeys":["initialMyx","var initialMyx: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMyx"]},{"name":"var initialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-myz.html","searchKeys":["initialMyz","var initialMyz: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMyz"]},{"name":"var initialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-myz.html","searchKeys":["initialMyz","var initialMyz: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMyz"]},{"name":"var initialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-myz.html","searchKeys":["initialMyz","var initialMyz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMyz"]},{"name":"var initialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-myz.html","searchKeys":["initialMyz","var initialMyz: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMyz"]},{"name":"var initialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-mzx.html","searchKeys":["initialMzx","var initialMzx: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMzx"]},{"name":"var initialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-mzx.html","searchKeys":["initialMzx","var initialMzx: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMzx"]},{"name":"var initialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-mzx.html","searchKeys":["initialMzx","var initialMzx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMzx"]},{"name":"var initialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-mzx.html","searchKeys":["initialMzx","var initialMzx: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMzx"]},{"name":"var initialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-mzy.html","searchKeys":["initialMzy","var initialMzy: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialMzy"]},{"name":"var initialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-mzy.html","searchKeys":["initialMzy","var initialMzy: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialMzy"]},{"name":"var initialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-mzy.html","searchKeys":["initialMzy","var initialMzy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialMzy"]},{"name":"var initialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-mzy.html","searchKeys":["initialMzy","var initialMzy: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialMzy"]},{"name":"var initialSpeed: SpeedTriad","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.initialSpeed","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/initial-speed.html","searchKeys":["initialSpeed","var initialSpeed: SpeedTriad","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.initialSpeed"]},{"name":"var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-static-samples.html","searchKeys":["initialStaticSamples","var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialStaticSamples"]},{"name":"var initialStaticSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initialStaticSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/initial-static-samples.html","searchKeys":["initialStaticSamples","var initialStaticSamples: Int","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initialStaticSamples"]},{"name":"var initialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-sx.html","searchKeys":["initialSx","var initialSx: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSx"]},{"name":"var initialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-sx.html","searchKeys":["initialSx","var initialSx: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSx"]},{"name":"var initialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-sx.html","searchKeys":["initialSx","var initialSx: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSx"]},{"name":"var initialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-sx.html","searchKeys":["initialSx","var initialSx: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSx"]},{"name":"var initialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-sy.html","searchKeys":["initialSy","var initialSy: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSy"]},{"name":"var initialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-sy.html","searchKeys":["initialSy","var initialSy: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSy"]},{"name":"var initialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-sy.html","searchKeys":["initialSy","var initialSy: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSy"]},{"name":"var initialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-sy.html","searchKeys":["initialSy","var initialSy: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSy"]},{"name":"var initialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initial-sz.html","searchKeys":["initialSz","var initialSz: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initialSz"]},{"name":"var initialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/initial-sz.html","searchKeys":["initialSz","var initialSz: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.initialSz"]},{"name":"var initialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/initial-sz.html","searchKeys":["initialSz","var initialSz: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.initialSz"]},{"name":"var initialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/initial-sz.html","searchKeys":["initialSz","var initialSz: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.initialSz"]},{"name":"var initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","var initializationCompletedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationCompletedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initializationCompletedListener"]},{"name":"var initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","var initializationCompletedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationCompletedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initializationCompletedListener"]},{"name":"var initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","var initializationCompletedListener: IntervalDetector.OnInitializationCompletedListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initializationCompletedListener"]},{"name":"var initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","var initializationCompletedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initializationCompletedListener"]},{"name":"var initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initializationCompletedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initialization-completed-listener.html","searchKeys":["initializationCompletedListener","var initializationCompletedListener: SingleSensorStaticIntervalCalibrator.OnInitializationCompletedListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initializationCompletedListener"]},{"name":"var initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/initialization-started-listener.html","searchKeys":["initializationStartedListener","var initializationStartedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnInitializationStartedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.initializationStartedListener"]},{"name":"var initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/initialization-started-listener.html","searchKeys":["initializationStartedListener","var initializationStartedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnInitializationStartedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.initializationStartedListener"]},{"name":"var initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/initialization-started-listener.html","searchKeys":["initializationStartedListener","var initializationStartedListener: IntervalDetector.OnInitializationStartedListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.initializationStartedListener"]},{"name":"var initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/initialization-started-listener.html","searchKeys":["initializationStartedListener","var initializationStartedListener: SingleSensorCalibrationMeasurementGenerator.OnInitializationStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.initializationStartedListener"]},{"name":"var initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initializationStartedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/initialization-started-listener.html","searchKeys":["initializationStartedListener","var initializationStartedListener: SingleSensorStaticIntervalCalibrator.OnInitializationStartedListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.initializationStartedListener"]},{"name":"var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.instantaneousNoiseLevelFactor"]},{"name":"var instantaneousNoiseLevelFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousNoiseLevelFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/instantaneous-noise-level-factor.html","searchKeys":["instantaneousNoiseLevelFactor","var instantaneousNoiseLevelFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.instantaneousNoiseLevelFactor"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.interpolationValue"]},{"name":"var interpolationValue: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.interpolationValue","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/interpolation-value.html","searchKeys":["interpolationValue","var interpolationValue: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.interpolationValue"]},{"name":"var isAccelerometerCommonAxisUsed: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isAccelerometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-accelerometer-common-axis-used.html","searchKeys":["isAccelerometerCommonAxisUsed","var isAccelerometerCommonAxisUsed: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isAccelerometerCommonAxisUsed"]},{"name":"var isAccelerometerCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isAccelerometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-accelerometer-common-axis-used.html","searchKeys":["isAccelerometerCommonAxisUsed","var isAccelerometerCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isAccelerometerCommonAxisUsed"]},{"name":"var isAccelerometerCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isAccelerometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/is-accelerometer-common-axis-used.html","searchKeys":["isAccelerometerCommonAxisUsed","var isAccelerometerCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isAccelerometerCommonAxisUsed"]},{"name":"var isAccelerometerCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isAccelerometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-accelerometer-common-axis-used.html","searchKeys":["isAccelerometerCommonAxisUsed","var isAccelerometerCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isAccelerometerCommonAxisUsed"]},{"name":"var isAccelerometerGroundTruthInitialBias: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isAccelerometerGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-accelerometer-ground-truth-initial-bias.html","searchKeys":["isAccelerometerGroundTruthInitialBias","var isAccelerometerGroundTruthInitialBias: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isAccelerometerGroundTruthInitialBias"]},{"name":"var isAccelerometerGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isAccelerometerGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-accelerometer-ground-truth-initial-bias.html","searchKeys":["isAccelerometerGroundTruthInitialBias","var isAccelerometerGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isAccelerometerGroundTruthInitialBias"]},{"name":"var isAccelerometerGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isAccelerometerGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/is-accelerometer-ground-truth-initial-bias.html","searchKeys":["isAccelerometerGroundTruthInitialBias","var isAccelerometerGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.isAccelerometerGroundTruthInitialBias"]},{"name":"var isAccelerometerGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isAccelerometerGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-accelerometer-ground-truth-initial-bias.html","searchKeys":["isAccelerometerGroundTruthInitialBias","var isAccelerometerGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isAccelerometerGroundTruthInitialBias"]},{"name":"var isAccelerometerGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isAccelerometerGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/is-accelerometer-ground-truth-initial-bias.html","searchKeys":["isAccelerometerGroundTruthInitialBias","var isAccelerometerGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isAccelerometerGroundTruthInitialBias"]},{"name":"var isCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.isCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/is-common-axis-used.html","searchKeys":["isCommonAxisUsed","var isCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.isCommonAxisUsed"]},{"name":"var isCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.isCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/is-common-axis-used.html","searchKeys":["isCommonAxisUsed","var isCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.isCommonAxisUsed"]},{"name":"var isCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/is-common-axis-used.html","searchKeys":["isCommonAxisUsed","var isCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isCommonAxisUsed"]},{"name":"var isCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.isCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/is-common-axis-used.html","searchKeys":["isCommonAxisUsed","var isCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.isCommonAxisUsed"]},{"name":"var isGDependentCrossBiasesEstimated: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGDependentCrossBiasesEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-g-dependent-cross-biases-estimated.html","searchKeys":["isGDependentCrossBiasesEstimated","var isGDependentCrossBiasesEstimated: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGDependentCrossBiasesEstimated"]},{"name":"var isGDependentCrossBiasesEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGDependentCrossBiasesEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-g-dependent-cross-biases-estimated.html","searchKeys":["isGDependentCrossBiasesEstimated","var isGDependentCrossBiasesEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGDependentCrossBiasesEstimated"]},{"name":"var isGDependentCrossBiasesEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGDependentCrossBiasesEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-g-dependent-cross-biases-estimated.html","searchKeys":["isGDependentCrossBiasesEstimated","var isGDependentCrossBiasesEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGDependentCrossBiasesEstimated"]},{"name":"var isGDependentCrossBiasesEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGDependentCrossBiasesEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/is-g-dependent-cross-biases-estimated.html","searchKeys":["isGDependentCrossBiasesEstimated","var isGDependentCrossBiasesEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGDependentCrossBiasesEstimated"]},{"name":"var isGDependentCrossBiasesEstimated: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isGDependentCrossBiasesEstimated","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/is-g-dependent-cross-biases-estimated.html","searchKeys":["isGDependentCrossBiasesEstimated","var isGDependentCrossBiasesEstimated: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isGDependentCrossBiasesEstimated"]},{"name":"var isGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.isGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/is-ground-truth-initial-bias.html","searchKeys":["isGroundTruthInitialBias","var isGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.isGroundTruthInitialBias"]},{"name":"var isGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.isGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/is-ground-truth-initial-bias.html","searchKeys":["isGroundTruthInitialBias","var isGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.isGroundTruthInitialBias"]},{"name":"var isGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/is-ground-truth-initial-bias.html","searchKeys":["isGroundTruthInitialBias","var isGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.isGroundTruthInitialBias"]},{"name":"var isGroundTruthInitialHardIron: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.isGroundTruthInitialHardIron","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/is-ground-truth-initial-hard-iron.html","searchKeys":["isGroundTruthInitialHardIron","var isGroundTruthInitialHardIron: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.isGroundTruthInitialHardIron"]},{"name":"var isGroundTruthInitialHardIron: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.isGroundTruthInitialHardIron","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/is-ground-truth-initial-hard-iron.html","searchKeys":["isGroundTruthInitialHardIron","var isGroundTruthInitialHardIron: Boolean","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.isGroundTruthInitialHardIron"]},{"name":"var isGyroscopeCommonAxisUsed: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGyroscopeCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-gyroscope-common-axis-used.html","searchKeys":["isGyroscopeCommonAxisUsed","var isGyroscopeCommonAxisUsed: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGyroscopeCommonAxisUsed"]},{"name":"var isGyroscopeCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGyroscopeCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-gyroscope-common-axis-used.html","searchKeys":["isGyroscopeCommonAxisUsed","var isGyroscopeCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGyroscopeCommonAxisUsed"]},{"name":"var isGyroscopeCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGyroscopeCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-gyroscope-common-axis-used.html","searchKeys":["isGyroscopeCommonAxisUsed","var isGyroscopeCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGyroscopeCommonAxisUsed"]},{"name":"var isGyroscopeCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGyroscopeCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/is-gyroscope-common-axis-used.html","searchKeys":["isGyroscopeCommonAxisUsed","var isGyroscopeCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGyroscopeCommonAxisUsed"]},{"name":"var isGyroscopeGroundTruthInitialBias: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGyroscopeGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-gyroscope-ground-truth-initial-bias.html","searchKeys":["isGyroscopeGroundTruthInitialBias","var isGyroscopeGroundTruthInitialBias: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isGyroscopeGroundTruthInitialBias"]},{"name":"var isGyroscopeGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGyroscopeGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/is-gyroscope-ground-truth-initial-bias.html","searchKeys":["isGyroscopeGroundTruthInitialBias","var isGyroscopeGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.isGyroscopeGroundTruthInitialBias"]},{"name":"var isGyroscopeGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGyroscopeGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-gyroscope-ground-truth-initial-bias.html","searchKeys":["isGyroscopeGroundTruthInitialBias","var isGyroscopeGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isGyroscopeGroundTruthInitialBias"]},{"name":"var isGyroscopeGroundTruthInitialBias: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGyroscopeGroundTruthInitialBias","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-gyroscope-calibrator/is-gyroscope-ground-truth-initial-bias.html","searchKeys":["isGyroscopeGroundTruthInitialBias","var isGyroscopeGroundTruthInitialBias: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalGyroscopeCalibrator.isGyroscopeGroundTruthInitialBias"]},{"name":"var isMagnetometerCommonAxisUsed: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isMagnetometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-magnetometer-common-axis-used.html","searchKeys":["isMagnetometerCommonAxisUsed","var isMagnetometerCommonAxisUsed: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isMagnetometerCommonAxisUsed"]},{"name":"var isMagnetometerCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isMagnetometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-magnetometer-common-axis-used.html","searchKeys":["isMagnetometerCommonAxisUsed","var isMagnetometerCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isMagnetometerCommonAxisUsed"]},{"name":"var isMagnetometerCommonAxisUsed: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isMagnetometerCommonAxisUsed","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/is-magnetometer-common-axis-used.html","searchKeys":["isMagnetometerCommonAxisUsed","var isMagnetometerCommonAxisUsed: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isMagnetometerCommonAxisUsed"]},{"name":"var isMagnetometerGroundTruthInitialHardIron: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isMagnetometerGroundTruthInitialHardIron","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/is-magnetometer-ground-truth-initial-hard-iron.html","searchKeys":["isMagnetometerGroundTruthInitialHardIron","var isMagnetometerGroundTruthInitialHardIron: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.isMagnetometerGroundTruthInitialHardIron"]},{"name":"var isMagnetometerGroundTruthInitialHardIron: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isMagnetometerGroundTruthInitialHardIron","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/is-magnetometer-ground-truth-initial-hard-iron.html","searchKeys":["isMagnetometerGroundTruthInitialHardIron","var isMagnetometerGroundTruthInitialHardIron: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.isMagnetometerGroundTruthInitialHardIron"]},{"name":"var isMagnetometerGroundTruthInitialHardIron: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isMagnetometerGroundTruthInitialHardIron","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/is-magnetometer-ground-truth-initial-hard-iron.html","searchKeys":["isMagnetometerGroundTruthInitialHardIron","var isMagnetometerGroundTruthInitialHardIron: Boolean","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.isMagnetometerGroundTruthInitialHardIron"]},{"name":"var kalmanErrorCovAccelerometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanErrorCovAccelerometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/kalman-error-cov-accelerometer-corrected.html","searchKeys":["kalmanErrorCovAccelerometerCorrected","var kalmanErrorCovAccelerometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanErrorCovAccelerometerCorrected"]},{"name":"var kalmanErrorCovPostPredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.kalmanErrorCovPostPredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-external-acceleration-covariance-matrix-estimator/kalman-error-cov-post-predicted.html","searchKeys":["kalmanErrorCovPostPredicted","var kalmanErrorCovPostPredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.ExternalAccelerationCovarianceMatrixEstimator.kalmanErrorCovPostPredicted"]},{"name":"var kalmanErrorCovPostPredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanErrorCovPostPredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/kalman-error-cov-post-predicted.html","searchKeys":["kalmanErrorCovPostPredicted","var kalmanErrorCovPostPredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanErrorCovPostPredicted"]},{"name":"var kalmanErrorCovPrePredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanErrorCovPrePredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/kalman-error-cov-pre-predicted.html","searchKeys":["kalmanErrorCovPrePredicted","var kalmanErrorCovPrePredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanErrorCovPrePredicted"]},{"name":"var kalmanStateAccelerometerCorrected: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanStateAccelerometerCorrected","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/kalman-state-accelerometer-corrected.html","searchKeys":["kalmanStateAccelerometerCorrected","var kalmanStateAccelerometerCorrected: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.kalmanStateAccelerometerCorrected"]},{"name":"var kalmanStatePostPredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanStatePostPredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/kalman-state-post-predicted.html","searchKeys":["kalmanStatePostPredicted","var kalmanStatePostPredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.kalmanStatePostPredicted"]},{"name":"var kalmanStatePrePredicted: Matrix","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanStatePrePredicted","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/kalman-state-pre-predicted.html","searchKeys":["kalmanStatePrePredicted","var kalmanStatePrePredicted: Matrix","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.kalmanStatePrePredicted"]},{"name":"var levelingAvailableListener: L1?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.levelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator2/leveling-available-listener.html","searchKeys":["levelingAvailableListener","var levelingAvailableListener: L1?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator2.levelingAvailableListener"]},{"name":"var levelingAvailableListener: L?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.levelingAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-leveling-estimator/leveling-available-listener.html","searchKeys":["levelingAvailableListener","var levelingAvailableListener: L?","com.irurueta.android.navigation.inertial.estimators.attitude.BaseLevelingEstimator.levelingAvailableListener"]},{"name":"var location: Location","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator/location.html","searchKeys":["location","var location: Location","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator.location"]},{"name":"var location: Location","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-accurate-leveling-estimator2/location.html","searchKeys":["location","var location: Location","com.irurueta.android.navigation.inertial.estimators.attitude.AccurateLevelingEstimator2.location"]},{"name":"var location: Location","description":"com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-accurate-leveling-processor/location.html","searchKeys":["location","var location: Location","com.irurueta.android.navigation.inertial.processors.attitude.AccurateLevelingProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.location","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.location","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.location","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveling-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.attitude.LevelingEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.location","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.location"]},{"name":"var location: Location?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.location","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/location.html","searchKeys":["location","var location: Location?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.location"]},{"name":"var locationUpdateListener: LocationService.OnLocationUpdateListener?","description":"com.irurueta.android.navigation.inertial.LocationService.locationUpdateListener","location":"lib/com.irurueta.android.navigation.inertial/-location-service/location-update-listener.html","searchKeys":["locationUpdateListener","var locationUpdateListener: LocationService.OnLocationUpdateListener?","com.irurueta.android.navigation.inertial.LocationService.locationUpdateListener"]},{"name":"var magneticDeclination: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.magneticDeclination","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/magnetic-declination.html","searchKeys":["magneticDeclination","var magneticDeclination: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.magneticDeclination"]},{"name":"var magneticDeclination: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magneticDeclination","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/magnetic-declination.html","searchKeys":["magneticDeclination","var magneticDeclination: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magneticDeclination"]},{"name":"var magneticDeclination: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticDeclination","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/magnetic-declination.html","searchKeys":["magneticDeclination","var magneticDeclination: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticDeclination"]},{"name":"var magneticDip: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.magneticDip","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/magnetic-dip.html","searchKeys":["magneticDip","var magneticDip: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.magneticDip"]},{"name":"var magneticDip: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magneticDip","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/magnetic-dip.html","searchKeys":["magneticDip","var magneticDip: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.magneticDip"]},{"name":"var magneticDip: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticDip","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/magnetic-dip.html","searchKeys":["magneticDip","var magneticDip: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticDip"]},{"name":"var magneticFluxDensity: MagneticFluxDensityTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticFluxDensity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/magnetic-flux-density.html","searchKeys":["magneticFluxDensity","var magneticFluxDensity: MagneticFluxDensityTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.magneticFluxDensity"]},{"name":"var magneticFluxDensity: MagneticFluxDensityTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.magneticFluxDensity","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/magnetic-flux-density.html","searchKeys":["magneticFluxDensity","var magneticFluxDensity: MagneticFluxDensityTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.magneticFluxDensity"]},{"name":"var magnetometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-base-noise-level.html","searchKeys":["magnetometerBaseNoiseLevel","var magnetometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerBaseNoiseLevel"]},{"name":"var magnetometerBaseNoiseLevel: Double?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerBaseNoiseLevel","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-base-noise-level.html","searchKeys":["magnetometerBaseNoiseLevel","var magnetometerBaseNoiseLevel: Double?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerBaseNoiseLevel"]},{"name":"var magnetometerBaseNoiseLevelAbsoluteThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAbsoluteThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level-absolute-threshold.html","searchKeys":["magnetometerBaseNoiseLevelAbsoluteThreshold","var magnetometerBaseNoiseLevelAbsoluteThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAbsoluteThreshold"]},{"name":"var magnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-base-noise-level-absolute-threshold-as-measurement.html","searchKeys":["magnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement","var magnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerBaseNoiseLevelAbsoluteThresholdAsMeasurement"]},{"name":"var magnetometerInitialHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-x.html","searchKeys":["magnetometerInitialHardIronX","var magnetometerInitialHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronX"]},{"name":"var magnetometerInitialHardIronX: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronX","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-x.html","searchKeys":["magnetometerInitialHardIronX","var magnetometerInitialHardIronX: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronX"]},{"name":"var magnetometerInitialHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-y.html","searchKeys":["magnetometerInitialHardIronY","var magnetometerInitialHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronY"]},{"name":"var magnetometerInitialHardIronY: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronY","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-y.html","searchKeys":["magnetometerInitialHardIronY","var magnetometerInitialHardIronY: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronY"]},{"name":"var magnetometerInitialHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-hard-iron-z.html","searchKeys":["magnetometerInitialHardIronZ","var magnetometerInitialHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialHardIronZ"]},{"name":"var magnetometerInitialHardIronZ: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronZ","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-hard-iron-z.html","searchKeys":["magnetometerInitialHardIronZ","var magnetometerInitialHardIronZ: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialHardIronZ"]},{"name":"var magnetometerInitialMm: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-mm.html","searchKeys":["magnetometerInitialMm","var magnetometerInitialMm: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMm"]},{"name":"var magnetometerInitialMm: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-mm.html","searchKeys":["magnetometerInitialMm","var magnetometerInitialMm: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMm"]},{"name":"var magnetometerInitialMm: Matrix","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMm","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-mm.html","searchKeys":["magnetometerInitialMm","var magnetometerInitialMm: Matrix","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMm"]},{"name":"var magnetometerInitialMxy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-mxy.html","searchKeys":["magnetometerInitialMxy","var magnetometerInitialMxy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMxy"]},{"name":"var magnetometerInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-mxy.html","searchKeys":["magnetometerInitialMxy","var magnetometerInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMxy"]},{"name":"var magnetometerInitialMxy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMxy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-mxy.html","searchKeys":["magnetometerInitialMxy","var magnetometerInitialMxy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMxy"]},{"name":"var magnetometerInitialMxz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-mxz.html","searchKeys":["magnetometerInitialMxz","var magnetometerInitialMxz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMxz"]},{"name":"var magnetometerInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-mxz.html","searchKeys":["magnetometerInitialMxz","var magnetometerInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMxz"]},{"name":"var magnetometerInitialMxz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMxz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-mxz.html","searchKeys":["magnetometerInitialMxz","var magnetometerInitialMxz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMxz"]},{"name":"var magnetometerInitialMyx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-myx.html","searchKeys":["magnetometerInitialMyx","var magnetometerInitialMyx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMyx"]},{"name":"var magnetometerInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-myx.html","searchKeys":["magnetometerInitialMyx","var magnetometerInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMyx"]},{"name":"var magnetometerInitialMyx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMyx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-myx.html","searchKeys":["magnetometerInitialMyx","var magnetometerInitialMyx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMyx"]},{"name":"var magnetometerInitialMyz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-myz.html","searchKeys":["magnetometerInitialMyz","var magnetometerInitialMyz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMyz"]},{"name":"var magnetometerInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-myz.html","searchKeys":["magnetometerInitialMyz","var magnetometerInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMyz"]},{"name":"var magnetometerInitialMyz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMyz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-myz.html","searchKeys":["magnetometerInitialMyz","var magnetometerInitialMyz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMyz"]},{"name":"var magnetometerInitialMzx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-mzx.html","searchKeys":["magnetometerInitialMzx","var magnetometerInitialMzx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMzx"]},{"name":"var magnetometerInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-mzx.html","searchKeys":["magnetometerInitialMzx","var magnetometerInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMzx"]},{"name":"var magnetometerInitialMzx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMzx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-mzx.html","searchKeys":["magnetometerInitialMzx","var magnetometerInitialMzx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMzx"]},{"name":"var magnetometerInitialMzy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-mzy.html","searchKeys":["magnetometerInitialMzy","var magnetometerInitialMzy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialMzy"]},{"name":"var magnetometerInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-mzy.html","searchKeys":["magnetometerInitialMzy","var magnetometerInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialMzy"]},{"name":"var magnetometerInitialMzy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMzy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-mzy.html","searchKeys":["magnetometerInitialMzy","var magnetometerInitialMzy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialMzy"]},{"name":"var magnetometerInitialSx: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-sx.html","searchKeys":["magnetometerInitialSx","var magnetometerInitialSx: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSx"]},{"name":"var magnetometerInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-sx.html","searchKeys":["magnetometerInitialSx","var magnetometerInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSx"]},{"name":"var magnetometerInitialSx: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSx","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-sx.html","searchKeys":["magnetometerInitialSx","var magnetometerInitialSx: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSx"]},{"name":"var magnetometerInitialSy: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-sy.html","searchKeys":["magnetometerInitialSy","var magnetometerInitialSy: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSy"]},{"name":"var magnetometerInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-sy.html","searchKeys":["magnetometerInitialSy","var magnetometerInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSy"]},{"name":"var magnetometerInitialSy: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSy","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-sy.html","searchKeys":["magnetometerInitialSy","var magnetometerInitialSy: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSy"]},{"name":"var magnetometerInitialSz: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-initial-sz.html","searchKeys":["magnetometerInitialSz","var magnetometerInitialSz: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerInitialSz"]},{"name":"var magnetometerInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-initial-sz.html","searchKeys":["magnetometerInitialSz","var magnetometerInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerInitialSz"]},{"name":"var magnetometerInitialSz: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSz","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-initial-sz.html","searchKeys":["magnetometerInitialSz","var magnetometerInitialSz: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerInitialSz"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGravityGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-gyroscope-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.AccelerometerGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurement: MagnetometerSensorMeasurement?","description":"com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-gyroscope-and-magnetometer-synced-sensor-measurement/magnetometer-measurement.html","searchKeys":["magnetometerMeasurement","var magnetometerMeasurement: MagnetometerSensorMeasurement?","com.irurueta.android.navigation.inertial.collectors.GravityGyroscopeAndMagnetometerSyncedSensorMeasurement.magnetometerMeasurement"]},{"name":"var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.magnetometerMeasurementListener"]},{"name":"var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.magnetometerMeasurementListener"]},{"name":"var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.magnetometerMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/magnetometer-measurement-listener.html","searchKeys":["magnetometerMeasurementListener","var magnetometerMeasurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.magnetometerMeasurementListener"]},{"name":"var magnetometerNoiseStandardDeviation: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.magnetometerNoiseStandardDeviation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/magnetometer-noise-standard-deviation.html","searchKeys":["magnetometerNoiseStandardDeviation","var magnetometerNoiseStandardDeviation: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.magnetometerNoiseStandardDeviation"]},{"name":"var magnetometerRobustConfidence: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-confidence.html","searchKeys":["magnetometerRobustConfidence","var magnetometerRobustConfidence: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustConfidence"]},{"name":"var magnetometerRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-confidence.html","searchKeys":["magnetometerRobustConfidence","var magnetometerRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustConfidence"]},{"name":"var magnetometerRobustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-confidence.html","searchKeys":["magnetometerRobustConfidence","var magnetometerRobustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustConfidence"]},{"name":"var magnetometerRobustMaxIterations: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-max-iterations.html","searchKeys":["magnetometerRobustMaxIterations","var magnetometerRobustMaxIterations: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustMaxIterations"]},{"name":"var magnetometerRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-max-iterations.html","searchKeys":["magnetometerRobustMaxIterations","var magnetometerRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustMaxIterations"]},{"name":"var magnetometerRobustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-max-iterations.html","searchKeys":["magnetometerRobustMaxIterations","var magnetometerRobustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustMaxIterations"]},{"name":"var magnetometerRobustMethod: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-method.html","searchKeys":["magnetometerRobustMethod","var magnetometerRobustMethod: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustMethod"]},{"name":"var magnetometerRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-method.html","searchKeys":["magnetometerRobustMethod","var magnetometerRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustMethod"]},{"name":"var magnetometerRobustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-method.html","searchKeys":["magnetometerRobustMethod","var magnetometerRobustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustMethod"]},{"name":"var magnetometerRobustPreliminarySubsetSize: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-preliminary-subset-size.html","searchKeys":["magnetometerRobustPreliminarySubsetSize","var magnetometerRobustPreliminarySubsetSize: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustPreliminarySubsetSize"]},{"name":"var magnetometerRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-preliminary-subset-size.html","searchKeys":["magnetometerRobustPreliminarySubsetSize","var magnetometerRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustPreliminarySubsetSize"]},{"name":"var magnetometerRobustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-preliminary-subset-size.html","searchKeys":["magnetometerRobustPreliminarySubsetSize","var magnetometerRobustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustPreliminarySubsetSize"]},{"name":"var magnetometerRobustStopThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-stop-threshold-factor.html","searchKeys":["magnetometerRobustStopThresholdFactor","var magnetometerRobustStopThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustStopThresholdFactor"]},{"name":"var magnetometerRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-stop-threshold-factor.html","searchKeys":["magnetometerRobustStopThresholdFactor","var magnetometerRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustStopThresholdFactor"]},{"name":"var magnetometerRobustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-stop-threshold-factor.html","searchKeys":["magnetometerRobustStopThresholdFactor","var magnetometerRobustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustStopThresholdFactor"]},{"name":"var magnetometerRobustThreshold: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-threshold.html","searchKeys":["magnetometerRobustThreshold","var magnetometerRobustThreshold: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustThreshold"]},{"name":"var magnetometerRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-threshold.html","searchKeys":["magnetometerRobustThreshold","var magnetometerRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustThreshold"]},{"name":"var magnetometerRobustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-threshold.html","searchKeys":["magnetometerRobustThreshold","var magnetometerRobustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustThreshold"]},{"name":"var magnetometerRobustThresholdFactor: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/magnetometer-robust-threshold-factor.html","searchKeys":["magnetometerRobustThresholdFactor","var magnetometerRobustThresholdFactor: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.magnetometerRobustThresholdFactor"]},{"name":"var magnetometerRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/magnetometer-robust-threshold-factor.html","searchKeys":["magnetometerRobustThresholdFactor","var magnetometerRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.magnetometerRobustThresholdFactor"]},{"name":"var magnetometerRobustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/magnetometer-robust-threshold-factor.html","searchKeys":["magnetometerRobustThresholdFactor","var magnetometerRobustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.magnetometerRobustThresholdFactor"]},{"name":"var maxDurationMillis: Long","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.maxDurationMillis","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/max-duration-millis.html","searchKeys":["maxDurationMillis","var maxDurationMillis: Long","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.maxDurationMillis"]},{"name":"var maxSamples: Int","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.maxSamples","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/max-samples.html","searchKeys":["maxSamples","var maxSamples: Int","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.maxSamples"]},{"name":"var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-accelerometer-interval-detector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.AccelerometerIntervalDetector.measurementListener"]},{"name":"var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-noise-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNoiseEstimator.measurementListener"]},{"name":"var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accelerometer-norm-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.AccelerometerNormEstimator.measurementListener"]},{"name":"var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-collector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: AccelerometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorCollector.measurementListener"]},{"name":"var measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: BufferedSensorCollector.OnMeasurementListener<M, C>?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.measurementListener"]},{"name":"var measurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gravity-norm-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.GravityNormEstimator.measurementListener"]},{"name":"var measurementListener: GravitySensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gravity-sensor-collector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GravitySensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.collectors.GravitySensorCollector.measurementListener"]},{"name":"var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-gyroscope-interval-detector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.GyroscopeIntervalDetector.measurementListener"]},{"name":"var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-noise-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNoiseEstimator.measurementListener"]},{"name":"var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-gyroscope-norm-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.GyroscopeNormEstimator.measurementListener"]},{"name":"var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-collector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: GyroscopeSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorCollector.measurementListener"]},{"name":"var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-magnetometer-interval-detector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.intervals.MagnetometerIntervalDetector.measurementListener"]},{"name":"var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-noise-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNoiseEstimator.measurementListener"]},{"name":"var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-magnetometer-norm-estimator/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.calibration.noise.MagnetometerNormEstimator.measurementListener"]},{"name":"var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-collector/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: MagnetometerSensorCollector.OnMeasurementListener?","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorCollector.measurementListener"]},{"name":"var measurementListener: SensorCollector2.OnMeasurementListener<M, C>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.measurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/measurement-listener.html","searchKeys":["measurementListener","var measurementListener: SensorCollector2.OnMeasurementListener<M, C>?","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.measurementListener"]},{"name":"var measurements: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.measurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/measurements.html","searchKeys":["measurements","var measurements: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.measurements"]},{"name":"var measurements: List<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.measurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/measurements.html","searchKeys":["measurements","var measurements: List<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.measurements"]},{"name":"var measurements: List<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.measurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/measurements.html","searchKeys":["measurements","var measurements: List<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.measurements"]},{"name":"var measurements: List<StandardDeviationBodyMagneticFluxDensity>","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.measurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/measurements.html","searchKeys":["measurements","var measurements: List<StandardDeviationBodyMagneticFluxDensity>","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.measurements"]},{"name":"var minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","var minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.minimumRequiredMeasurements"]},{"name":"var minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","var minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.minimumRequiredMeasurements"]},{"name":"var minimumRequiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.minimumRequiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/minimum-required-measurements.html","searchKeys":["minimumRequiredMeasurements","var minimumRequiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.minimumRequiredMeasurements"]},{"name":"var mostRecentTimestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.mostRecentTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/most-recent-timestamp.html","searchKeys":["mostRecentTimestamp","var mostRecentTimestamp: Long","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.mostRecentTimestamp"]},{"name":"var mostRecentTimestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.mostRecentTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/most-recent-timestamp.html","searchKeys":["mostRecentTimestamp","var mostRecentTimestamp: Long","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.mostRecentTimestamp"]},{"name":"var mostRecentTimestamp: Long?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.mostRecentTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/most-recent-timestamp.html","searchKeys":["mostRecentTimestamp","var mostRecentTimestamp: Long?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.mostRecentTimestamp"]},{"name":"var nedAttitude: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.nedAttitude","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/ned-attitude.html","searchKeys":["nedAttitude","var nedAttitude: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.nedAttitude"]},{"name":"var nedBodyAccelerationTriad: AccelerationTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.nedBodyAccelerationTriad","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/ned-body-acceleration-triad.html","searchKeys":["nedBodyAccelerationTriad","var nedBodyAccelerationTriad: AccelerationTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.nedBodyAccelerationTriad"]},{"name":"var nedBodyAngularSpeedTriad: AngularSpeedTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.nedBodyAngularSpeedTriad","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/ned-body-angular-speed-triad.html","searchKeys":["nedBodyAngularSpeedTriad","var nedBodyAngularSpeedTriad: AngularSpeedTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.nedBodyAngularSpeedTriad"]},{"name":"var nedBodyMagneticFluxDensityTriad: MagneticFluxDensityTriad","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.nedBodyMagneticFluxDensityTriad","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-magnetometer-corrector/ned-body-magnetic-flux-density-triad.html","searchKeys":["nedBodyMagneticFluxDensityTriad","var nedBodyMagneticFluxDensityTriad: MagneticFluxDensityTriad","com.irurueta.android.navigation.inertial.processors.attitude.KalmanMagnetometerCorrector.nedBodyMagneticFluxDensityTriad"]},{"name":"var newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.newCalibrationMeasurementAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/new-calibration-measurement-available-listener.html","searchKeys":["newCalibrationMeasurementAvailableListener","var newCalibrationMeasurementAvailableListener: SingleSensorStaticIntervalCalibrator.OnNewCalibrationMeasurementAvailableListener<C, R>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.newCalibrationMeasurementAvailableListener"]},{"name":"var numberOfProcessedAccelerometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.numberOfProcessedAccelerometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/number-of-processed-accelerometer-measurements.html","searchKeys":["numberOfProcessedAccelerometerMeasurements","var numberOfProcessedAccelerometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.numberOfProcessedAccelerometerMeasurements"]},{"name":"var numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","var numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.numberOfProcessedGyroscopeMeasurements"]},{"name":"var numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","var numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.numberOfProcessedGyroscopeMeasurements"]},{"name":"var numberOfProcessedGyroscopeMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.numberOfProcessedGyroscopeMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-gyroscope-measurement-generator/number-of-processed-gyroscope-measurements.html","searchKeys":["numberOfProcessedGyroscopeMeasurements","var numberOfProcessedGyroscopeMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.GyroscopeMeasurementGenerator.numberOfProcessedGyroscopeMeasurements"]},{"name":"var numberOfProcessedMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.numberOfProcessedMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/number-of-processed-magnetometer-measurements.html","searchKeys":["numberOfProcessedMagnetometerMeasurements","var numberOfProcessedMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.numberOfProcessedMagnetometerMeasurements"]},{"name":"var numberOfProcessedMagnetometerMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.numberOfProcessedMagnetometerMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-magnetometer-measurement-generator/number-of-processed-magnetometer-measurements.html","searchKeys":["numberOfProcessedMagnetometerMeasurements","var numberOfProcessedMagnetometerMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.MagnetometerMeasurementGenerator.numberOfProcessedMagnetometerMeasurements"]},{"name":"var numberOfProcessedMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.numberOfProcessedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/number-of-processed-measurements.html","searchKeys":["numberOfProcessedMeasurements","var numberOfProcessedMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.numberOfProcessedMeasurements"]},{"name":"var numberOfProcessedMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.numberOfProcessedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/number-of-processed-measurements.html","searchKeys":["numberOfProcessedMeasurements","var numberOfProcessedMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.numberOfProcessedMeasurements"]},{"name":"var numberOfProcessedMeasurements: Int","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.numberOfProcessedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/number-of-processed-measurements.html","searchKeys":["numberOfProcessedMeasurements","var numberOfProcessedMeasurements: Int","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.numberOfProcessedMeasurements"]},{"name":"var numberOfProcessedMeasurements: Int","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.numberOfProcessedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/number-of-processed-measurements.html","searchKeys":["numberOfProcessedMeasurements","var numberOfProcessedMeasurements: Int","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.numberOfProcessedMeasurements"]},{"name":"var numberOfProcessedMeasurements: Int","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.numberOfProcessedMeasurements","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/number-of-processed-measurements.html","searchKeys":["numberOfProcessedMeasurements","var numberOfProcessedMeasurements: Int","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.numberOfProcessedMeasurements"]},{"name":"var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.numericalInstabilitiesListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/numerical-instabilities-listener.html","searchKeys":["numericalInstabilitiesListener","var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor.OnNumericalInstabilitiesDetectedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.numericalInstabilitiesListener"]},{"name":"var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.numericalInstabilitiesListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/numerical-instabilities-listener.html","searchKeys":["numericalInstabilitiesListener","var numericalInstabilitiesListener: KalmanAbsoluteAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.numericalInstabilitiesListener"]},{"name":"var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.numericalInstabilitiesListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/numerical-instabilities-listener.html","searchKeys":["numericalInstabilitiesListener","var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor.OnNumericalInstabilitiesDetectedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.numericalInstabilitiesListener"]},{"name":"var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.numericalInstabilitiesListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/numerical-instabilities-listener.html","searchKeys":["numericalInstabilitiesListener","var numericalInstabilitiesListener: KalmanRelativeAttitudeProcessor2.OnNumericalInstabilitiesDetectedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.numericalInstabilitiesListener"]},{"name":"var oldestTimestamp: Long?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.oldestTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/oldest-timestamp.html","searchKeys":["oldestTimestamp","var oldestTimestamp: Long?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.oldestTimestamp"]},{"name":"var onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener?","description":"com.irurueta.android.navigation.inertial.LocationPermissionService.onLocationPermissionRequestResultListener","location":"lib/com.irurueta.android.navigation.inertial/-location-permission-service/on-location-permission-request-result-listener.html","searchKeys":["onLocationPermissionRequestResultListener","var onLocationPermissionRequestResultListener: LocationPermissionService.OnLocationPermissionRequestResultListener?","com.irurueta.android.navigation.inertial.LocationPermissionService.onLocationPermissionRequestResultListener"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.outlierPanicThreshold"]},{"name":"var outlierPanicThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.outlierPanicThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/outlier-panic-threshold.html","searchKeys":["outlierPanicThreshold","var outlierPanicThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.outlierPanicThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.outlierThreshold"]},{"name":"var outlierThreshold: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.outlierThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/outlier-threshold.html","searchKeys":["outlierThreshold","var outlierThreshold: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.outlierThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.panicCounterThreshold"]},{"name":"var panicCounterThreshold: Int","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.panicCounterThreshold","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/panic-counter-threshold.html","searchKeys":["panicCounterThreshold","var panicCounterThreshold: Int","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.panicCounterThreshold"]},{"name":"var poseAvailableListener: EcefAbsolutePoseEstimator.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: EcefAbsolutePoseEstimator.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator.poseAvailableListener"]},{"name":"var poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: EcefAbsolutePoseEstimator2.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.poseAvailableListener"]},{"name":"var poseAvailableListener: LocalPoseEstimator.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: LocalPoseEstimator.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator.poseAvailableListener"]},{"name":"var poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: LocalPoseEstimator2.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.poseAvailableListener"]},{"name":"var poseAvailableListener: RelativePoseEstimator.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: RelativePoseEstimator.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator.poseAvailableListener"]},{"name":"var poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener?","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.poseAvailableListener","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/pose-available-listener.html","searchKeys":["poseAvailableListener","var poseAvailableListener: RelativePoseEstimator2.OnPoseAvailableListener?","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.poseAvailableListener"]},{"name":"var predictedBodyQ: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.predictedBodyQ","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-accelerometer-corrector/predicted-body-q.html","searchKeys":["predictedBodyQ","var predictedBodyQ: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAccelerometerCorrector.predictedBodyQ"]},{"name":"var previousBodyQ: Quaternion","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.previousBodyQ","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/previous-body-q.html","searchKeys":["previousBodyQ","var previousBodyQ: Quaternion","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.previousBodyQ"]},{"name":"var processing: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.processing","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/processing.html","searchKeys":["processing","var processing: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.processing"]},{"name":"var processing: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.processing","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/processing.html","searchKeys":["processing","var processing: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.processing"]},{"name":"var processorListener: AttitudeProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: AttitudeProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.AttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseDoubleFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseECEFAbsolutePoseProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.processorListener"]},{"name":"var processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseFusedGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseGeomagneticAttitudeProcessor.OnProcessedListener<M, S>?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseGravityProcessor.OnProcessedListener<T>?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseGravityProcessor.OnProcessedListener<T>?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.processorListener"]},{"name":"var processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseLeveledRelativeAttitudeProcessor.OnProcessedListener<M, S>?","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseLevelingProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveling-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseLevelingProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.BaseLevelingProcessor.processorListener"]},{"name":"var processorListener: BaseLocalPoseProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseLocalPoseProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.processorListener"]},{"name":"var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseRelativeGyroscopeAttitudeProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.processorListener"]},{"name":"var processorListener: BaseRelativePoseProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: BaseRelativePoseProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.processorListener"]},{"name":"var processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: KalmanAbsoluteAttitudeProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor.processorListener"]},{"name":"var processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor2/processor-listener.html","searchKeys":["processorListener","var processorListener: KalmanAbsoluteAttitudeProcessor2.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor2.processorListener"]},{"name":"var processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor/processor-listener.html","searchKeys":["processorListener","var processorListener: KalmanRelativeAttitudeProcessor.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor.processorListener"]},{"name":"var processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.processorListener","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-relative-attitude-processor2/processor-listener.html","searchKeys":["processorListener","var processorListener: KalmanRelativeAttitudeProcessor2.OnProcessedListener?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanRelativeAttitudeProcessor2.processorListener"]},{"name":"var q: Matrix?","description":"com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.q","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-process-noise-covariance-integrator/q.html","searchKeys":["q","var q: Matrix?","com.irurueta.android.navigation.inertial.processors.attitude.ProcessNoiseCovarianceIntegrator.q"]},{"name":"var qualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.qualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/quality-score-mapper.html","searchKeys":["qualityScoreMapper","var qualityScoreMapper: QualityScoreMapper<BodyKinematicsSequence<StandardDeviationTimedBodyKinematics>>","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.qualityScoreMapper"]},{"name":"var qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.qualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/quality-score-mapper.html","searchKeys":["qualityScoreMapper","var qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyKinematics>","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.qualityScoreMapper"]},{"name":"var qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.qualityScoreMapper","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/quality-score-mapper.html","searchKeys":["qualityScoreMapper","var qualityScoreMapper: QualityScoreMapper<StandardDeviationBodyMagneticFluxDensity>","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.qualityScoreMapper"]},{"name":"var readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.readyToSolveCalibrationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/ready-to-solve-calibration-listener.html","searchKeys":["readyToSolveCalibrationListener","var readyToSolveCalibrationListener: SingleSensorStaticIntervalCalibrator.OnReadyToSolveCalibrationListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.readyToSolveCalibrationListener"]},{"name":"var requiredMeasurements: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.requiredMeasurements","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/required-measurements.html","searchKeys":["requiredMeasurements","var requiredMeasurements: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.requiredMeasurements"]},{"name":"var resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.resetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/reset-listener.html","searchKeys":["resetListener","var resetListener: AccelerometerAndGyroscopeMeasurementGenerator.OnResetListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.resetListener"]},{"name":"var resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.resetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/reset-listener.html","searchKeys":["resetListener","var resetListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnResetListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.resetListener"]},{"name":"var resetListener: IntervalDetector.OnResetListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.resetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/reset-listener.html","searchKeys":["resetListener","var resetListener: IntervalDetector.OnResetListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.resetListener"]},{"name":"var resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.resetListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/reset-listener.html","searchKeys":["resetListener","var resetListener: SingleSensorCalibrationMeasurementGenerator.OnResetListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.resetListener"]},{"name":"var resultAvailable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.resultAvailable","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/result-available.html","searchKeys":["resultAvailable","var resultAvailable: Boolean","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.resultAvailable"]},{"name":"var resultUnreliable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.resultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/result-unreliable.html","searchKeys":["resultUnreliable","var resultUnreliable: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.resultUnreliable"]},{"name":"var resultUnreliable: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.resultUnreliable","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-base-accumulated-estimator/result-unreliable.html","searchKeys":["resultUnreliable","var resultUnreliable: Boolean","com.irurueta.android.navigation.inertial.calibration.noise.BaseAccumulatedEstimator.resultUnreliable"]},{"name":"var robustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-confidence.html","searchKeys":["robustConfidence","var robustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustConfidence"]},{"name":"var robustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-confidence.html","searchKeys":["robustConfidence","var robustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustConfidence"]},{"name":"var robustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-confidence.html","searchKeys":["robustConfidence","var robustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustConfidence"]},{"name":"var robustConfidence: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustConfidence","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-confidence.html","searchKeys":["robustConfidence","var robustConfidence: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustConfidence"]},{"name":"var robustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-max-iterations.html","searchKeys":["robustMaxIterations","var robustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustMaxIterations"]},{"name":"var robustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-max-iterations.html","searchKeys":["robustMaxIterations","var robustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustMaxIterations"]},{"name":"var robustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-max-iterations.html","searchKeys":["robustMaxIterations","var robustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustMaxIterations"]},{"name":"var robustMaxIterations: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustMaxIterations","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-max-iterations.html","searchKeys":["robustMaxIterations","var robustMaxIterations: Int","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustMaxIterations"]},{"name":"var robustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-method.html","searchKeys":["robustMethod","var robustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustMethod"]},{"name":"var robustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-method.html","searchKeys":["robustMethod","var robustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustMethod"]},{"name":"var robustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-method.html","searchKeys":["robustMethod","var robustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustMethod"]},{"name":"var robustMethod: RobustEstimatorMethod?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustMethod","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-method.html","searchKeys":["robustMethod","var robustMethod: RobustEstimatorMethod?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustMethod"]},{"name":"var robustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-preliminary-subset-size.html","searchKeys":["robustPreliminarySubsetSize","var robustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustPreliminarySubsetSize"]},{"name":"var robustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-preliminary-subset-size.html","searchKeys":["robustPreliminarySubsetSize","var robustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustPreliminarySubsetSize"]},{"name":"var robustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-preliminary-subset-size.html","searchKeys":["robustPreliminarySubsetSize","var robustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustPreliminarySubsetSize"]},{"name":"var robustPreliminarySubsetSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustPreliminarySubsetSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-preliminary-subset-size.html","searchKeys":["robustPreliminarySubsetSize","var robustPreliminarySubsetSize: Int","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustPreliminarySubsetSize"]},{"name":"var robustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-stop-threshold-factor.html","searchKeys":["robustStopThresholdFactor","var robustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustStopThresholdFactor"]},{"name":"var robustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-stop-threshold-factor.html","searchKeys":["robustStopThresholdFactor","var robustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustStopThresholdFactor"]},{"name":"var robustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-stop-threshold-factor.html","searchKeys":["robustStopThresholdFactor","var robustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustStopThresholdFactor"]},{"name":"var robustStopThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustStopThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-stop-threshold-factor.html","searchKeys":["robustStopThresholdFactor","var robustStopThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustStopThresholdFactor"]},{"name":"var robustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-threshold.html","searchKeys":["robustThreshold","var robustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustThreshold"]},{"name":"var robustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-threshold.html","searchKeys":["robustThreshold","var robustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustThreshold"]},{"name":"var robustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-threshold.html","searchKeys":["robustThreshold","var robustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustThreshold"]},{"name":"var robustThreshold: Double?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustThreshold","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-threshold.html","searchKeys":["robustThreshold","var robustThreshold: Double?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustThreshold"]},{"name":"var robustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/robust-threshold-factor.html","searchKeys":["robustThresholdFactor","var robustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.robustThresholdFactor"]},{"name":"var robustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-accelerometer-internal-calibrator-builder/robust-threshold-factor.html","searchKeys":["robustThresholdFactor","var robustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.AccelerometerInternalCalibratorBuilder.robustThresholdFactor"]},{"name":"var robustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-gyroscope-internal-calibrator-builder/robust-threshold-factor.html","searchKeys":["robustThresholdFactor","var robustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.GyroscopeInternalCalibratorBuilder.robustThresholdFactor"]},{"name":"var robustThresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustThresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/robust-threshold-factor.html","searchKeys":["robustThresholdFactor","var robustThresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.robustThresholdFactor"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.BatteryTemperatureService.running","location":"lib/com.irurueta.android.navigation.inertial/-battery-temperature-service/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.BatteryTemperatureService.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.running","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-calibration-measurement-generator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.CalibrationMeasurementGenerator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.running","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.running","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.running","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-attitude-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.AttitudeEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-base-relative-gyroscope-attitude-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.BaseRelativeGyroscopeAttitudeEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-gravity-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GravityEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-absolute-attitude-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanAbsoluteAttitudeEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-kalman-relative-attitude-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.KalmanRelativeAttitudeEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.running"]},{"name":"var running: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.running","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/running.html","searchKeys":["running","var running: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.running"]},{"name":"var s: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.s","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-sabatini-external-acceleration-covariance-matrix-estimator/s.html","searchKeys":["s","var s: Double","com.irurueta.android.navigation.inertial.processors.attitude.SabatiniExternalAccelerationCovarianceMatrixEstimator.s"]},{"name":"var sensorType: AccelerometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-accelerometer-sensor-measurement/sensor-type.html","searchKeys":["sensorType","var sensorType: AccelerometerSensorType","com.irurueta.android.navigation.inertial.collectors.AccelerometerSensorMeasurement.sensorType"]},{"name":"var sensorType: AttitudeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-attitude-sensor-measurement/sensor-type.html","searchKeys":["sensorType","var sensorType: AttitudeSensorType","com.irurueta.android.navigation.inertial.collectors.AttitudeSensorMeasurement.sensorType"]},{"name":"var sensorType: GyroscopeSensorType","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/sensor-type.html","searchKeys":["sensorType","var sensorType: GyroscopeSensorType","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.sensorType"]},{"name":"var sensorType: MagnetometerSensorType","description":"com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.sensorType","location":"lib/com.irurueta.android.navigation.inertial.collectors/-magnetometer-sensor-measurement/sensor-type.html","searchKeys":["sensorType","var sensorType: MagnetometerSensorType","com.irurueta.android.navigation.inertial.collectors.MagnetometerSensorMeasurement.sensorType"]},{"name":"var smallestDisplacement: Float","description":"com.irurueta.android.navigation.inertial.LocationService.smallestDisplacement","location":"lib/com.irurueta.android.navigation.inertial/-location-service/smallest-displacement.html","searchKeys":["smallestDisplacement","var smallestDisplacement: Float","com.irurueta.android.navigation.inertial.LocationService.smallestDisplacement"]},{"name":"var staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleDetectedMeasurementsListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/stale-detected-measurements-listener.html","searchKeys":["staleDetectedMeasurementsListener","var staleDetectedMeasurementsListener: SensorMeasurementSyncer.OnStaleDetectedMeasurementsListener<M, S>?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.staleDetectedMeasurementsListener"]},{"name":"var startOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/start-offset.html","searchKeys":["startOffset","var startOffset: Long?","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startOffset"]},{"name":"var startOffset: Long?","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startOffset","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/start-offset.html","searchKeys":["startOffset","var startOffset: Long?","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startOffset"]},{"name":"var startTimestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-buffered-sensor-collector/start-timestamp.html","searchKeys":["startTimestamp","var startTimestamp: Long","com.irurueta.android.navigation.inertial.collectors.BufferedSensorCollector.startTimestamp"]},{"name":"var startTimestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-collector2/start-timestamp.html","searchKeys":["startTimestamp","var startTimestamp: Long","com.irurueta.android.navigation.inertial.collectors.SensorCollector2.startTimestamp"]},{"name":"var startTimestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.startTimestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/start-timestamp.html","searchKeys":["startTimestamp","var startTimestamp: Long","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.startTimestamp"]},{"name":"var staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","var staticIntervalDetectedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalDetectedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.staticIntervalDetectedListener"]},{"name":"var staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","var staticIntervalDetectedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalDetectedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.staticIntervalDetectedListener"]},{"name":"var staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","var staticIntervalDetectedListener: IntervalDetector.OnStaticIntervalDetectedListener<I>?","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.staticIntervalDetectedListener"]},{"name":"var staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.staticIntervalDetectedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/static-interval-detected-listener.html","searchKeys":["staticIntervalDetectedListener","var staticIntervalDetectedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalDetectedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.staticIntervalDetectedListener"]},{"name":"var staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-and-gyroscope-measurement-generator/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","var staticIntervalSkippedListener: AccelerometerAndGyroscopeMeasurementGenerator.OnStaticIntervalSkippedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerAndGyroscopeMeasurementGenerator.staticIntervalSkippedListener"]},{"name":"var staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-accelerometer-gyroscope-and-magnetometer-measurement-generator/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","var staticIntervalSkippedListener: AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.OnStaticIntervalSkippedListener?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.AccelerometerGyroscopeAndMagnetometerMeasurementGenerator.staticIntervalSkippedListener"]},{"name":"var staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.staticIntervalSkippedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals.measurements/-single-sensor-calibration-measurement-generator/static-interval-skipped-listener.html","searchKeys":["staticIntervalSkippedListener","var staticIntervalSkippedListener: SingleSensorCalibrationMeasurementGenerator.OnStaticIntervalSkippedListener<C>?","com.irurueta.android.navigation.inertial.calibration.intervals.measurements.SingleSensorCalibrationMeasurementGenerator.staticIntervalSkippedListener"]},{"name":"var stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.stoppedListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/stopped-listener.html","searchKeys":["stoppedListener","var stoppedListener: SingleSensorStaticIntervalCalibrator.OnStoppedListener<C>?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.stoppedListener"]},{"name":"var syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.syncedMeasurementListener","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement-syncer/synced-measurement-listener.html","searchKeys":["syncedMeasurementListener","var syncedMeasurementListener: SensorMeasurementSyncer.OnSyncedMeasurementsListener<M, S>?","com.irurueta.android.navigation.inertial.collectors.SensorMeasurementSyncer.syncedMeasurementListener"]},{"name":"var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/threshold-factor.html","searchKeys":["thresholdFactor","var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.thresholdFactor"]},{"name":"var thresholdFactor: Double","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.thresholdFactor","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/threshold-factor.html","searchKeys":["thresholdFactor","var thresholdFactor: Double","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.thresholdFactor"]},{"name":"var timeConstant: Double","description":"com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.timeConstant","location":"lib/com.irurueta.android.navigation.inertial.estimators.filter/-averaging-filter/time-constant.html","searchKeys":["timeConstant","var timeConstant: Double","com.irurueta.android.navigation.inertial.estimators.filter.AveragingFilter.timeConstant"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-relative-gyroscope-attitude-processor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.BaseRelativeGyroscopeAttitudeProcessor.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-gyroscope-predictor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.attitude.KalmanGyroscopePredictor.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.timeIntervalSeconds"]},{"name":"var timeIntervalSeconds: Double","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.timeIntervalSeconds","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-relative-pose-processor/time-interval-seconds.html","searchKeys":["timeIntervalSeconds","var timeIntervalSeconds: Double","com.irurueta.android.navigation.inertial.processors.pose.BaseRelativePoseProcessor.timeIntervalSeconds"]},{"name":"var timestamp: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/timestamp.html","searchKeys":["timestamp","var timestamp: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.timestamp"]},{"name":"var timestamp: Date","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/timestamp.html","searchKeys":["timestamp","var timestamp: Date","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.timestamp","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.timestamp","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.timestamp"]},{"name":"var timestamp: Date?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.timestamp","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/timestamp.html","searchKeys":["timestamp","var timestamp: Date?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.timestamp"]},{"name":"var timestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.timestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-sensor-measurement/timestamp.html","searchKeys":["timestamp","var timestamp: Long","com.irurueta.android.navigation.inertial.collectors.SensorMeasurement.timestamp"]},{"name":"var timestamp: Long","description":"com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement.timestamp","location":"lib/com.irurueta.android.navigation.inertial.collectors/-synced-sensor-measurement/timestamp.html","searchKeys":["timestamp","var timestamp: Long","com.irurueta.android.navigation.inertial.collectors.SyncedSensorMeasurement.timestamp"]},{"name":"var timestamp: Long","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.timestamp","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-gravity-processor/timestamp.html","searchKeys":["timestamp","var timestamp: Long","com.irurueta.android.navigation.inertial.processors.attitude.BaseGravityProcessor.timestamp"]},{"name":"var unreliableGravityNormEstimationListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.unreliableGravityNormEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-accelerometer-calibrator/unreliable-gravity-norm-estimation-listener.html","searchKeys":["unreliableGravityNormEstimationListener","var unreliableGravityNormEstimationListener: SingleSensorStaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalAccelerometerCalibrator.unreliableGravityNormEstimationListener"]},{"name":"var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.unreliableGravityNormEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-and-gyroscope-calibrator/unreliable-gravity-norm-estimation-listener.html","searchKeys":["unreliableGravityNormEstimationListener","var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerAndGyroscopeCalibrator.OnUnreliableGravityEstimationListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerAndGyroscopeCalibrator.unreliableGravityNormEstimationListener"]},{"name":"var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.unreliableGravityNormEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-calibrator/unreliable-gravity-norm-estimation-listener.html","searchKeys":["unreliableGravityNormEstimationListener","var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerCalibrator.OnUnreliableGravityEstimationListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerCalibrator.unreliableGravityNormEstimationListener"]},{"name":"var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.unreliableGravityNormEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/unreliable-gravity-norm-estimation-listener.html","searchKeys":["unreliableGravityNormEstimationListener","var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.OnUnreliableGravityEstimationListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.unreliableGravityNormEstimationListener"]},{"name":"var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.unreliableGravityNormEstimationListener","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/unreliable-gravity-norm-estimation-listener.html","searchKeys":["unreliableGravityNormEstimationListener","var unreliableGravityNormEstimationListener: StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.OnUnreliableGravityEstimationListener?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.unreliableGravityNormEstimationListener"]},{"name":"var unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.unreliableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-measurement-estimator/unreliable-listener.html","searchKeys":["unreliableListener","var unreliableListener: AccumulatedMeasurementEstimator.OnUnreliableListener<A>?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedMeasurementEstimator.unreliableListener"]},{"name":"var unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>?","description":"com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.unreliableListener","location":"lib/com.irurueta.android.navigation.inertial.calibration.noise/-accumulated-triad-estimator/unreliable-listener.html","searchKeys":["unreliableListener","var unreliableListener: AccumulatedTriadEstimator.OnUnreliableListener<A>?","com.irurueta.android.navigation.inertial.calibration.noise.AccumulatedTriadEstimator.unreliableListener"]},{"name":"var updateInterval: Long","description":"com.irurueta.android.navigation.inertial.LocationService.updateInterval","location":"lib/com.irurueta.android.navigation.inertial/-location-service/update-interval.html","searchKeys":["updateInterval","var updateInterval: Long","com.irurueta.android.navigation.inertial.LocationService.updateInterval"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccurateLevelingEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/use-accurate-leveling-estimator.html","searchKeys":["useAccurateLevelingEstimator","var useAccurateLevelingEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccurateLevelingEstimator"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateLevelingProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useAccurateLevelingProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/use-accurate-leveling-processor.html","searchKeys":["useAccurateLevelingProcessor","var useAccurateLevelingProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useAccurateLevelingProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/use-accurate-relative-gyroscope-attitude-estimator.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeEstimator","var useAccurateRelativeGyroscopeAttitudeEstimator: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useAccurateRelativeGyroscopeAttitudeEstimator"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/use-accurate-relative-gyroscope-attitude-processor.html","searchKeys":["useAccurateRelativeGyroscopeAttitudeProcessor","var useAccurateRelativeGyroscopeAttitudeProcessor: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useAccurateRelativeGyroscopeAttitudeProcessor"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-relative-pose-estimator2/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.RelativePoseEstimator2.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectAttitudeInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useIndirectAttitudeInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-relative-pose-processor/use-indirect-attitude-interpolation.html","searchKeys":["useIndirectAttitudeInterpolation","var useIndirectAttitudeInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedRelativePoseProcessor.useIndirectAttitudeInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-leveled-relative-attitude-estimator2/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.LeveledRelativeAttitudeEstimator2.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useIndirectInterpolation"]},{"name":"var useIndirectInterpolation: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useIndirectInterpolation","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-leveled-relative-attitude-processor/use-indirect-interpolation.html","searchKeys":["useIndirectInterpolation","var useIndirectInterpolation: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseLeveledRelativeAttitudeProcessor.useIndirectInterpolation"]},{"name":"var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useLeveledRelativeAttitudeRespectStart"]},{"name":"var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useLeveledRelativeAttitudeRespectStart"]},{"name":"var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-e-c-e-f-absolute-pose-processor/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseECEFAbsolutePoseProcessor.useLeveledRelativeAttitudeRespectStart"]},{"name":"var useLeveledRelativeAttitudeRespectStart: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.useLeveledRelativeAttitudeRespectStart","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-local-pose-processor/use-leveled-relative-attitude-respect-start.html","searchKeys":["useLeveledRelativeAttitudeRespectStart","var useLeveledRelativeAttitudeRespectStart: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseLocalPoseProcessor.useLeveledRelativeAttitudeRespectStart"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.useWorldMagneticModel"]},{"name":"var useWorldMagneticModel: Boolean","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useWorldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/use-world-magnetic-model.html","searchKeys":["useWorldMagneticModel","var useWorldMagneticModel: Boolean","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.useWorldMagneticModel"]},{"name":"var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-calibrator/window-size.html","searchKeys":["windowSize","var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalCalibrator.windowSize"]},{"name":"var windowSize: Int","description":"com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.windowSize","location":"lib/com.irurueta.android.navigation.inertial.calibration.intervals/-interval-detector/window-size.html","searchKeys":["windowSize","var windowSize: Int","com.irurueta.android.navigation.inertial.calibration.intervals.IntervalDetector.windowSize"]},{"name":"var worldMagneticModel: <Error class: unknown class>","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: <Error class: unknown class>","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-single-sensor-static-interval-magnetometer-calibrator/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.calibration.SingleSensorStaticIntervalMagnetometerCalibrator.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-accelerometer-gyroscope-and-magnetometer-calibrator/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalAccelerometerGyroscopeAndMagnetometerCalibrator.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.calibration/-static-interval-magnetometer-calibrator/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.calibration.StaticIntervalMagnetometerCalibrator.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.calibration.builder/-magnetometer-internal-calibrator-builder/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.calibration.builder.MagnetometerInternalCalibratorBuilder.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-double-fused-geomagnetic-attitude-estimator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.DoubleFusedGeomagneticAttitudeEstimator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-fused-geomagnetic-attitude-estimator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.FusedGeomagneticAttitudeEstimator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.attitude/-geomagnetic-attitude-estimator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.attitude.GeomagneticAttitudeEstimator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-ecef-absolute-pose-estimator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.pose.EcefAbsolutePoseEstimator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.estimators.pose/-local-pose-estimator2/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.estimators.pose.LocalPoseEstimator2.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-double-fused-geomagnetic-attitude-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.BaseDoubleFusedGeomagneticAttitudeProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-fused-geomagnetic-attitude-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.BaseFusedGeomagneticAttitudeProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-base-geomagnetic-attitude-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.BaseGeomagneticAttitudeProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor3/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor3.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor4/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor4.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.attitude/-kalman-absolute-attitude-processor5/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.attitude.KalmanAbsoluteAttitudeProcessor5.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-e-c-e-f-absolute-pose-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedECEFAbsolutePoseProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-double-fused-local-pose-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.pose.BaseDoubleFusedLocalPoseProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-e-c-e-f-absolute-pose-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedECEFAbsolutePoseProcessor.worldMagneticModel"]},{"name":"var worldMagneticModel: WorldMagneticModel?","description":"com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.worldMagneticModel","location":"lib/com.irurueta.android.navigation.inertial.processors.pose/-base-fused-local-pose-processor/world-magnetic-model.html","searchKeys":["worldMagneticModel","var worldMagneticModel: WorldMagneticModel?","com.irurueta.android.navigation.inertial.processors.pose.BaseFusedLocalPoseProcessor.worldMagneticModel"]},{"name":"var wx: Float","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wx","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/wx.html","searchKeys":["wx","var wx: Float","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wx"]},{"name":"var wy: Float","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wy","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/wy.html","searchKeys":["wy","var wy: Float","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wy"]},{"name":"var wz: Float","description":"com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wz","location":"lib/com.irurueta.android.navigation.inertial.collectors/-gyroscope-sensor-measurement/wz.html","searchKeys":["wz","var wz: Float","com.irurueta.android.navigation.inertial.collectors.GyroscopeSensorMeasurement.wz"]}]